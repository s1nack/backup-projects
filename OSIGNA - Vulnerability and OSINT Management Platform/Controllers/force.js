// Data Used for this example...
var dataSet1 = [
  {"group":1, xCoordinate: "Legend String 1", magnitude: 54, link: "http://www.if4it.com"},
  {"group":2, xCoordinate: "Legend String 2", magnitude: 21, link: "http://www.if4it.com/glossary.html"},
  {"group":3, xCoordinate: "Legend String 3", magnitude: 31, link: "http://www.if4it.com/resources.html"},
  {"group":4, xCoordinate: "Legend String 4", magnitude: 14, link: "http://www.if4it.com/taxonomy.html"},
  {"group":5, xCoordinate: "Legend String 5", magnitude: 14, link: "http://www.if4it.com/taxonomy.html"},
  {"group":6, xCoordinate: "Legend String 6", magnitude: 14, link: "http://www.if4it.com/taxonomy.html"}];

var width = 800,
    height = 500;

var color = d3.scale.category20();

var force = d3.layout.force()
    .charge(-120)
    //.linkDistance(200)
	.linkDistance( function(d) { return Math.floor((Math.random()*200)+100); } )
    .size([width, height]);
	
var nodes = force.nodes(),
	links = force.links();
	
var synchronizedMouseOver = function() {
	var circle = d3.select(this);
	circle.style('stroke', '#bbb');
};

var synchronizedMouseOut = function() {
	//var foo = resetBorders();
	//var circle = d3.select(this);
	//var colorValue = circle.attr("color_value");
    //circle.style('fill', colorValue);
	//var legend = document.getElementById('legend');
	//legend.innerHTML = '';
};

var synchronizedMouseDown = function() {
	var foo = resetBorders();
	var circle = d3.select(this);
    //circle.style('fill', '#000');
	circle.style('stroke', 'red');
	var legend = document.getElementById('legend');
	legend.style.border = 'border:1px solid #aaa;';
	var ip = circle.attr("detail");
	var url = circle.attr("url");
	var name = circle.attr("name");
	
	var legendtitle = document.getElementById('legend-title');
	legendtitle.innerHTML = "<p style='height:10px;color:maroon;margin-left:10px;font-size:120%;font-weight:bold;'>" + name 
	+ "<span style='color:#777;font-size:90%;font-weight:normal;margin-left:15px;'>Internal network</span>"
	+ "<div style='position:absolute;margin-left:500px;margin-top:-15px;width:150px;'><span><img width='12' height='12' src='http://www.datalabsecurity.com/webscan/resources/img/Button_Next.png' /></span><span style='margin-left:5px;text-decoration:underline;'>Scan now</span></div>"
	+ "</p>";
	
	var legendserverinfo = document.getElementById('legend-serverinfo');
	legendserverinfo.innerHTML = "<p style='color:#black;margin-left:10px;margin-top:10px;'>"
	+ "IP : <span style='color:maroon;font-size:115%;'>" + ip + "</span></br>"
	+ "Domain : <span style='color:maroon;font-size:115%;'>" + url + "</span></br>"
	+ "</p>";
	
	var legendsecuinfo = document.getElementById('legend-secuinfo');
	legendsecuinfo.innerHTML = "<span style='font-size:120%;'>Malware status : </span>";
	
	// legend.innerHTML = "<div style='border-bottom-width:1px;border-bottom-style:solid;border-bottom-color:#ddd;'><p style='height:10px;color:maroon;margin-left:10px;font-size:120%;font-weight:bold;'>" + name 
	// + "<span style='color:#777;font-size:90%;font-weight:normal;margin-left:15px;'>Internal network</span>"
	// + "<div style='position:absolute;margin-left:500px;margin-top:-15px;width:150px;'><span><img width='12' height='12' src='http://www.datalabsecurity.com/webscan/resources/img/Button_Next.png' /></span><span style='margin-left:5px;text-decoration:underline;'>Scan now</span></div>"
	// + "</p></div>"

	// + "<p style='color:#black;margin-left:10px;margin-top:10px;'>"
	// + "IP : <span style='color:maroon;font-size:115%;'>" + ip + "</span></br>" 
	// + "Domain : <span style='color:maroon;font-size:115%;'>" + url + "</span></br>"
	// + "</br><span style='font-size:120%;'>Malware status : </span>"
	// + "<div style='position:absolute;margin-left:115px;margin-top:-35px;'>"
	// + "<button style='width:60px;height:20px !important;' class='action green'><span style='margin-left:-10px;margin-top:-3px;' class='label'>CLEAN</span></button></div>"
	// + "<div style='position:absolute;margin-left:10px;'>"
	// + "</br><span style='font-size:120%;'>Imported files : </span></br>"
	// + "<span style='color:#777;'>foo.olfeo.com/data2/</span><span style='color:black;'>provide2.js</span></br>"
	// + "<span style='color:#777;'>foo.olfeo.com/api/jsapi/</span><span style='color:black;'>provide.js</span></br>"
	// + "<span style='color:#777;'>foo.olfeo.com/api/jsapi/</span><span style='color:black;'>provide3.js</span></br>"
	// + "<span style='color:#777;'>foo.olfeo.com/api/jsapi/</span><span style='color:black;'>set.js</span></br>"
	// + "<span style='color:#777;'>foo.olfeo.com/api/jsapi/</span><span style='color:black;'>get.js</span></br>"
	// + "</div>"
	// + "</p>";
};

var resetBorders = function() {
	var circles = svg.selectAll("circle.node")
	.style("stroke", "white");
}



// Color Scale Handling...
var colorScale = d3.scale.category20c();

var svg = d3.select("#chart").append("svg:svg")
    .attr("width", width)
    .attr("height", height);
	
/*	LEGEND :
svg.selectAll("circle")
        .data(dataSet1).enter().append("svg:circle") // Append circle elements
			.attr("stroke-width", ".5")
			//.style("fill", function(d, i) { return colorScale(i); }) // Bar fill color
			.style("fill", function(d) { return color(d.group); })
			//.style("fill", function(d, i) { return "black"; })
			//.attr("index_value", function(d, i) { return "index-" + i; })
			//.attr("class", function(d, i) { return "bars-" + chartID + "-legendBullet-index-" + i; })
			.attr("cx", function(d, i) { return 5; })
			.attr("cy", function(d, i) { return i*20 + 100; })
			.attr("r", 5)
			.attr("color_value", function(d, i) { return colorScale(i); });
			
svg.selectAll("a.legend_link")
	.data(dataSet1) // Instruct to bind dataSet to text elements
		.enter().append("svg:a") // Append legend elements
		//.attr("xlink:href", function(d) { return d.link; })
		.append("text")
		//.attr("text-anchor", "left")
		.attr("x", function(d, i) { return 15;})
		.attr("y", function(d,i) {return i*20 + 92; })
		.attr("dx", 0)
		.attr("dy", "1em") // Controls padding to place text above bars
		.text(function(d) { return d.xCoordinate;})
		.style("fill", "#777")
		.attr("index_value", function(d, i) { return "index-" + i; });
*/


function restart() {
console.log("restart");
d3.json("http://www.datalabsecurity.com/webscan/resources/data/externalcontent.json", function(json) {
  force
      .nodes(json.nodes)
      .links(json.links)
      .start();

  var link = svg.selectAll("line.link")
      .data(json.links)
    .enter().append("svg:line")
      .attr("class", "link")
	  .style("fill", "#fff")
      .style("stroke-width", function(d) { return Math.sqrt(d.value); });
	  
	 var node = svg.selectAll("g.node")
		.data(json.nodes)
		.enter().append("svg:g")
		.attr("class", "node")
		
	node.append("svg:circle")
		.on('mouseover', synchronizedMouseOver)
		.on('mouseout', synchronizedMouseOut)
		.on('mousedown', synchronizedMouseDown)
		.attr("color_value", function(d, i) { return colorScale(i); }) // Bar fill color...
      .attr("class", "node")
      .attr("r", function(d) { return d.radius; })
	  .attr("detail", function(d) { return d.ip; })
	  .attr("url", function(d) { return d.url; })
	  .attr("name", function(d) { return d.name; })
      .style("fill", function(d) { return color(d.group); })
	  .style("stroke", function(d) { return d.stroke; });
		
	node.append("svg:text") 
      .style("pointer-events", "none") 
      .attr("fill", "#555") 
      .attr("font-size", "11px") 
      .attr("dx", "8") 
      .attr("dy", ".35em") 
      .text(function(d) { return "@" + d.name; }); 

    node.append("svg:title") 
      .style("pointer-events", "none") 
      .text(function(d) { return "@" + d.name; }); 
		
	  
  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });
	node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; }); 
  });
});
}

restart();


