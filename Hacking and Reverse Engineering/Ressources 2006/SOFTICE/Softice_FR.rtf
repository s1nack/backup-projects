{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1036\deflangfe1036{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\froman\fcharset128\fprq1{\*\panose 00000000000000000000}Mincho{\*\falt ??};}{\f16\fnil\fcharset129\fprq1{\*\panose 00000000000000000000}Batang{\*\falt ??};}
{\f17\fnil\fcharset134\fprq2{\*\panose 00000000000000000000}SimSun{\*\falt ??};}{\f18\fnil\fcharset136\fprq2{\*\panose 00000000000000000000}PMingLiU{\*\falt ????};}{\f19\fmodern\fcharset128\fprq1{\*\panose 00000000000000000000}Gothic{\*\falt ?????};}
{\f20\fmodern\fcharset129\fprq1{\*\panose 00000000000000000000}Dotum{\*\falt ??};}{\f21\fmodern\fcharset134\fprq1{\*\panose 00000000000000000000}SimHei{\*\falt ??};}{\f22\fmodern\fcharset136\fprq1{\*\panose 00000000000000000000}MingLiU{\*\falt ???};}
{\f23\froman\fcharset128\fprq1{\*\panose 00000000000000000000}MS Mincho{\*\falt ?? ??};}{\f24\froman\fcharset129\fprq1{\*\panose 00000000000000000000}Gulim{\*\falt ??};}
{\f25\fmodern\fcharset128\fprq1{\*\panose 00000000000000000000}MS Gothic{\*\falt ?? ????};}{\f26\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Century;}{\f27\fswiss\fcharset0\fprq3{\*\panose 020b0604030504040204}Tahoma;}
{\f28\froman\fcharset238\fprq2 Times New Roman CE;}{\f29\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f31\froman\fcharset161\fprq2 Times New Roman Greek;}{\f32\froman\fcharset162\fprq2 Times New Roman Tur;}
{\f33\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f34\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f35\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f36\fswiss\fcharset238\fprq2 Arial CE;}{\f37\fswiss\fcharset204\fprq2 Arial Cyr;}
{\f39\fswiss\fcharset161\fprq2 Arial Greek;}{\f40\fswiss\fcharset162\fprq2 Arial Tur;}{\f41\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f42\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f43\fswiss\fcharset186\fprq2 Arial Baltic;}
{\f44\fmodern\fcharset238\fprq1 Courier New CE;}{\f45\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f47\fmodern\fcharset161\fprq1 Courier New Greek;}{\f48\fmodern\fcharset162\fprq1 Courier New Tur;}{\f49\fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f50\fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f51\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;
\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \snext0 Normal;}{\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 heading 1;}{\s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 heading 2;}{\s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 
heading 3;}{\s4\ql \li1416\ri0\keepn\widctlpar\faauto\rin0\lin1416\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 heading 4;}{\s5\ql \li0\ri0\keepn\widctlpar\faauto\rin0\lin0\itap0 
\b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 heading 5;}{\s6\ql \li0\ri0\keepn\widctlpar\brdrt\brdrsh\brdrs\brdrw10\brsp20 \brdrl\brdrsh\brdrs\brdrw10\brsp80 \brdrb\brdrsh\brdrs\brdrw10\brsp20 \brdrr
\brdrsh\brdrs\brdrw10\brsp80 \faauto\rin0\lin0\itap0 \b\f2\fs32\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 heading 6;}{\s7\ql \li0\ri0\keepn\widctlpar\faauto\rin0\lin0\itap0 
\b\f2\fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 heading 7;}{\s8\ql \li0\ri0\keepn\widctlpar\brdrt\brdrs\brdrw10\brsp20 \brdrl\brdrs\brdrw10\brsp80 \brdrb\brdrs\brdrw10\brsp20 \brdrr\brdrs\brdrw10\brsp80 
\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs32\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 heading 8;}{\s9\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs32\ul\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\s15\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 
\fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 \sautoupd toc 1;}{\s16\ql \li240\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 
\sbasedon0 \snext0 \sautoupd toc 2;}{\s17\ql \li480\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 \sautoupd toc 3;}{
\s18\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 \sautoupd toc 4;}{
\s19\ql \li960\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin960\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 \sautoupd toc 5;}{
\s20\ql \li1200\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1200\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 \sautoupd toc 6;}{
\s21\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 \sautoupd toc 7;}{
\s22\ql \li1680\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1680\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 \sautoupd toc 8;}{
\s23\ql \li1920\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1920\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext0 \sautoupd toc 9;}{\s24\ql \li0\ri0\widctlpar
\tqc\tx4536\tqr\tx9072\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 \sbasedon0 \snext24 footer;}{\*\cs25 \additive \sbasedon10 page number;}{\*\cs26 \additive \ul\cf2 \sbasedon10 Hyperlink;}}{\*\revtbl {Unknown;}
}{\info{\title SoftIce Version Fran\'e7aise}{\author .}{\operator .}{\creatim\yr2000\mo4\dy17\hr12\min39}{\revtim\yr2000\mo4\dy17\hr12\min39}{\printim\yr2000\mo4\dy17\hr11\min57}{\version2}{\edmins0}{\nofpages3}{\nofwords37875}{\nofchars215891}
{\*\company .}{\nofcharsws265129}{\vern8249}}\margl1134\margr1134\margt567\margb567 \deftab708\widowctrl\ftnbj\aenddoc\hyphhotz425\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1134
\dgvorigin567\dghshow1\dgvshow1\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\pgbrdropt32\sectdefaultcl {\footer \pard\plain 
\s24\ql \li0\ri0\widctlpar\tqc\tx4536\tqr\tx9072\pvpara\phmrg\posxr\posy0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field{\*\fldinst {\cs25 PAGE  }}{\fldrslt {
\cs25\lang1024\langfe1024\noproof 1}}}{\cs25 
\par }\pard \s24\ql \li0\ri360\widctlpar\tqc\tx4536\tqr\tx9072\aspalpha\aspnum\faauto\adjustright\rin360\lin0\itap0 {
\par }}{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}
{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8
\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \qc \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {
\b\fs32\ul Soft-ICE Guide de l'utilisateur.
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {
\par 
\par 
\par }{\field\fldedit{\*\fldinst { TOC \\o "1-3" \\h \\z }}{\fldrslt {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604258"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200350038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 1}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604258 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200350038000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 4}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604259"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200350039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 1.1 Description du produit}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604259 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200350039000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 4}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604260"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 1.2 Utilisation de ce Manuel}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604260 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360030000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 5}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604261"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 1.3 Mat\'e9riel N\'e9cessaire}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604261 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360031000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 5}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604262"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 2}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604262 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360032000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 7}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604263"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 2.1 Les Disquettes}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604263 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360033000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 7}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604264"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 2.2 Chargement de Soft-ICE}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604264 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360034000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 7}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604265"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 2.2.1 Chargement sans M\'e9moire Etendue}{\lang1024\langfe1024\noproof\webhidden \tab 
}{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604265 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360035000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 8}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604266"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 2.2.2 Chargement avec M\'e9moire Etendue}{\lang1024\langfe1024\noproof\webhidden \tab 
}{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604266 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360036000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 8}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604267"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 2.2.3 Configuration de Soft-ICE pour une Installation Personnalis\'e9e}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604267 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360037000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 9}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604268"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 2.3 D\'e9chargement de Soft-ICE}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604268 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360038000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 10}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604269"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 2.4 Recharger Soft-ICE}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604269 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200360039000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 10}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604270"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 3}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604270 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370030000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 11}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604271"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.1 Introduction}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604271 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370031000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 11}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604272"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.2 Activation de la fen\'eatre}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604272 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370032000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 11}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604273"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.3 Sortie de la fen\'eatre}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604273 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370033000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 11}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604274"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.4 Changement de taille de la fen\'eatre}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604274 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370034000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 11}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604275"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.5 D\'e9placement de la fen\'eatre}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604275 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370035000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 12}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604276"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.6 Touches d'\'e9dition de ligne}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604276 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370036000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 12}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604277"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.7 Ligne d'Etat Interactive}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604277 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370037000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 13}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604278"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.8 Syntaxe des Commandes}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604278 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370038000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 13}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604279"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.8.1 Sp\'e9cification d'Addresses M\'e9moire}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604279 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200370039000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 13}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604280"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.9 Touches de Fonction}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604280 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380030000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 14}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604281"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.10 Aide}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604281 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380031000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 15}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604282"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 3.11 Didacticiel}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604282 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380032000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 15}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604283"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 4}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604283 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380033000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 29}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604284"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 4.1 Introduction}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604284 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380034000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 29}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604285"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 4.2 Positionner les points d'arr\'eat}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604285 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380035000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 29}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604286"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 4.3 Manipulation des points d'arr\'eat}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604286 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380036000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 35}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604287"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 5}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604287 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380037000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 38}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604288"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.1 Commandes d'\'e9dition et d'affichage}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604288 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380038000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 38}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604289"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.2 Commandes des Ports I/O}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604289 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200380039000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 43}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604290"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.3 Commandes du Contr\'f4le De transfert}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604290 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390030000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 44}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604291"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.4 Commandes du Mode Debug}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604291 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390031000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 49}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604292"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.5 Commandes Utilitaires}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604292 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390032000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 51}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604293"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.6 Commandes Sp\'e9cialis\'e9es de D\'e9bugging}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604293 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390033000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 54}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604294"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.7 Commandes de fen\'eatrage}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604294 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390034000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 59}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604295"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.8 Commandes de personnalisation du D\'e9bugger}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604295 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390035000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 62}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604296"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.9 Commandes de Contr\'f4le D'\'e9cran}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604296 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390036000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 66}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604297"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 5.10 Commandes symboles et ligne source}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604297 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390037000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 69}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604298"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 6}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604298 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390038000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 73}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604299"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 6.1 Introduction}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604299 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003200390039000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 73}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604300"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 6.2 Chargement de Soft-ICE depuis le prompt du DOS}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604300 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300030000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 73}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604301"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 6.3 Chargement de Soft-ICE comme un pilote de p\'e9riph\'e9rique}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604301 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300031000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 74}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604302"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 6.3.1 Commutateurs de chargement de Soft-ICE}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604302 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300032000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 74}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604303"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 6.4 Le fichier d'initialisation S-ICE.DAT}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604303 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300033000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 76}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604304"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 6.4.1 Options Sp\'e9ciales De configuration}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604304 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300034000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 76}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604305"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 6.4.2 Affectations des touches de fonction}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604305 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300035000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 77}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604306"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 6.4.3 S\'e9quence de commandes d'initialisation}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604306 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300036000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 78}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604307"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 7}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604307 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300037000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 79}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604308"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.1 Introduction}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604308 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300038000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 79}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604309"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.2 Pr\'e9paration pour d\'e9bugging symbolique ou source}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604309 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300300039000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 79}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604310"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.2.1 Pr\'e9paration pour d\'e9bugging symbolique seulement}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604310 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310030000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 79}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604311"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.2.2 Pr\'e9paration pour d\'e9bugging symbolique et source}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604311 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310031000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 80}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604312"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.3 R\'e9servation de m\'e9moire pour le fichier source et les symboles}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604312 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310032000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 80}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604313"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.4 Chargement des Programmes et des fichiers symboles}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604313 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310033000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 81}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604314"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.4.1 Chargement d'un programme, de symboles et de source}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604314 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310034000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 81}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604315"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.4.2 Charger seulement les fichiers source et symboles}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604315 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310035000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 81}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604316"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.4.3 Chargement d'un programme sans symboles ni source}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604316 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310036000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 82}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604317"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.5 D\'e9bugging avec des symboles}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604317 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310037000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 83}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604318"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.6 D\'e9bugging avec source}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604318 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310038000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 83}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604319"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.6.1 Utilisation des num\'e9ros de ligne}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604319 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300310039000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 83}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604320"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 7.6.2 Utilisation du mode source dans la fen\'eatre code}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604320 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320030000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 83}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604321"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 8}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604321 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320031000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 85}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604322"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 8.1 Introduction}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604322 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320032000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 85}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604323"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 8.2 Configuration de l'Environnement EMM}{\lang1024\langfe1024\noproof\webhidden \tab 
}{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604323 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320033000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 85}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604324"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 8.2.1 Pages EMM par D\'e9faut}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604324 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320034000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 86}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604325"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 8.2.2 Personnalisation de la carte des pages EMM}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604325 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320035000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 86}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604326"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 8.3 Autres caract\'e9ristiques de l'EMM}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604326 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320036000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 87}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604327"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 8.3.1 Accroitre la M\'e9moire Conventionnelle}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604327 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320037000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 87}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604328"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 8.3.2 Localisation Automatique du cadre de page}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604328 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320038000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 87}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604329"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 8.4 D\'e9bugging sous EMM}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604329 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300320039000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 88}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604330"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 9}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604330 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330030000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 89}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604331"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 9.1 Introduction}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604331 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330031000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 89}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604332"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 9.2 Utilisation des domaines de trace arri\'e8re}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604332 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330032000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 89}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604333"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 9.3 Notes sp\'e9ciales}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604333 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330033000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 90}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604334"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 10}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604334 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330034000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 92}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604335"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 10.1 Introduction}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604335 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330035000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 92}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604336"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 10.2 Fonctionnement de Soft-ICE avec MagicCV ou MagicCVW}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604336 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330036000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 92}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604337"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 10.3 Consid\'e9rations Sp\'e9ciales}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604337 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330037000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 92}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604338"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 11}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604338 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330038000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 95}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604339"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.1 Utilisation de Soft-ICE avec d'autres d\'e9buggers}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604339 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300330039000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 95}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604340"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.1.1 D\'e9buggers utilisant DOS}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604340 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340030000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 95}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604341"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.1.2 La commande ACTION avec d'autres d\'e9buggers}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604341 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340031000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 95}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604342"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.1.3 Consid\'e9rations Sp\'e9ciales}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604342 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340032000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 96}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604343"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.1.4 Utilisation de Soft-ICE avec CODEVIEW}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604343 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340033000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 96}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604344"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.1.5 D\'e9buggers utilisant les points d'arr\'eat registre du 80386}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604344 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340034000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 96}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604345"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.2 Points d'arr\'eat utilisateur}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604345 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340035000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 96}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s17\ql \li480\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin480\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604346"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.2.1 Exemple d'un point d'arr\'eat utilisateur}{
\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604346 \\h }{\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340036000000}}}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 97}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604347"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.3 La Fen\'eatre en mode Graphique}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604347 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340037000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 98}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604348"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.4 D\'e9bugging en m\'e9moire pagin\'e9e}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604348 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340038000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 99}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604349"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 11.5 D\'e9bugging en m\'e9moire \'e9tendue}{\lang1024\langfe1024\noproof\webhidden 
\tab }{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604349 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300340039000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 99}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604350"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof CHAPITRE 12}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604350 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350030000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 101}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604351"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 12.1 Pilotes de p\'e9riph\'e9riques}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604351 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350031000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 101}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604352"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 12.2 Chargeurs de boot}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604352 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350032000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 102}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604353"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 12.3 Routines d'interruption}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604353 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350033000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 102}}}}}{\lang1024\langfe1024\noproof 
\par }{\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604354"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350034000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof 12.4 Syst\'e8mes d'exploitation non-DOS}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604354 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350034000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 102}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604355"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350035000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof APPENDICE A}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604355 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350035000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 104}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604356"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350036000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof LISTE DES COMMANDES FONCTIONNELLES}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604356 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350036000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 104}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604357"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350037000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof APPENDICE B}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604357 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350037000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 106}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604358"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350038000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof LISTE ALPHABETIQUE DES COMMANDES}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604358 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350038000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 106}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604359"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350039000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof APPENDICE C}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604359 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300350039000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 108}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604360"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300360030000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof FONCTION DES SEQUENCES DE TOUCHES}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604360 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300360030000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 108}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604361"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300360031000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof APPENDICE D}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604361 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300360031000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 108}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s16\ql \li240\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin240\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604362"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300360032000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof Messages d'Erreur et Descriptions}{\lang1024\langfe1024\noproof\webhidden \tab }
{\field{\*\fldinst {\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604362 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300360032000000}}
}{\fldrslt {\lang1024\langfe1024\noproof\webhidden 108}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s15\ql \li0\ri0\widctlpar\tqr\tldot\tx9962\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\field\fldedit{\*\fldinst {\cs26\ul\cf2\lang1024\langfe1024\noproof  }{
\lang1024\langfe1024\noproof HYPERLINK \\l "_Toc480604363"}{\cs26\ul\cf2\lang1024\langfe1024\noproof  }{\ul\cf2\lang1024\langfe1024\noproof {\*\datafield 
08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300360033000000}}}{\fldrslt {\cs26\ul\cf2\lang1024\langfe1024\noproof APPENDICE E}{\lang1024\langfe1024\noproof\webhidden \tab }{\field{\*\fldinst {
\lang1024\langfe1024\noproof\webhidden  PAGEREF _Toc480604363 \\h }{\lang1024\langfe1024\noproof {\*\datafield 08d0c9ea79f9bace118c8200aa004ba90b02000000080000000e0000005f0054006f0063003400380030003600300034003300360033000000}}}{\fldrslt {
\lang1024\langfe1024\noproof\webhidden 113}}}}}{\lang1024\langfe1024\noproof 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 }}\pard\plain 
\s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {
\par \page   {\*\bkmkstart _Toc480604258}CHAPITRE 1{\*\bkmkend _Toc480604258}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2  Introduction
\par     1.1 Description du produit
\par     1.2 Utilisation de ce Manuel
\par     1.3 Mat\'e9riel n\'e9cessaire
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604259}1.1 Description du produit
{\*\bkmkend _Toc480604259}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE est un outil de d\'e9verminage logiciel . 
\par 
\par Soft-ICE utilise le mode prot\'e9g\'e9 du 386 pour faire fonctionner DOS dans 
\par une machine virtuelle. Ceci permet \'e0 Soft-ICE d'avoir un contr\'f4le total
\par de l'environnement DOS. Soft-ICE utilise les caract\'e9ristiques du mode 
\par prot\'e9g\'e9 du 386, telles que le paging, le niveau de privil\'e8ge des I/O,
\par les point d'arr\'eats sur registres, pour ajouter des points d'arr\'eats de 
\par niveau hard a votre d\'e9bugger actuel.
\par 
\par Soft-ICE a \'e9t\'e9 \'e9crit avec trois id\'e9es en t\'eate:
\par     1. Utiliser les possibilit\'e9s de machine virtuelle
\par         des 386 pour obtenir des possibilit\'e9s de d\'e9bugging
\par         impossibles \'e0 obtenir ou pour le moins prohibitivement
\par         lentes avec un d\'e9bugger soft.
\par         (ex: points d'arr\'eat hard en temps r\'e9el, protection
\par         m\'e9moire,etc..).
\par     2. Pouvoir travailler avec les d\'e9buggers existants. Nous
\par         voulions produire un outil fonctionnant avec les
\par         produits existants. Nous avons cr\'e9\'e9 Soft-ICE de telle
\par         fa\'e7on que vous ne soyez pas oblig\'e9 d'apprendre un 
\par         nouveau d\'e9bugger pour obtenir de puissantes fonctions
\par         }{\f2\fs20\lang1043\langfe1036\langnp1043 de d\'e9bugging hard.
\par     }{\f2\fs20 3. Etre un programme simple d'utilisation, avec des 
\par         fen\'eatres qui s'affichent instantan\'e9ment.
\par         Toutes les commandes de Soft-ICE ont \'e9t\'e9 cr\'e9\'e9es
\par         pour rentrer dans une petite fen\'eatre de telle sorte 
\par         que cette information soit toujours visible sur 
\par         l'\'e9cran en-dessous de Soft-ICE. Une aide en ligne 
\par         dynamique vient en aide aux utilisateurs qui ne se
\par         servent de Soft-ICE qu'occasionnellement.
\par 
\par Les caract\'e9ristiques du programme Soft-ICE:
\par      * points d'arr\'eat en temps r\'e9el sur les lectures/\'e9critures
\par         en m\'e9moire, lectures/\'e9critures de ports, domaines m\'e9moire,
\par         et interruptions.
\par      * historique des traces arri\'e8res
\par      * d\'e9bugging niveau source et symbolique
\par      * un environnement fonctionnant avec les d\'e9buggers existants
\par      * support complet de l'EMM 4.0 
\par      * une fen\'eatre pouvant \'eatre appel\'e9e \'e0 tout instant
\par      * la possibilit\'e9 de sortir par un appui touche m\'eame
\par           si les interruptions sont d\'e9sactiv\'e9es
\par      * le code du debugger est isol\'e9 par le mode prot\'e9g\'e9
\par           du 80386. Cel\'e0 emp\'eache un programme 'errant' de 
\par           modifier ou de d\'e9truire Soft-ICE; m\'eame si DOS se
\par           plante, Soft-ICE continue \'e0 fonctionner
\par      * la possibilit\'e9 de configurer Soft-ICE pour ne pas 
\par           utiliser de m\'e9moire conventionnelle si votre machine
\par           poss\'e8de plus de 640K
\par      * une aide en ligne dynamique
\par      * la possibilit\'e9 d'\'eatre utilis\'e9 tout seul. Cette possibilit\'e9
\par           est interressante si vous d\'e9buggez des pilotes de
\par           p\'e9riph\'e9rique, des gestionnaires d'interruption, ou des
\par           s\'e9quences de boot o\'f9 les d\'e9buggers traditionnels n'ont
\par           pas acc\'e8s ou si votre d\'e9bugger a des probl\'e8mes de 
\par           r\'e9-entrance
\par      * une possibilit\'e9 de boot qui vous permet de d\'e9bugger avec des
\par           syst\'e8mes d'op\'e9ration non-DOS ou des programmes auto-bootables
\par      * une installation simple, sans DIP \'e0 positionner, ni 
\par           entr\'e9e/sortie utilis\'e9e, ni conflit d'addressage
\par 
\par }{\b\f2\fs20 NOTE:
\par }{\f2\fs20    Soft-ICE ne fonctionne pas avec les programmes en mode r\'e9el.
\par    Il ne fonctionne pas avec les programmes utilisant les instructions
\par    du mode prot\'e9g\'e9 des 80286 et 80386
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604260}1.2 Utilisation de ce Manuel
{\*\bkmkend _Toc480604260}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Le manuel de Soft-ICE est divis\'e9 en quatre sections principales:
\par     Apprentissage de Soft-ICE (Section I)
\par     Commandes (Section II)
\par     Carat\'e9ristiques (Section III)
\par     Fonctions Avanc\'e9es (Section IV)
\par 
\par Soft-ICE peut \'eatre utilis\'e9 pour beaucoup de probl\'e8mes de d\'e9buggage apr\'e8s 
\par lecture de le section I, "Apprentissage de Soft-ICE", et un peu 
\par d'exp\'e9rimentation. L'aide en ligne de Soft-ICE peut \'eatre utilis\'e9e pour
\par la description des commandes et leur syntaxe.
\par 
\par La section "Apprentissage de Soft-ICE" contient des instructions 
\par d'installation, une description de l'interface utilisateur et un didacticiel.
\par Le didacticiel est destin\'e9 \'e0 vous former rapidement.
\par 
\par La section "Commandes" d\'e9crit toutes les commandes de Soft-ICE.
\par Les descriptions de commandes sont organis\'e9es par groupes fonctionnels
\par avec un index alphab\'e9tique de r\'e9f\'e9rence.
\par 
\par La section "Caract\'e9ristiques" recouvre les options avanc\'e9es
\par de chargement, le d\'e9bugging source et symbolique et les possibilit\'e9s 
\par EMM 4.0.
\par 
\par La section "Fonction Avanc\'e9es" recouvre des sujets tels que l'utilisation 
\par de Soft-ICE avec des pilotes de p\'e9riph\'e9rique et son utilisation avec des
\par syst\'e8mes d'exploitation non-DOS.
\par 
\par Tout au long de ce manuel, particuli\'e8rement dans le didacticiel et dans
\par la section consacr\'e9e aux commandes, des exemples sont donn\'e9s qui imposent
\par de fournir \'e0 Soft-ICE des donn\'e9es. Quand les instructions vous demandent
\par de "presser" une touche, par exemple la touche ' ', vous devez presser la touche marqu\'e9e ' '. Quand les instructions vous demandent d''entrer' une phrase telle que 'WIN', vous devez entrer les lettres cit\'e9es, puis presser la touche ENTER.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604261}1.3 Mat\'e9riel N\'e9cessaire
{\*\bkmkend _Toc480604261}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE fonctionne avec les IBM S\'e9ries II Mod\'e8le 70 et 80, Compaq 80386 
\par et les ordinateurs \'e0 base de 80386SX, les compatibles AT et les cartes 
\par co-processeur 80386. Soft-ICE ne fonctionne avec les co-processeurs 
\par 80386 XT que s'ils sont compatibles AT.
\par 
\par Soft-ICE fonctionne mieux avec de la m\'e9moire \'e9tendue, mais fonctionne
\par correctement avec de la m\'e9moire conventionnelle.
\par 
\par Soft-ICE n'utilise ni DOS ni le BIOS pour ses affichages vid\'e9o ni pour
\par ses entr\'e9es clavier. Malgr\'e8s ce, la vid\'e9o doit \'eatre compatible avec l'un 
\par des syst\'e8mes suivant: MDA, Hercules, CGA, EGA, VGA. Soft-ICE supporte aussi 
\par les configurations \'e0 deux moniteurs, ce qui peut \'eatre tr\'e8s utile pour les 
\par programmes faisant un usage intensif de la vid\'e9o.
\par 
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\page }{\b\fs32  SECTION I - - Apprentissage de Soft-ICE
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {  {\*\bkmkstart _Toc480604262}CHAPITRE 2
{\*\bkmkend _Toc480604262}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2  D\'e9but
\par    2.1 Les Disquettes
\par    2.2 Chargement de Soft-ICE
\par    2.2.1 Chargement sans M\'e9moire Etendue
\par    2.2.2 Chargement avec M\'e9moire Etendue
\par    2.2.3 Configuration de Soft-ICE pour une Installation Personnalis\'e9e
\par    2.3 D\'e9chargement de Soft-ICE
\par    2.4 Rechargement de Soft-ICE
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604263}2.1 Les Disquettes
{\*\bkmkend _Toc480604263}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE est livr\'e9 sur une disquette 5 1/4" ou une disquette 3 1/2"
\par Quand vous lancez Soft-ICE, le nom de la personne poss\'e9dant la license
\par de votre copie est affich\'e9 \'e0 l'\'e9cran pour contrer les copies pirates.
\par La disquette Soft-ICE n'est pas physiquement prot\'e9g\'e9e contre la copie
\par pour votre confort. Pour notre confort, nous apr\'e9cierons l'attention 
\par que vous porterez aux accords de license. Il est important de faire une
\par copie de s\'e9curit\'e9 de votre disquette avec pour seul usage le backup en 
\par cas d'avarie de votre disquette originale.
\par 
\par Le catalogue de la disquette Soft-ICE montre les fichiers suivants:
\par    S-ICE.EXE
\par    S-ICE.DAT
\par    LDR.EXE
\par    MSYM.EXE
\par    EMMSETUP.EXE
\par    UPTIME.EXE
\par    README.SI
\par    SAMPLE.EXE
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 SAMPLE.ASM
\par    SAMPLE.SYM
\par 
\par }{\f2\fs20 S-ICE.EXE est le programme Soft-ICE.
\par S-ICE.DAT est le fichier d'initialisation de Soft-ICE.
\par LDR.EXE est le loader de programmes et de fichiers symboles de Soft-ICE.
\par MSYM.EXE est le programme de cr\'e9ation de fichiers symboles de Soft-ICE.
\par EMMSETUP.EXE est le programme qui vous permet de personnaliser la fa\'e7on
\par dont votre syst\'e8me utilisera la m\'e9moire pagin\'e9e.
\par UPTIME.EXE r\'e8gle l'heure DOS \'e0 celle de l'horloge CMOS.
\par README.SI est un fichier texte contenant des informations ne figurant
\par pas dans ce manuel.
\par SAMPLE.EXE est un court programme de d\'e9monstration utilis\'e9 par le didacticiel
\par SAMPLE.ASM est code source du programme de d\'e9monstration.
\par SAMPLE.SYM est le fichier symbole du programme de d\'e9monstration.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604264}2.2 Chargement de Soft-ICE
{\*\bkmkend _Toc480604264}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Avant de lancer Soft-ICE, copiez tous les fichiers de la disquette de
\par distribution sur votre disque dur.
\par 
\par Ces fichiers doivent \'eatre disponibles dans votre PATH.
\par 
\par S-ICE.EXE peut \'eatre charg\'e9 comme un pilote de p\'e9riph\'e9rique dans votre
\par CONFIG.SYS ou peut aussi \'eatre lanc\'e9 comme un programme depuis la ligne 
\par de commande DOS. Pour utiliser la plupart des possibilit\'e9s de Soft-ICE, 
\par il doit \'eatre lanc\'e9 comme un pilote de p\'e9riph\'e9rique dans votre CONFIG.SYS.
\par 
\par Note :
\par Si vous n'avez pas de m\'e9moire \'e9tendue, Soft-ICE ne peut PAS \'eatre charg\'e9 
\par comme un pilote de p\'e9riph\'e9rique. Il doit \'eatre lanc\'e9 depuis le prompt du DOS.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604265}2.2.1 Chargement sans M\'e9moire Etendue
{\*\bkmkend _Toc480604265}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Quand il n'y a pas de m\'e9moire \'e9tendue pr\'e9sente, Soft-ICE se charge dans
\par l'emplacement m\'e9moire le plus haut disponible. La m\'e9moire utilis\'e9e par 
\par Soft-ICE est ensuite cach\'e9e au DOS. Malgr\'e8s que la m\'e9moire restant visible
\par sous DOS soit inf\'e9rieure apr\'e8s le chargement de Soft-ICE, il est recommand\'e9
\par de charger Soft-ICE avant tout TSR ou programme de contr\'f4le.
\par Si vous n'avez pas de m\'e9moire \'e9tendue, entrez simplement:
\par 
\par     S-ICE
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604266}2.2.2 Chargement avec M\'e9moire Etendue
{\*\bkmkend _Toc480604266}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Le chargement de Soft-ICE avec de la m\'e9moire \'e9tendue peut se faire d'une
\par des deux fa\'e7ons suivantes:
\par   
\par    1. Installer S-ICE.EXE comme un pilote dans le fichier 
\par       CONFIG.SYS.
\par       Cette m\'e9thode est n\'e9cessaire si vous souhaitez
\par       utiliser une des possibilit\'e9s suivantes:
\par       * Partage de la m\'e9moire avec des programmes
\par          utilisant la m\'e9moire \'e9tendu par le biais
\par          d'appels \'e0 la ROM BIOS (VDISK.SYS, RAMDRIVE.SYS,
\par          HIMEM.SYS, programmes de cache, etc ..).
\par       * Utiliser le potentiel EMM 4.0 de Soft-ICE
\par       * Utiliser Soft-ICE pour le d\'e9buggage source 
\par           ou symbolique.
\par       * Utiliser la trace arri\'e8re
\par       * Utiliser Soft-ICE avec d'autres produits
\par           Nu-M\'e9ga tels MagicCV,
\par       Quand il est charg\'e9 comme un pilote, Soft-ICE 
\par       s'alloue une portion de m\'e9moire \'e9tendue pour
\par       lui-m\'eame et pour ses fichiers annexes de telle
\par       sorte qu'il n'y ait pas de conflit m\'e9moire.
\par       S-ICE .EXE doit \'eatre charg\'e9 depuis CONFIG.SYS
\par       avant tout autre driver allouant de la m\'e9moire
\par       \'e9tendue (ex: VDISK.SYS, RAMDRIVE.SYS). En 
\par       g\'e9n\'e9ral, Soft-ICE fonctionne mieux s'il est le
\par       premier pilote install\'e9 par CONFIG.SYS.
\par       Pour les utilisateurs novices, il est conseill\'e9
\par       de charger Soft-ICE comme premier pilote dans le
\par       CONFIG.SYS avec la commande suivante:
\par 
\par       device = lecteur: \\chemin\\S-ICE.EXE /SYM 50
\par 
\par       Lecteur et chemin sp\'e9cifient le r\'e9pertoire 
\par       o\'f9 se trouve Soft-ICE. Cette commande charge 
\par       Soft-ICE lors de l'initialisation du syst\'e8me 
\par       et sera tr\'e8s bonne pour le didacticiel.
\par       Malgr\'e8s tout, Soft-ICE ne sera pas install\'e9 avec
\par       certaines de ses caract\'e9ristiques les plus avanc\'e9es
\par       comme EMM 4.0. Vous pourrez reconfigurer Soft-ICE 
\par       avec ces possibilit\'e9s apr\'e8s avoir un peu exp\'e9riment\'e9.
\par       Si vous avez d\'e9j\'e0 l'exp\'e9rience de Soft-ICE, ou si 
\par       vous voulez installer ces possibilit\'e9s imm\'e9diatement, 
\par       reportez-vous s'il vous plait au chapitre 6 
\par       (Installation des Options de Soft-ICE ).
\par 
\par }{\b\f2\fs20 Attention:
\par }{\f2\fs20 Lors de l'installation d'un pilote de p\'e9riph\'e9rique pour la premi\'e8re 
\par fois sur votre syst\'e8me, il est prudent d'avoir \'e0 port\'e9e de main une
\par disquette syst\'e8me. cette mesure prudente vous servira si, par malchance,
\par le r\'e9glage par d\'e9faut du pilote n'est pas compatible avec votre syst\'e8me.
\par 
\par       Si vous n'\'eates pas s\'fbr de la fa\'e7on d'\'e9diter votre
\par       CONFIG.SYS, reportez-vous au guide de l'utilisateur
\par       de votre syst\'e8me ou au guide de l'utilisateur de 
\par       votre \'e9diteur de textes pour obtenir des instructions.
\par       Apr\'e8s avoir modifi\'e9 votre fichier CONFIG.SYS, vous
\par       devrez relancer votre syst\'e8me pour que les modifications
\par       prennent effet.
\par 
\par    2. Lancez Soft-ICE depuis le prompt DOS en entrant
\par       S-ICE. Avant son chargement, Soft-Ice affiche
\par       un message de chargement et un prompt. Pour \'e9viter 
\par       ce prompt, incluez le mot EXTENDED dans le fichier
\par       S-ICE.DAT. Voir la section 6.4 pour plus 
\par       d'informations sur le fichier S-ICE.DAT.
\par       En utilisant cette m\'e9thode, Soft-ICE est charg\'e9
\par      automatiquement en haut de la m\'e9moire \'e9tendue, qu'il
\par      y ait ou non quelque chose \'e0 cet endroit.
\par      Si vous \'eates s\'fbr de n'avoir aucun programme qui
\par      utilise la m\'e9moire \'e9tendue, cette m\'e9thode est
\par      acceptable. Quand il est charg\'e9 avec cette m\'e9thode,
\par      Soft-ICE n'occupe AUNCUN octet en m\'e9moire 
\par      conventionnelle. La commande \'e0 utiliser est:
\par      
\par   }{\f2\fs20\lang2057\langfe1036\langnp2057 S-ICE
\par 
\par }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Notes:
\par }{\f2\fs20 Vous ne pourrez PAS activer toutes les possibilit\'e9s de Soft-ICE en le
\par chargeant depuis la ligne de commande. Si vous souhaitez utiliser Soft-ICE
\par comme d\'e9bugger unique, il est recommand\'e9 de le charger depuis le fichier
\par CONFIG.SYS.
\par 
\par Si vous souhaitez charger Soft-ICE comme un pilote de p\'e9riph\'e9rique mais
\par que vous ne souhaitez pas que Soft-ICE reste en permanence r\'e9sident, vous
\par devez utiliser l'option /UN au chargement. Voir la section 6.3.1 pour plus
\par d'informations.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604267}
2.2.3 Configuration de Soft-ICE pour une Installation Personnalis\'e9e{\*\bkmkend _Toc480604267}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par vous pouvez personnaliser Soft-ICE avec les options de chargement dans 
\par le fichier CONFIG.SYS et le fichier de configuration S-ICE.DAT.
\par Les options du fichier CONFIG.SYS permettent de param\'e9trer comment la 
\par m\'e9moire \'e9tendue sera r\'e9serv\'e9e par Soft-ICE. Le fichier d'initialisation 
\par S-ICE.DAT vous permet de pr\'e9ciser des options de configuration, d'affecter
\par des commandes aux touches de fonction, et de d\'e9finir une cha\'eene de 
\par d\'e9marrage. Une cha\'eene de d\'e9marrage sert \'e0 ex\'e9cuter une s\'e9rie de commandes 
\par que vous utilisez chaque fois que vous installez Soft-ICE. Pour plus
\par d'informations sur la personnalisation de Soft-ICE, r\'e9f\'e9rez-vous au 
\par chapitre 6.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604268}2.3 D\'e9chargement de Soft-ICE
{\*\bkmkend _Toc480604268}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Occasionnellement, vous pouvez \'eatre amen\'e9 \'e0 vouloir d\'e9charger Soft-ICE.
\par Une des principales raison qui peut vous pousser \'e0 vouloir d\'e9charger 
\par Soft-ICE, est de vouloir lancer un programme qui utilise les instructions 
\par du mode prot\'e9g\'e9 du 80286 ou du 80386. pour d\'e9charger Soft-ICE, entrez:
\par 
\par   S-ICE /U
\par 
\par Cette commande replace la machine en mode d'adressage r\'e9el. Si Soft-ICE 
\par avait \'e9t\'e9 charg\'e9 depuis le fichier CONFIG.SYS, la m\'e9moire r\'e9serv\'e9e par 
\par Soft-ICE, reste r\'e9serv\'e9e et ne peut pas \'eatre utilis\'e9e par un autre
\par programme. Si Soft-ICE avait \'e9t\'e9 charg\'e9 depuis la ligne de commande DOS,
\par le fait de le d\'e9charger lib\'e8re la m\'e9moire qui lui avait \'e9t\'e9 allou\'e9e.
\par 
\par }{\b\f2\fs20 Attention:
\par }{\f2\fs20 Si de la m\'e9moire \'e9tendue est en service au moment ou vous d\'e9chargez
\par Soft-ICE, ceci plantera votre syst\'e8me.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604269}2.4 Recharger Soft-ICE
{\*\bkmkend _Toc480604269}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE peut \'eatre recharg\'e9 nimporte quand s'il avait \'e9t\'e9 initialement
\par charg\'e9 depuis le fichier CONFIG.SYS. Si Soft-ICE avait \'e9t\'e9 initialement 
\par charg\'e9 depuis le fichier CONFIG.SYS, les options de configuration originales
\par sont conserv\'e9es (EMM 4.0, symboles et source...).
\par Pour recherger Soft-ICE, entrez:
\par 
\par   S-ICE
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {  
\par \page {\*\bkmkstart _Toc480604270}CHAPITRE 3{\*\bkmkend _Toc480604270}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\b\f2 
\par  D\'e9bugger En 30 Minutes
\par    3.1 Introduction
\par    3.2 Activation de la fen\'eatre
\par    3.3 Sortie de la fen\'eatre
\par    3.4 Changement de taille de la fen\'eatre
\par    3.5 D\'e9placement de la fen\'eatre
\par    3.6 Touches d'\'e9dition de ligne
\par    3.7 Ligne d'\'e9tat interactive
\par    3.8 Syntaxe des Commandes
\par    3.8.1 Sp\'e9cification d'Adresses M\'e9moire
\par    3.9 Touches de Fonction
\par    3.10 Aide
\par    3.11 Didacticiel
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604271}3.1 Introduction{\*\bkmkend _Toc480604271
}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Toutes les interactions avec Soft-ICE prennent place dans une fen\'eatre 
\par qui peut \'eatre activ\'e9e \'e0 tout moment. Toutes les commandes de Soft-ICE
\par s'inscrivent dans une petite fen\'eatre, mais qui peut \'eatre agrandie 
\par jusqu'au plein \'e9cran si n\'e9cessaire. Vous utiliserez normalement la 
\par petite fen\'eatre lorsque vous emploirez Soft-ICE avec un autre d\'e9bugger
\par et la grande fen\'eatre lorsque vous l'emploirez tout seul.
\par 
\par La fen\'eatre est normalement ouverte plein \'e9cran si vous avez utilis\'e9 
\par le fichier de configuration (S-ICE.DAT) inclus sur la disquette de 
\par distribution.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604272}3.2 Activation de la fen\'eatre
{\*\bkmkend _Toc480604272}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Vous pouvez activer la fen\'eatre nimporte quand apr\'e8s avoir install\'e9 
\par Soft-ICE. La s\'e9quence de touches pr\'e9vue \'e0 cet effet est CTRL + D.
\par Cette s\'e9quence peut naturellement \'eatre modifi\'e9e en utilisant la 
\par commande ALTKEY (voir section 5.8).
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604273}3.3 Sortie de la fen\'eatre
{\*\bkmkend _Toc480604273}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Le retour \'e0 l'affichage d'origine se fait gr\'e2ce \'e0 l'utilisation de la 
\par commande X ou de la combinaison de touches utilis\'e9e pour activer Soft-ICE.
\par Tous les points d'arr\'eat que vous avez pu d\'e9finir pendant que vous \'e9tiez 
\par sous Soft-ICE demeurent actifs.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604274}3.4 Changement de taille de la fen\'eatre
{\*\bkmkend _Toc480604274}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Vous pouvez modifier la largeur et la hauteur de la fen\'eatre de Soft-ICE.
\par Le changement de taille de la fen\'eatre est particuli\'e8rement utile en 
\par mode Soft-ICE seul lorsque vous affichez du code m\'e9moire.
\par 
\par  La hauteur de la fen\'eatre peut varier de 8 \'e0 25 lignes. Pour changer cette 
\par hauteur, utilisez les touches suivantes:
\par     
\par     ALT _ -- Agrandit la fen\'eatre
\par     ALT _ -- Diminue la fen\'eatre
\par 
\par Pour changer les dimensions de la fen\'eatre, utilisez la commande WIN
\par (voir section 5.9). entrer WIN sans param\'e8tre bascule entre ces deux modes: 
\par 
\par    WIDE mode -- fen\'eatre plein \'e9cran
\par    NARROW mode -- 46 caract\'e8res
\par 
\par Certaines commandes (ex: D, E ,R ,U) tirent avantage des plus grandes
\par dimensions en affichant plus d'informations quand la fen\'eatre est en 
\par mode WIDE.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604275}3.5 D\'e9placement de la fen\'eatre
{\*\bkmkend _Toc480604275}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par La fen\'eatre de Soft-ICE est d\'e9pla\'e7able et peut \'eatre positionn\'e9e nimporte o\'f9 
\par sur l'\'e9cran. Ceci est tr\'e8s utile quand la fen\'eatre est en mode NARROW.
\par D\'e9placez la fen\'eatre chaque fois que vous souhaitez voir des informations
\par sur l'\'e9cran qui se trouvent sous la fen\'eatre. Les touches suivantes seront
\par utilis\'e9es pour d\'e9placer la fen\'eatre:
\par 
\par     CTRL _  -- remonte la fen\'eatre d'une case
\par     CTRL _  -- descend la fen\'eatre d'une case
\par     CTRL -> -- d\'e9place la fen\'eatre d'une case vers la droite
\par     CTRL <- -- d\'e9place la fen\'eatre d'une case vers la gauche
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604276}3.6 Touches d'\'e9dition de ligne
{\*\bkmkend _Toc480604276}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par L'\'e9diteur de ligne de Soft-ICE vous permet de rappeler et d'\'e9diter les
\par commandes pr\'e9c\'e9dentes. Les fonctions de l'\'e9diteur de ligne sont identiques
\par \'e0 celles du populaire \'e9diteur de lignes CED.
\par Les s\'e9quences de touches suivantes vous aideront \'e0 \'e9diter les commandes
\par dans le fen\'eatre de commande:
\par 
\par 
\par      ->     -- d\'e9place le curseur vers la droite
\par      <-     -- d\'e9place le curseur vers la gauche
\par     INS     -- bascule en mode insert
\par     DEL     -- efface le caract\'e8re courant
\par     HOME    -- d\'e9place le curseur au d\'e9but de la ligne
\par     END     -- d\'e9place le curseur \'e0 la fin de la ligne
\par     _       -- affiche la commande pr\'e9c\'e9dente
\par     _       -- affiche la commande suivante
\par     SHIFT _ -- scrolle l'\'e9cran une ligne vers le haut
\par     SHIFT _ -- scrolle l'\'e9cran une ligne vers le bas
\par     PAGE UP -- scrolle l'\'e9cran une page vers le haut
\par     PAGE DN -- scrolle l'\'e9cran une page vers le bas
\par     BKSP    -- efface le caract\'e8re pr\'e9c\'e9dent
\par     ESC     -- annule la commande courante
\par 
\par Il y a des assignations de touches sp\'e9ciales quand le curseur est dans la
\par fen\'eatre de donn\'e9es ou dans la fen\'eatre de code. Elles sont d\'e9crites dans 
\par les sections concernant respectivement les commandes  E et EC. Une 
\par assignation particuli\'e8re \'e0 noter est SHIFT _ et SHIFT _ quand le curseur
\par est dans la fen\'eatre de code. Ces touches sont r\'e9assign\'e9es pour avoir la
\par m\'eame fonction que les touches _ et _ ont normalement. De cette facon, vous
\par pouvez rappeler les pr\'e9c\'e9dentes commandes tandis que le curseur est dans la
\par fen\'eatre de code.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604277}3.7 Ligne d'Etat Interactive
{\*\bkmkend _Toc480604277}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Une ligne d'\'e9tat au bas de la fen\'eatre fournit une aide interactive et la
\par syntaxe des commandes.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604278}3.8 Syntaxe des Commandes
{\*\bkmkend _Toc480604278}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE est un outil de d\'e9bugging g\'e9r\'e9 par ligne de commande. Pour 
\par interagir avec Soft-ICE, vous entrez des commandes, parfois modifi\'e9es
\par par des param\'e8tres.
\par 
\par Toutes les commandes sont des cha\'eenes contenant de un \'e0 six caract\'e8res
\par (en majuscules ou minuscules). Tous les param\'e8tres sont des cha\'eenes ASCII
\par ou des expressions.
\par 
\par Les expressions sont normalement des nombres, mais peuvent aussi \'eatre des
\par combinaisons de nombres et d'op\'e9rateurs (ex, + - / *). Tous les chiffres 
\par sont affich\'e9s en hexad\'e9cimal. Les param\'e8tres octets sont affich\'e9s sur deux 
\par chiffres, les param\'e8tres mots sur quatre et les param\'e8tres double mot sont
\par sous la forme de deux mots s\'e9par\'e9s par deux points (:). Voici quelques 
\par exemples de ces diff\'e9rends param\'e8tres:
\par 
\par     12 -- param\'e8tre octet
\par     10FF -- param\'e8tre mot
\par     E000:0100 -- param\'e8tre double mot
\par 
\par 
\par Des registres peuvent \'eatre utilis\'e9s \'e0 la place des octets ou des mots dans 
\par une expression. Par exemple la commande 'U CS:IP-10' commence le d\'e9sassemblage
\par des instructions dix octets avant l'adresse du compteur d'instructions. Les 
\par registres suivants peuvent \'eatre utilis\'e9s dans une expression:
\par 
\par    }{\f2\fs20\lang1043\langfe1036\langnp1043 AL, AH, AX, BL, BH, BX, CL, CH, CX, DL, DH,
\par    }{\f2\fs20 DX, DI, SI, BP, SP, IP, CS, DS, ES, SS, or FL
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604279}3.8.1 Sp\'e9cification d'Addresses M\'e9moire
{\*\bkmkend _Toc480604279}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Beaucoup de commandes de Soft-ICE n\'e9cessitent des adresses m\'e9moire comme
\par param\'e8tre. Une adresse m\'e9moire est une valeur constitu\'e9e de deux mots de
\par 16 bits, s\'e9par\'e9s par deux points. Le premier mot est l'adresse de segment,
\par le second mot est l'offset dans le segment.
\par Des symboles publics peuvent \'eatre utilis\'e9s \'e0 la place des adresses dans
\par nimporte qyelle commande de Soft-ICE. Les symboles publics doivent avoir 
\par \'e9t\'e9 charg\'e9s avec le programme chargeur (LDR.EXE). Voir le chapitre 7 
\par (Symboles et Source) pour une description compl\'e8te de l'utilisation des 
\par symboles publics.
\par 
\par L'\'e9valuateur d'expressions de Soft-ICE reconnait certains caract\'e8res 
\par sp\'e9ciaux en conjonction avec les adresses. Ces caract\'e8res sp\'e9ciaux sont:
\par 
\par     $        -- Courant CS:IP.
\par     @address -- Indirection sur un Double Mot
\par     .number  -- Num\'e9ro de Ligne du Source
\par 
\par Le caract\'e8re $ peut \'eatre utilis\'e9 \'e0 la place de CS:IP pour entrer l'adresse
\par du pointeur d'instructions.
\par 
\par Le caract\'e8re @ vous permet de faire r\'e9f\'e9rence \'e0 un mot double point\'e9 par
\par une adresse. Vous disposez de plusieurs niveaux de @
\par 
\par Si le carat\'e8re . pr\'e9c\'e8de une adresse, celle-ci sera interpr\'e9t\'e9e comme un
\par num\'e9ro de ligne du fichier source courant, \'e0 la place de l'adresse actuelle.
\par Ceci n'est valable que si un fichier source a \'e9t\'e9 charg\'e9. L'adresse est
\par interpr\'e9t\'e9e en d\'e9cimal dans ce cas l\'e0.
\par 
\par }{\b\f2\fs20 Exemples:
\par }{\f2\fs20    U.1234
\par     Cette commande commence le d\'e9sassemblage
\par     d'intructions a la ligne 1234 (d\'e9cimal) du 
\par     code source.
\par 
\par     U $-10
\par     Cette commande d\'e9sassemble des instructions en
\par     commen\'e7ant 10 octets avant le pointeur d'instructions.
\par 
\par     G @SS:SP
\par     Suppose que vous \'eates sur la premi\'e8re instruction d'une
\par     routine d'interruption. L'entr\'e9e de cette commande
\par     cr\'e9e un point d'arr\'eat temporaire \'e0 l'adresse de retour
\par     sur la pile et saute la routine d'interruption.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604280}3.9 Touches de Fonction
{\*\bkmkend _Toc480604280}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Les touches de fonction peuvent \'eatre affect\'e9es \'e0 nimporte quelle cha\'eene
\par de commande pouvant \'eatre entr\'e9e dans Soft-ICE. Les touches de fonction
\par peuvent \'eatre r\'e9affect\'e9es depuis la ligne de commande ou pr\'e9affect\'e9es
\par dans le fichier de d\'e9finitions S-ICE.DAT
\par 
\par Le fichier S-ICE.DAT livr\'e9 avec votre disquette de distribution contient 
\par les red\'e9finitions pour les 12 touches de fonction. Vous pouvez modifier celle
\par que vous voulez. Les red\'e9finitions fournies le sont \'e0 titre d'exemple, 
\par mais elles ont \'e9t\'e9 cr\'e9\'e9es pour faciliter la vie aux utilisateurs de CodeView
\par de MicroSoft. Les affectations par d\'e9faut sont:
\par 
\par     F1 -- Affiche l'aide g\'e9n\'e9rale (H;)
\par     F2 -- Bascule la fen\'eatre registre ( ^WR;)
\par     F3 -- Change le mode source courant ( ^SRC;)
\par     F4 -- Restaure l'\'e9cran ( ^RS;)
\par     F5 -- Retour \'e0 votre programme ( ^X;)
\par     F6 -- Bascule le curseur entre la fen\'eatre de commandes 
\par              et la fen\'eatre de code ( ^EC;)
\par     F7 -- Va jusqu'au curseur ( ^HERE;)
\par     F8 -- Pas \'e0 pas ( ^T;)
\par     F9 -- Positionne un point d'arr\'eat sur la ligne courante ( ^BPX;)
\par     F10 -- Trace ( ^P;)
\par     F11 -- Aller \'e0 l'addresse de retour (mod\'e8le large)
\par               ( ^G@SS:SP;)
\par     F12 -- Affiche le num\'e9ro de version de Soft-ICE ( ^VER;)
\par 
\par  Un accent circonflexe ( ^ ) pr\'e9c\'e9dant une commande la rend invisible,
\par un point virgule suivant une commande repr\'e9sente un retour de chariot.
\par Vous pouvez afficher l'affectation courante des touches de fonction en
\par entrant la commande:
\par 
\par  FKEY
\par 
\par Pour utiliser une touche de fonction, appuyez simplement sur la touche 
\par au lieu d'entrer la commande. Pour reprogrammer les touches de fonction,
\par voir la section 5.8 pour une description de la commande FKEY, ou le 
\par chapitre 6 pour une explication sur la pr\'e9-initialisation des touches
\par de fonction dans S-ICE.DAT.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604281}3.10 Aide{\*\bkmkend _Toc480604281}

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par La commande d'aide affiche un courte description, la syntaxe et un exemple 
\par de chaque commande. Pour afficher l'aide, entrez:
\par 
\par     ? ou H -- affiche une br\'e8ve description de toutes les 
\par                       commandes et des op\'e9rateurs
\par     ? commande ou
\par     H commande -- affiche une aide plus d\'e9taill\'e9e sur la 
\par                       commande sp\'e9cifi\'e9e, sa syntaxe, et 
\par                       un exemple
\par     ? expression ou
\par     H expression -- affiche la valeur de l'expression en 
\par                       hexad\'e9cimal, d\'e9cimal et ASCII
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604282}3.11 Didacticiel{\*\bkmkend _Toc480604282
}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Le didacticiel vous montre une bonne partie des possibilit\'e9s de Soft-ICE
\par et vous donne la possibilit\'e9 de l'essayer. Soft-ICE peut \'eatre utilis\'e9 
\par conjointement avec un autre d\'e9bugger ou bien tout seul. Le didacticiel
\par vous enseigne comment utiliser Soft-ICE avec un autre d\'e9bugger, DEBUG,
\par et comment l'utiliser tout seul avec un source et des symboles charg\'e9s.
\par DEBUG peut \'eatre trouv\'e9 sur les disquettes syst\'e8me PCDOS ou MSDOS. Si 
\par vous ne poss\'e9dez pas DEBUG, vous pouvez en utiliser un autre \'e0 la place
\par ou utiliser Soft-ICE tout seul.
\par Les utilisateurs souhaitant utiliser Soft-ICE pour un projet de 
\par "reverse engineering" ou pour d\'e9bugger un pilote de p\'e9riph\'e9rique DOS ou
\par un programme T&SR peuvent regarder ce didacticiel avec profit. Bien que
\par des exemples de ces types de programmes ne soient pas explicitement
\par donn\'e9s, vous obtiendrez ainsi une vue d'ensemble du travail avec
\par Soft-ICE. Il est recommand\'e9 d'exp\'e9rimenter avec Soft-ICE et votre 
\par environnement propre avant d'entreprendre un projet r\'e9el.
\par 
\par 
\par Un court programme en langage assembleur est utilis\'e9 pour d\'e9montrer
\par les points d'arr\'eat style hard. Le programme d'exemple est intentionnellement
\par court et parfait pour ceux qui ne seraient pas tr\'e8s familiers avec
\par le langage assembleur. Ce didacticiel est destin\'e9 \'e0 vous donner un aper\'e7u
\par des possibilit\'e9s de Soft-ICE. N'h\'e9sitez pas \'e0 exp\'e9rimenter apr\'e8s avoir
\par fait le tour du didacticiel.
\par 
\par Soft_ICE est tr\'e8s adaptable. Il permet d'\'eatre charg\'e9 de la meilleure 
\par fa\'e7on possible pour votre syst\'e8me. Regardez les proc\'e9dures d'installation
\par dans la section 2.2 avant de continuer avec le didacticiel.
\par 
\par Si vous n'avez pas de m\'e9moire \'e9tendue sur votre syst\'e8me, vous devez 
\par charger Soft-ICE depuis la ligne de commande. Quand vous le chargez ainsi,
\par vous ne pouvez charger ni symboles, ni fichiers source. Dans ce cas, vous
\par devrez improviser dans la derni\'e8re section du didacticiel
\par o\'f9 il est expliqu\'e9 comment utiliser Soft-ICE tout seul.
\par 
\par Soft-ICE peut \'eatre charg\'e9 depuis le prompt du DOS ou comme pilote de
\par p\'e9riph\'e9rique dans votre fichier CONFIG.SYS. Pour les besoins de ce 
\par didacticiel, vous devez installer Soft-ICE dans votre CONFIG.SYS
\par avec au moins 50K de m\'e9moire \'e9tendue r\'e9serv\'e9e pour les symboles et
\par les fichiers sources. Soft-ICE doit \'eatre le premier pilote install\'e9 dans
\par le CONFIG.SYS. La ligne d'installation doit \'eatre:
\par 
\par       }{\f2\fs20\lang2057\langfe1036\langnp2057 DEVICE = drive:\\path\\S -ICE.EXE /SYM 50
\par 
\par }{\f2\fs20 Le param\'e8tre /SYM 50 demande \'e0 Soft-ICE de r\'e9server 50 kilooctets
\par de m\'e9moire \'e9tendue pour le chargement des symboles et des fichiers
\par source. C'est g\'e9n\'e9ralement insuffisant pour la plupart des probl\'e8mes
\par courants, mais fonctionne avec notre exemple.
\par 
\par Vous devez red\'e9marrer votre machine apr\'e8s ajout de cette ligne dans
\par votre CONFIG.SYS.
\par 
\par Quand vous red\'e9marrez votre syst\'e8me, Soft-ICE affiche un avertissement
\par de Copyright, un num\'e9ro d'enregistrement, le nom de la personne \'e0 qui 
\par appartient cette copie de Soft-ICE et la m\'e9moire \'e9tendue r\'e9serv\'e9e
\par pour chacune des composantes de Soft-ICE. Avec un syst\'e8me disposant de
\par 384K de m\'e9moire \'e9tendue, l'\'e9cran initial doit ressembler \'e0 ceci:
\par 
\par             }{\f2\fs20\lang2057\langfe1036\langnp2057 Soft-ICE Your Name Your Company Name Registration # SInnnnnn
\par Copr. (C) Nu-Mega Technologies 1987-1989 All Rights Reserved Soft-ICE
\par Version 2.00 Soft-ICE is loaded from 00132000H up to 00160000H. 50K of
\par symbol space reserved. 10K of back trace space reserved. 200 K of extended
\par memory available.
\par }{\f2\fs20 Le message "Soft-ICE is loaded ..." vous renseigne sur la zone exacte de
\par m\'e9moire occup\'e9e par Soft-ICE et ses composantes. Si vous poss\'e9dez un Compaq
\par ou une machine compatible avec Compaq, et si vous avez inclus le mot COMPAQ
\par dans votre fichier S-ICE.DAT, vous verrez aussi un message disant:
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 "Using high memory from XXXXXXXX to 00FE0000H".
\par 
\par }{\f2\fs20 La ligne suivante vous indique combien de place a \'e9t\'e9 r\'e9serv\'e9e pour les
\par symboles. Cette place est utilis\'e9e pour les symboles et les fichiers 
\par source.
\par 
\par La ligne suivante vous indique combien de place a \'e9t\'e9 r\'e9serv\'e9e pour 
\par l'historique de trace arri\'e8re. La valeur par d\'e9faut est 10K. Cette place 
\par est utilis\'e9e par la commande SNAP et la commande BPR avec les options T ou TW.
\par 
\par La derni\'e8re ligne vous indique combien de m\'e9moire reste disponible en 
\par tant que m\'e9moire \'e9tendue. Cette m\'e9moire peut \'eatre utilis\'e9e par les 
\par autres programmes tels HIMEM, SMARTDRIVE, VDISK, etc ...
\par 
\par Positionnez-vous dans le r\'e9pertoire ou vous avez copi\'e9 les fichiers de
\par votre disquette de distribution. Souvenez-vous que ce r\'e9pertoire doit
\par figurer dans votre PATH.
\par 
\par Avant de nous lancer dans le d\'e9bugging, faisons apara\'eetre la fen\'eatre 
\par Soft-ICE et familiarisons-nous avec.
\par     Effacons l'\'e9cran en tapant:
\par       CLS
\par     Affichons la fen\'eatre en pressant:
\par       CTRL D
\par 
\par La fen\'eatre de Soft-ICE est maintenant \'e0 l'\'e9cran. Si votre fichier 
\par S-ICE.DAT a \'e9t\'e9 trouv\'e9, la fen\'eatre occupe l'\'e9cran tout entier.
\par Il est divis\'e9 en quatre sections. Du haut vers le bas, ces sections
\par sont: la fen\'eatre des registres, la fen\'eatre des donn\'e9es,
\par la fen\'eatre de code et la fen\'eatre de commande.
\par Si S-ICE.DAT n'a pas \'e9t\'e9 trouv\'e9, vous avez une petite fen\'eatre au centre
\par de votre \'e9cran. Ceci peut aussi arriver si d'autres composants n\'e9cessaires
\par au didacticiel n'ont pas \'e9t\'e9 charg\'e9s.
\par 
\par Si la petite fen\'eatre est visible, vous devez:
\par     1. Quitter Soft-ICE en entrant un X.
\par     2. D\'e9charger Soft-ICE en tapant S-ICE /U.
\par     3. Copier S-ICE.DAT depuis les disquettes de ditribution
\par          vers un r\'e9pertoire accessible dans votre PATH.
\par     4. Relancer la d\'e9mo.
\par 
\par Nous voulons maintenant basculer vers la petite fen\'eatre.
\par La petite fen\'eatre est tr\'e8s utile lorsqu'on utilise Soft-ICE en
\par tant qu'accessoire d'un autre d\'e9bugger.
\par 
\par     Entrez:
\par       WIN
\par 
\par Ceci fait appara\'eetre la petite fen\'eatre de commande au centre de l'\'e9cran.
\par Certaines commandes de Soft-ICE sont visibles sur cet \'e9cran. Ce sont les 
\par traces de la cha\'eene d'initialisation de S-ICE.DAT qui avait plac\'e9 Soft-ICE
\par en mode plein \'e9cran au d\'e9marrage.
\par 
\par Vous pouvez remarquer un prompt (:) et la ligne d'\'e9tat au bas de la fen\'eatre.
\par 
\par La fen\'eatre Soft-ICE peut \'eatre d\'e9plac\'e9e sur l'\'e9cran et sa taille ajust\'e9e.
\par 
\par    D\'e9placez la fen\'eatre sur l'\'e9cran en pressant:
\par         CTRL _  -- d\'e9place la fen\'eatre d'une case vers le haut
\par         CTRL _  -- d\'e9place la fen\'eatre d'une case vers le bas
\par         CTRL <- -- d\'e9place la fen\'eatre d'une case vers la gauche
\par         CTRL -> -- d\'e9place la fen\'eatre d'une case vers la droite
\par    Basculez la fen\'eatre en plein \'e9cran en tapant:
\par       WIN
\par 
\par Vous remarquez que l'\'e9cran d'origine est restaur\'e9.
\par 
\par   
\par   Revenez \'e0 la petite fen\'eatre en tapant WIN \'e0 nouveau.
\par   Agrandissez ou r\'e9duisez la fen\'eatre en tapant:
\par 
\par       ALT _ -- agrandit la fen\'eatre
\par       ALT _ -- r\'e9duit la fen\'eatre
\par 
\par Essayez maintenant ce qui vient naturellement \'e0 l'esprit lorsqu'on 
\par se trouve face \'e0 un nouveau programme et qu'on ne sait pas quoi faire --
\par demandez de l'aide.
\par     
\par Affichez l'aide en tapant:
\par         ?
\par 
\par Remarquez que l'\'e9cran marque une pause et attend une touche avant 
\par d'afficher la suite des informations \'e0 l'\'e9cran. Regardez la ligne d'\'e9tat
\par au bas de la fen\'eatre. Elle affiche les instructions suivantes:
\par            }{\f2\fs20\lang2057\langfe1036\langnp2057 "Any Key To Continue, ESC to Cancel ". 
\par }{\f2\fs20 Pressez maintenant une touche pour afficher la suite de l'aide. Continuez 
\par \'e0 presser une touche jusqu'au retour du prompt ( : ).
\par 
\par     Revenez en arri\'e8re dans l'aide en pressant   
\par       _ et _ 
\par 
\par Les informations affich\'e9es pr\'e9c\'e9dement dans la fen\'eatre de commande 
\par peuvent \'eatre balay\'e9es avec les touches shift haut, shift bas, page haut
\par et page bas. Essayez plusieurs de ces touches pour balayer l'aide.
\par L'aide de Soft-ICE vous donne un apper\'e7u de chaque commande. Si vous 
\par entrez un point d'interrogation (?) suivi d'un nom de commande, vous 
\par verrez la syntaxe de cette commande, un br\'e8ve description et un exemple.
\par 
\par    Faites donc des essais en entrant ces commandes:
\par       ? commande
\par    Par exemple:
\par       ? ALTKEY
\par 
\par Faites attention \'e0 ce qui s'affiche sur la ligne d'\'e9tat en bas de l'\'e9cran
\par si vous avez des doutes.
\par 
\par La commande ? vous permet aussi d'\'e9valuer des expressions hexad\'e9cimales.
\par 
\par     Par exemple, entrez:
\par       ? 10*2+42
\par 
\par    Le r\'e9sultat est affich\'e9 sous forme hexad\'e9cimale, d\'e9cimale, puis en ASCII:
\par       0062 00098 "b"
\par 
\par Vous activez la fen\'eatre par la s\'e9quence CTRL D. C'est parfait dans la 
\par majorit\'e9 des cas, mais certains peuvent pr\'e9f\'e9rer une autre s\'e9quence.
\par 
\par Nous allons donc entrer une commande pour changer la s\'e9quence de touches
\par n\'e9cessaire pour activer la fen\'eatre. Proc\'e9dez par \'e9tapes, vous serez aid\'e9s
\par par la ligne d'\'e9tat au bas de la fen\'eatre.
\par    Entrez la lettre 'A'. La ligne d'\'e9tat affiche une liste des
\par    commandes comman\'e7ant par 'A'. Continuez \'e0 taper le mot
\par    'ALTKEY'. La ligne d'\'e9tat affiche maintenant une br\'e8ve 
\par    description de la commande /ALTKEY. Pressez la barre
\par    d'espace. La ligne d'\'e9tat montre maintenant la syntaxe 
\par    requise pour la commande /ALTKEY. Entrez les lettres 
\par    'ALT D' et pressez ENTER pour valider la commande:
\par      ALTKEY ALTD
\par  
\par Vous venez de changer la s\'e9quence de d\'e9marrage en ALT D.
\par A partir de maintenant il vous faudra presser ALT D pour activer 
\par la fen\'eatre. Ceci sera consid\'e9r\'e9 comme vrai pour le reste du
\par didacticiel.
\par Testons maintenant la commande.
\par 
\par     Pour quitter la fen\'eatre, pressez:
\par        ALT D
\par 
\par La fen\'eatre Soft-ICE a disparu.
\par     Pour r\'e9activer Soft-ICE, relachez ALT
\par     et tapez:
\par        ALT D
\par 
\par La fen\'eatre est r\'e9ouverte.
\par     Pour voir certaines des commandes pr\'e9c\'e9dentes,
\par     pressez _ plusieurs fois. 
\par 
\par Remarquez que Soft-ICE se souvient des derni\'e8res commandes entr\'e9es.
\par Essayez d'en \'e9diter une juste pour voir.
\par Les touches d'\'e9dition sont:
\par 
\par          INS  -- Bascule le mode Insertion ON ou OFF
\par          DEL  -- Efface un caract\'e8re
\par          HOME -- D\'e9place le curseur au d\'e9but de la ligne
\par          END  -- D\'e9place le curseur \'e0 la fin de la ligne
\par          ->   -- D\'e9place le curseur d'une case vers la droite
\par          <-   -- D\'e9place le curseur d'une case vers la gauche
\par 
\par Quand on est en mode insertion, notez le curseur en forme de pav\'e9.
\par 
\par Maintenant que vous voil\'e0 un peu plus familiaris\'e9 avec l'environnement,
\par essayons quelques nouvelles commandes.
\par 
\par     Effacez la commande que vous \'e9ditiez en pressant
\par     la touche HOME, puis le touche DEL jusqu'\'e0 effacement 
\par     de la commande.
\par 
\par     Entrez:
\par }\pard\plain \s4\ql \li1416\ri0\keepn\widctlpar\faauto\outlinelevel3\rin0\lin1416\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {WR
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par La commande WR rend la fen\'eatre de registre visible. La fen\'eatre de
\par registre affiche le contenu des registres du 8086. Remarquez que la
\par valeur des registres refl\'e8te l'endroit o\'f9 le code \'e9tait ex\'e9cut\'e9 
\par quand vous avez activ\'e9 Soft-ICE.
\par    
\par    Augmentez la taille verticale de la fen\'eatre Soft-ICE avec 
\par    les touches ALT et _ Jusqu'\'e0 ce qu'elle occupe tout l'\'e9cran.
\par    Notez les valeurs de registres CS et IP dans la fen\'eatre 
\par    registre, puis tapez:
\par 
\par }\pard\plain \s4\ql \li1416\ri0\keepn\widctlpar\faauto\outlinelevel3\rin0\lin1416\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {MAP
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par La commande MAP affiche une carte de la m\'e9moire syst\'e8me. La zone 
\par dans laquelle se trouve le pointeur d'instructions (CS:IP) est en 
\par surbrillance. Si votre carte m\'e9moire est complexe, il vous faudra
\par plusieurs appuis touche pour retrouver le prompt.
\par 
\par     Essayez maintenant la s\'e9quence suivante plusieurs fois
\par     en notant la valeur du registre (CS:IP).
\par       ALT D
\par       Relachez ALT et D
\par       ALT D
\par 
\par Chaque fois que la fen\'eatre s'affiche, vous pouvez remarquer que la valeur
\par des registres CS et IP a chang\'e9. Quand CS et IP changent, vous pouvez
\par entrer la commande MAP \'e0 nouveau pour voir si le pointeur d'instructions
\par pointe sur une zone diff\'e9rente.
\par 
\par Ce petit exercice d\'e9montre que Soft-ICE est un d\'e9bugger que l'on peut 
\par activer o\'f9 que soit le pointeur d'instructions lorsqu'on presse la 
\par s\'e9quence de touches qui permet de lancer Soft-ICE. Le pointeur 
\par d'instructions change continuellement car il se passe une foule de 
\par choses dans votre machine m\'eame si vous \'eates sous le prompt du DOS, 
\par telles que gestion des interruptions, surveillance des pilotes de
\par p\'e9riph\'e9riques, etc ...
\par 
\par     Pressez la touche de fonction F12.
\par 
\par La touche de fonction F12 est assign\'e9e par d\'e9faut \'e0 la commande VER.
\par Cette commande affiche le message de copyright de Soft-ICE et son
\par num\'e9ro de version.
\par Nous allons maintenant assigner \'e0 la touche F12 la commande RS.
\par 
\par     Entrez:
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {           RS
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Ceci affiche temporairement l'\'e9cran du programme en cours d'ex\'e9cution
\par sans la fen\'eatre Soft-ICE.
\par Pressez la barre d'espace pour revenir \'e0 la fen\'eatre Soft-ICE.
\par 
\par     Entrez:
\par      }{\b\f2\fs20  FKEY F12 RS;
\par }{\f2\fs20 
\par Ceci assigne la commande RS \'e0 la touche F12. Le point virgule rep\'e9sente 
\par la touche ENTREE.
\par 
\par     Pressez la touche F12.
\par 
\par Recommencez plusieurs fois pour basculer entre la fen\'eatre de Soft-ICE
\par et l'\'e9cran du programme. Soyez s\'fbr que la fen\'eatre Soft-ICE est affich\'e9e,
\par au besoin en appuyant sur F12. Remarquez la commande RS affich\'e9e plusieurs
\par fois dans la fen\'eatre. Elle est affich\'e9e autant de fois que la touche F12
\par a \'e9t\'e9 press\'e9e.
\par 
\par     Nettoyez la fen\'eatre Soft-ICE en entrant:
\par        CLS
\par 
\par     Entrez:
\par }{\b\f2\fs20       FKEY F12 ^RS;
\par }{\f2\fs20 
\par Le symbole ^ est ob tenu en pressant shift + 6. Ceci affecte la
\par commande RS \'e0 la touche de fonction F12 mais rend la commande 
\par invisible.
\par 
\par     Pressez la touche F12 quelques fois. Remarquez que
\par     la commande RS ne s'affiche plus dans la fen\'eatre.
\par 
\par Vous pouvez aussi affecter une suite de commandes Soft-ICE \'e0 une 
\par touche de fonction. N'oubliez pas de mettre un retour de chariot 
\par entre chaque commande.
\par Maintenant, pr\'e9parez-vous \'e0 utiliser Soft-ICE comme un assistant de
\par l'utilitaire DEBUG de MSDOS.
\par 
\par     Diminuez la hauteur de la fen\'eatre de 6 lignes environ
\par     \'e0 laide des touches ALT _. 
\par     Entrez:
\par       ACTION INT3
\par 
\par Cette commande indique \'e0 Soft-ICE de g\'e9n\'e9rer une INT3 chaque fois que 
\par les conditions d'un point d'arr\'eat sont satisfaites. C'est ainsi que 
\par Soft-ICE communique avec DEBUG. Le r\'e9glage par d\'e9faut est HERE.
\par ACTION HERE rend le contr\'f4le directement \'e0 Soft-ICE. Utilisez ACTION 
\par HERE quand vous utilisez Soft-ICE tout seul.
\par 
\par Pour ceux qui n'utilisent pas DEBUG avec ce didacticiel, le moment est 
\par venu d'improviser. CODEVIEW fonctionne avec ACTION r\'e9gl\'e9 sur NMI.
\par Beaucoup d'autres d\'e9buggers fonctionnent avec ACTION r\'e9gl\'e9 sur INT3.
\par Si ce n'est pas le cas de votre d\'e9bugger et que vous souhaitiez de 
\par l'aide, reportez-vous \'e0 la description compl\'e8te  de la commande ACTION
\par (voir section 5.4).
\par 
\par     Pour faire \'e0 nouveau dispara\'eetre la fen\'eatre Soft-ICE, entrez:
\par         X
\par 
\par Ceci est une autre m\'e9thode pour sortir de SOft-ICE. Elle est 
\par sp\'e9cialement pratique avec les touches de fonction.
\par 
\par Maintenant que vous \'eates familiaris\'e9s avec les bases de l'utilisation 
\par de Soft-ICE, nous allons approfondir quelques points en d\'e9buggant un 
\par programme simple (SAMPLE.ASM).
\par 
\par SAMPLE.ASM est un programme simple \'e9crit en langage assembleur par
\par un programmeur nomm\'e9 Jed. Ce programme lit une touche au clavier
\par et affiche un message disant si la touche press\'e9e \'e9tait ou non un 
\par espace.
\par 
\par    Pour lancer le programme SAMPLE, entrez:
\par       SAMPLE
\par 
\par Maintenant, pressez la barre d'espace. Pressez d'autres touches. 
\par Apparement, le programme de Jed a un probl\'e8me! Jed a pass\'e9 plusieurs 
\par heures \'e0 r\'e9viser son code source et il est s\'fbr qu'il n'y a pas de 
\par faille dans sa logique. Par contre, Jed a r\'e9cup\'e9r\'e9 certaines routines
\par d'un de ses amis, Jake (get_key, is_space?). Jed est quelque peu m\'e9fiant
\par \'e0 leur propos mais ne trouve pas le bug.
\par 
\par Le code source du programme de Jed est celui-ci:
\par 
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 Page 55,80
\par    Title Sample program for Soft-ICE tutorial
\par  DATA Segment Public 'Data'
\par  pad       db 12H dup(O)
\par  }{\f2\fs20 char db 0
\par  answer db 0
\par  space_msg db 'Le Caract\'e8re est un SPACE',0DH,0AH,'$'
\par  no_space_msg db 'Le Caract\'e8re N'EST PAS un'
\par              }{\f2\fs20\lang2057\langfe1036\langnp2057 db 'SPACE',0DH,0AH,'$'
\par  DATA Ends
\par  STACK Segment Stack 'Stack'
\par    Dw 128 Dup (?)     ;Program stack STACK Ends
\par  }{\f2\fs20 CODE Segment Public 'Code'
\par  }{\f2\fs20\lang2057\langfe1036\langnp2057 Assume CS:CODE,DS:DATA,ES:Nothing,SS:STACK
\par 
\par start:
\par 
\par 
\par ; Set up segments
\par    mov ax,DATA
\par    mov es,ax
\par    mov ds,ax
\par 
\par ; Main Program Loop
\par main,loop:
\par     call get_key
\par     call is_space?
\par     cmp answer,0
\par     je no,space 
\par }{\f2\fs20 ; Si c'est un Espace, on affiche le message Espace
\par 
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 mov ah,9
\par    mov dx,offset space_msg
\par    }{\f2\fs20 int 21H
\par    jmp main_loop
\par ; Si ce n'est pas un Espace,on affiche le message pas Espace
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 no_space:
\par    mov ah,9
\par    mov dx,offset no_space_msg
\par    int 21H
\par    jmp main_loop
\par 
\par ;----------------------------------------------------------; 
\par ; JAKE'S ROUTINES 
\par }{\f2\fs20 ;----------------------------------------------------------; 
\par 
\par ; Get Key Routine (Une des routines de Jake) 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 get_key proc
\par    mov ah,8
\par    int 21H
\par    mov char,al
\par    ret get_key endp
\par 
\par ; Check if character is a space (Une des routines de Jake)
\par 
\par is_space? proc
\par    cmp char,20H
\par    jne not_space
\par    mov answer, 1
\par    ret not_space:
\par    mov cs:answer,0
\par    ret is_space? endp
\par 
\par }{\f2\fs20 CODE Ends
\par    Endstart
\par 
\par Jed utilise DEBUG, mais n'a pas \'e9t\'e9 capable de r\'e9soudre le probl\'e8me.
\par Sur les conseils d'un ami, Jethro, Jed a achet\'e9 Soft-ICE. Il \'e9tait assez 
\par r\'e9ticent \'e0 l'utiliser car il avait d\'e9j\'e0 essay\'e9 un debugger Hard mais n'avait 
\par jamais r\'e9ussi \'e0 le faire fonctionner corectement. Il \'e9tait d\'e9cid\'e9 \'e0 utiliser
\par Soft-ICE, car il lui permettait de continuer \'e0 se servir de DEBUG, le seul
\par d\'e9bugger qu'il ma\'eetrise vraiment.
\par 
\par    Pressez CTRL C pour sortir du programme.
\par     Entrez la commande suivante:
\par      DEBUG lecteur:\\chemin\\SAMPLE.EXE
\par        U
\par        R
\par 
\par Durant les heures pass\'e9es \'e0 essayer de trouver ce bug, Jed a acquit la
\par conviction que quelque chose \'e9crase son code de fa\'e7on curieuse.
\par Avec Soft-ICE, Jed d\'e9cide de positionner un point d'arr\'eat domaine m\'e9moire
\par autour de son segment de code.
\par 
\par      Pressez:
\par        ALT D
\par 
\par La fen\'eatre de Soft-ICE appara\'eet. D\'e9placez la fen\'eatre (\'e0 l'aide
\par des touches CTRL et des fl\'e8ches) jusqu'\'e0 faire appara\'eetre 
\par l'affichage des registres sous DEBUG. Il est temps de
\par positionner votre premier Point d'Arr\'eat.
\par 
\par      Entrez:
\par          BPR code-seg:0 code-seg:25 W
\par 
\par Code-seg est la valuer du registre CS comme affich\'e9 par la 
\par commande R de DEBUG.
\par 
\par La commande BPR positionne un point d'arr\'eat sur un domaine m\'e9moire.
\par La longueur du segment de code de Jed est de 25H octets, donc la zone 
\par m\'e9moire sp\'e9cifi\'e9e va du d\'e9but de ce segment de code \'e0 la fin. Le W sert
\par \'e0 indiquer \'e0 Soft-ICE de r\'e9agir sur une \'e9criture. Nous souhaitons 
\par surveiller toute \'e9criture intempestive sur le code de Jed.
\par 
\par     Entrez:
\par         BL
\par 
\par La commande BL affiche tous les points d'arr\'eat. L'affichage de BL
\par doit ressembler \'e0 ceci:
\par 
\par    0) BPR code-seg:0000 code-seg:0025 W C = 01
\par 
\par Le 0 est un identifieur pour ce point d'arr\'eat. Le domaine et W sont
\par affich\'e9s tels qu'ils ont \'e9t\'e9 entr\'e9s, et le count (si rien n'a \'e9t\'e9
\par pr\'e9cis\'e9), est par d\'e9faut \'e0 1.
\par 
\par Voici le moment de v\'e9rit\'e9.
\par    Pressez ALT D.
\par 
\par La fen\'eatre dispara\'eet \'e0 nouveau.
\par    Pour lancer SAMPLE depuis DEBUB, entrez:
\par         G
\par     Pressez la barre d'espace. OK. Maintenant pressez une autre touche.
\par 
\par Notre point d'arr\'eat nous a renvoy\'e9s dans DEBUG. Les registres et une 
\par seule instruction d\'e9sassembl\'e9e sont affich\'e9s.
\par 
\par     Entrez:
\par        U cs:addresse
\par 
\par Addresse est la valeur du registre IP moins 10H. Comme DEBUG est
\par un peu primitif, la valeur de IP moins 10H doit \'eatre calcul\'e9e \'e0 la
\par main. Le compteur d'instructions pointe sur l'instruction qui est 
\par juste apr\'e8s celle ayant caus\'e9 le point d'arr\'eat. En revenant en 
\par arri\'e8re de 10H instructions, DEBUG peut se resynchroniser.
\par 
\par L'instruction \'e0 l'offset 3BH est:
\par        }{\f2\fs20\lang2057\langfe1036\langnp2057 CS:
\par        MOV BYTE PTR [13],0
\par 
\par }{\f2\fs20 Jed s'exclame,"Il est l\'e0! Je savais que le probl\'e8me \'e9tait dans les
\par routines de Jake! Cette instruction d'\'e9criture dans le segment de code
\par met un octet \'e0 0 dans mon code. Qui peut se douter du r\'e9sultat !"
\par 
\par     Entrez:
\par         U 0
\par 
\par L'emplacement 13H est en fait l'offset d'une instruction de saut 
\par conditionnel. L'offset relatif du saut conditionnel est ainsi mis \'e0 0.
\par 
\par Maintenant, nous allons voir comment ce probl\'e8me peut \'eatre r\'e9solu en 
\par utilisant Soft-ICE tout seul. Nous devons tout d'abord quitter DEBUG.
\par 
\par Avant de quitter le d\'e9bugger, il est toujours souhaitable de d\'e9sarmer 
\par tous les points d'arr\'eat \'e0 moins que ACTION soit positionn\'e9 sur HERE.
\par Si vous ne le faites pas et qu'un point d'arr\'eat se produise, ACTION va
\par tenter de r\'e9activer un d\'e9bugger qui n'est plus en m\'e9moire; le r\'e9sultat
\par est impr\'e9visible. Nous avons positionn\'e9 ACTION sur INT3, nous allons 
\par donc d\'e9sarmer le point d'arr\'eat.
\par 
\par    Pour afficher la fen\'eatre, pressez:
\par       ALT D
\par 
\par     Listez les points d'arr\'eat en entrant:
\par         BL
\par 
\par Remarquez que la ligne contenant la description du point d'arr\'eat
\par est en surbrillance. Le point d'arr\'eat en surbrillance est le 
\par dernier \'e0 s'\'eatre produit.
\par 
\par     Notez que le point d'arr\'eat porte le num\'e9ro 0.
\par     Pour d\'e9sarmer le point d'arr\'eat num\'e9ro 0, entrez:
\par       BD 0
\par     Listez les points d'arr\'eat \'e0 nouveau en entrant:
\par         BL
\par 
\par 
\par L'ast\'e9risque (*) apr\'e8s le num\'e9ro du point d'arr\'eat montre que le point 
\par d'arr\'eat est d\'e9sactiv\'e9.
\par 
\par     Pour effacer un point d'arr\'eat, entrez:
\par       BC 0
\par    Entrez BL \'e0 nouveau.
\par 
\par Remarquez qu'il n'y a plus de point d'arr\'eat affich\'e9.
\par 
\par    quittez Soft-ICE, puis quittez DEBUG, en entrant:
\par         X
\par         Q
\par 
\par  La partie suivante du didacticiel montre comment Soft-ICE peut \'eatre 
\par utilis\'e9 tout seul pour r\'e9soudre le m\'eame genre de probl\'e8me. Soft-ICE
\par sera utilis\'e9 comme d\'e9bugger source.
\par 
\par Pour pr\'e9parer Soft-ICE \'e0 d\'e9bugger au niveau source, il doit avoir \'e9t\'e9 
\par install\'e9 dans votre fichier CONFIG.SYS et de la m\'e9moire \'e9tendue doit 
\par avoir \'e9t\'e9 allou\'e9e pour les symboles le fichier source. Soft-ICE ne peut
\par \'eatre utilis\'e9 comme d\'e9bugger source que si vous avez de la m\'e9moire \'e9tendue
\par sur votre syst\'e8me.
\par 
\par Si vous n'avez pas de m\'e9moire \'e9tendue, vous pouvez tout de m\'eame lire
\par le reste du didacticiel pour voir les possibilit\'e9s de Soft-ICE avec
\par de la m\'e9moire \'e9tendue. Si vous n'avez pas charg\'e9 S-ICE.EXE dans votre
\par CONFIG.SYS avec de la m\'e9moire r\'e9serv\'e9e pour les symboles, faites-le
\par maintenant.
\par 
\par Pour d\'e9bugger le programme d'exemple avec Soft-ICE seul, vous devez
\par utiliser le programme chargeur (LDR.EXE). Pour charger le programme
\par exemple (SAMPLE.EXE), le fichier symbole (SAMPLE.SYM) et le fichier
\par source (SAMPLE.ASM), entrez:
\par 
\par       LDR SAMPLE
\par 
\par Vous \'eates maintenant sous Soft-ICE avec SAMPLE.EXE charg\'e9 en m\'e9moire.
\par Remarquez que Soft-ICE occupe tout l'\'e9cran. Soft-ICE bascule en mode
\par WIDE quand un programme est charg\'e9. Le source (SAMPLE.ASM) est visible
\par dans la fen\'eatre code. De plus, les fen\'eatres donn\'e9es et registres sont
\par visibles.
\par 
\par     Ex\'e9cutez une instruction en pressant F10.
\par 
\par Remarquez que la barre en vid\'e9o inverse se d\'e9place sur la prochaine
\par instruction \'e0 ex\'e9cuter apr\'e8s un saut.
\par 
\par     Pressez F6.
\par 
\par Ceci place le curseur dans la fen\'eatre code.
\par     Faites maintenant des essais avec les 
\par     touches _, _, pageUp, et pageDn 
\par     pour d\'e9placer le curseur et vous d\'e9placer
\par     au long du source.
\par     D\'e9placez le curseur sur la ligne 42.
\par 
\par     Pressez F9.
\par Vous venez de positionner un point d'arr\'eat sur la ligne 42. La 
\par ligne est en surbrillance vous montrant ainsi qu'un point d'arr\'eat y 
\par a \'e9t\'e9 plac\'e9.
\par 
\par     Entrez:
\par             BL
\par 
\par Cela vous montre le point d'arr\'eat qui vient juste d'\'eatre pos\'e9.
\par    
\par     Maintenant, pressez ALT D.
\par 
\par Ceci sort de Soft-ICE et ex\'e9cute le programme SAMPLE jusqu'au point
\par d'arr\'eat de la ligne 42. Soft-ICE r\'e9apparait imm\'e9diatement avec la 
\par barre en vid\'e9o inverse sur la ligne 42.
\par 
\par     Pressez F6 \'e0 nouveau.
\par 
\par Ceci vous remet le curseur dans la fen\'eatre de commandes. Entrez maintenant:
\par       BC *
\par 
\par Ceci efface tous les points d'arr\'eat (il n'y en avait qu'un).
\par     Quittez maintenant Soft-ICE par ALT D.
\par 
\par Vous \'eates de retour dans le programme exemple. Tapez quelques 
\par touches juste pour vous assurer qu'il ne fonctionne pas.
\par    Retournez dans Soft-ICE par ALT D.
\par 
\par Comme le bug s'est d\'e9j\'e0 produit, vous devez relancer le programme. Entrez:
\par       EXIT RD
\par 
\par Cette commande force le programme exemple \'e0 se terminer. Le R 
\par indique \'e0 Soft-ICE de restaurer les vecteurs d'interruption dans 
\par l'\'e9tat o\'f9 ils \'e9taient quand le programme exemple a \'e9t\'e9 charg\'e9 avec
\par LDR. Le D indique \'e0 Soft-ICE d'effacer tous les points d'arr\'eat pouvant 
\par encore se trouver en m\'e9moire. Le R et le D ne sont pas n\'e9cessaires 
\par dans ce cas, mais c'est une bonne habitude \'e0 prendre avant de quitter 
\par un programme charg\'e9 par LDR.EXE.
\par 
\par    Vous \'eates de nouveau sous DOS. Rechargez le 
\par    programme en entrant:
\par 
\par       LDR SAMPLE.EXE
\par 
\par Remarquez que le suffixe .EXE a \'e9t\'e9 pr\'e9cis\'e9 cette fois-ci. Quand le
\par suffixe est sp\'e9cifi\'e9, Soft-ICE n'essaie pas de charger les symboles 
\par ou le source. Dans notre cas, les symboles et le source sont toujours 
\par en m\'e9moire.
\par 
\par     Entrez:
\par       SYM
\par 
\par Ceci affiche les symboles publics du programme exemple.
\par     Pressez ESC pour revenir au prompt.
\par 
\par Nous voulons maintenant positionner un point d'arr\'eat domaine m\'e9moire
\par similaire \'e0 celui utilis\'e9 lors de la session avec DEBUG. Cette fois-ci,
\par nous utiliserons les symboles pour positionner le point d'arr\'eat.
\par Entrez:
\par 
\par       BPR START .82 W
\par 
\par Ceci positionne un point d'arr\'eat domaine m\'e9moire dans votre segment 
\par de code, du symbole START \'e0 la ligne 82 du fichier source.
\par 
\par     Entrez:
\par         BL
\par 
\par Vous pouvez v\'e9rifier que le point d'arr\'eat a \'e9t\'e9 positionn\'e9 correctement.
\par 
\par    Pressez ALT D.
\par    Pressez une touche autre que Escape.
\par 
\par Vous voil\'e0 de retour dans Soft-ICE. Reamrquez que l'instruction courante
\par (la ligne avec la barre en vid\'e9o inverse) est l'instruction qui suit celle
\par ayant provoqu\'e9 le point d'arr\'eat.
\par 
\par     Pour voir le code actuel, pressez F3.
\par 
\par Ceci place Soft-ICE en mode mixte. Notez que la barre en vid\'e9o inverse
\par recouvre deux lignes. Il y a la ligne de code actuelle et la ligne de 
\par source correspondante.
\par 
\par    Pressez la touche F3 \'e0 nouveau.
\par 
\par 
\par Vous \'eates de nouveau en mode code. Les lignes de source ne sont plus
\par visibles. L'instruction au-dessus de la barre en vid\'e9o inverse est celle
\par ayant caus\'e9 le point d'arr\'eat.
\par 
\par    Pressez la touche F3 \'e0 nouveau pour revenir en mode source.
\par 
\par Vous pouvez maintenant corriger le bug dans le programme d'exemple.
\par    Sortez du programme d'exemple et revenez sous DOS
\par    en entrant:
\par       EXIT RD
\par 
\par    Rechargez le programme exemple en entrant:
\par       LDR SAMPLE. EXE
\par 
\par     Positionnez la fen\'eatre de code en mode code en pressant 
\par     2 fois la touche F3.
\par     D\'e9sassemblez la routine d\'e9faillante en entrant:
\par     U not_space
\par 
\par Vous allez maintenant utiliser l'aasembleur interactif de Soft-ICE
\par pour corriger le probl\'e8me.
\par 
\par     }{\f2\fs20\lang2057\langfe1036\langnp2057 Entrez:
\par       A not_space
\par 
\par }{\f2\fs20 Soft-ICE vous r\'e9pond en affichant l'adresse.
\par     Entrez:
\par       NOP
\par     Pressez ENTER pour sortir de l'assembleur.
\par 
\par Remarquez, dans la fen\'eatre de code, l'instruction NOP \'e0 la place de CS:
\par \'e0 l'offset 003BH.
\par 
\par     Pressez la touche F3 pour revenir en mode source,
\par     (le code source n'est bien sur pas modifi\'e9).
\par     Pressez ALT D pour lancer le programme corrig\'e9.
\par 
\par     Entrez:
\par         des espaces et quelques autre touches
\par 
\par Ca marche! Vous avez corrig\'e9 le bug!
\par     Pour sortir du programme de Jed et revenir sous DOS, pressez: CTRL C
\par 
\par Nous allons maintenant d\'e9couvrir une autre caract\'e9ristique de Soft-ICE.
\par     Entrez:
\par       LDR SAMPLE.EXE
\par 
\par Ceci recharge une fois encore le programme exemple.
\par 
\par     Entrez:
\par       RIP HANG_EXAMPLE
\par 
\par Les deux premi\'e8res instructions affich\'e9es sont:
\par    CLI
\par    JMP $
\par 
\par Remarquez que l'instruction de saut pointe sur elle-m\'eame. Cette boucle
\par infinie plante normalement le syst\'e8me.
\par 
\par     Entrez:
\par       BREAK ON
\par 
\par Vous venez d'activer le mode BREAK. Le mode BREAK fait tourner le syst\'e8me
\par un peu mois vite mais permet \'e0 Soft-ICE de reprendre la main m\'eame si le 
\par syst\'e8me est bloqu\'e9.
\par 
\par    Quittez Soft-ICE en pressant ALT D.
\par    Votre syst\'e8me est maintenant bloqu\'e9. Pour les incr\'e9dules, tapez:
\par       CTRL ALT DEL
\par 
\par Il ne se passe rien. C'est d\'e9finitivement bloqu\'e9.
\par    Maintenant pressez ALT D.
\par 
\par La fen\'eatre de Soft-ICE est de retour!
\par    Pour quitter la boucle sans fin, entrez:
\par       EXIT RD
\par 
\par Vous \'eates maintenant \'e0 nouveau sous DOS. Faites quelques DIR pour bien 
\par vous rendre compte de la d\'e9gradation des performances. Certaines
\par personnes ne trouvent pas g\'e9nant de rester par d\'e9faut en mode BREAK.
\par 
\par    Remettez le mode BREAK OFF en entrant:
\par       }{\f2\fs20\lang2057\langfe1036\langnp2057 ALT D
\par       BREAK OFF
\par       }{\f2\fs20 ALT D
\par 
\par Refaites quelques directories pour comparer la vitesse.
\par Voil\'e0! C'est termin\'e9! Il est temps d'exp\'e9rimenter et de d\'e9bugger par
\par vous-m\'eame. Feuilletez le reste du manuel et r\'e9f\'e9rez-vous \'e0 certaines
\par sections si n\'e9cessaire
\par 
\par      SECTION II -- Commandes
\par 
\par La Section II contient la liste des syntaxes de chaque commande de
\par Soft-ICE, des explications et des exemples pour chaque commande.
\par Tous les nombres sont en hexad\'e9cimal; tout nombre peut \'eatre une 
\par expression utilisant +,-,*,/, ou des registres. Les commandes 
\par peuvent \'eatre entr\'e9es en majuscules ou en minuscules.
\par Les parties en italique dans l'exemple de syntaxe doivent \'eatre
\par remplac\'e9es par leur valeur actuelle.
\par 
\par  Les conventions de notation suivantes sont utilis\'e9es tout au long de
\par cette section:
\par [ ] -- Les Crochets entourent un param\'e8tre optionnel.
\par < > -- Entourent une liste d'objets ou de choix.
\par x | y -- Les barres Verticales s\'e9parent plusieurs alternatives.
\par                    utilisez soit l'objet x soit l'objet y.
\par count -- Count est une valeur sur un octet qui pr\'e9cise 
\par                    le nombre de fois que les conditions
\par                    d'un point d'arr\'eat doivent \'eatre r\'e9unies
\par                    pour que celui-ci se produise. Si count
\par                    n'est pas pr\'e9cis\'e9, la valeur par d\'e9faut 
\par                    est 1. Chaque fois que la fen\'eatre Soft-ICE
\par                    est activ\'e9e, les compteurs count sont 
\par                    remis \'e0 leurs valeurs de d\'e9part.
\par verb -- Verb est une valeur qui pr\'e9cise quel type d'acc\'e8s 
\par                    un point d'arr\'eat doit surveiller. Il peut 
\par                    \'eatre positionn\'e9 \'e0 'R' pour lecture, \'e0 'W'
\par                    pour \'e9criture, \'e0 'RW' pour lecture/\'e9criture,
\par                    ou \'e0 X pour ex\'e9cute. 
\par address -- Address est une valeur constitu\'e9e de deux mots de 16
\par                    bits s\'e9par\'e9s par deux points (:). Le premier
\par                    mot est l'adresse de segment, le second est 
\par                    l'adresse d'offset.
\par 
\par                  Les adresses peuvent contenir des registres 
\par                  et des symboles.
\par                  Les adresses peuvent aussi contenir les 
\par                  caract\'e8res sp\'e9ciaux "$", "." et "@". Voir
\par                  la section 3.8 (Syntaxe des commandes) pour
\par                  une description de ces caract\'e8res sp\'e9ciaux.
\par break-number -- Break-number est un nombre d'identification
\par                  qui identifie le point d'arr\'eat. (Ex: pour
\par                  l'\'e9diter, l'effacer ou le d\'e9sactiver). Ce
\par                  nombre peut \'eatre un nombre hexad\'e9cimal
\par                  compris entre 0 et F
\par list -- List est une s\'e9rie de num\'e9ros de points d'arr\'eat
\par                  s\'e9par\'e9s par des espaces ou des virgules.
\par mask -- Mask est un masque de bits repr\'e9sent\'e9 par 
\par                  une combinaison de 1, de 0, et de X.
\par                  Les X repr\'e9sentant les bits dont on 
\par                  ne tient pas compte.
\par 
\par    Exemple:
\par 
\par    BPIO 21 W EQ M 1XXX XXXX 
\par 
\par    Cette commande ex\'e9cute un point d'arr\'eat si 
\par    une \'e9criture a lieu sur le port 21H avec le 
\par    bit de poids fort positionn\'e9.
\par GT, LT -- GT et LT sont des qualifieurs des commande
\par                  utilis\'e9s pour les comparaisons de valeurs.
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page {\*\bkmkstart _Toc480604283}CHAPITRE 4
{\*\bkmkend _Toc480604283}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2 Utilisation des Commandes de Point d'arr\'eat
\par     4.1 Introduction
\par     4.2 Positionner les points d'arr\'eat
\par     4.3 Manipuler les points d'arr\'eat
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604284}4.1 Introduction{\*\bkmkend _Toc480604284}

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 Soft-ICE a des possibilit\'e9s de point d'arr\'eat qui ne sont normalement
\par disponibles qu'avec des d\'e9buggers hard.
\par 
\par La puissance et la flexibilit\'e9 du 80386 permettent des possibilit\'e9s de 
\par point d'arr\'eat avanc\'e9es sans \'e9quipement mat\'e9riel suppl\'e9mentaire.
\par 
\par Les points d'arr\'eat peuvent \'eatre positionn\'e9s sur les lectures ou les \'e9critures
\par en m\'e9moire, les lectures ou \'e9critures sur un domaine m\'e9moire, l'ex\'e9cution 
\par d'une instruction et les acc\'e8s aux ports I/O.  Soft-ICE attribue un chiffre
\par hexad\'e9cimal (0-F) \'e0 chaque point d'arr\'eat. Ce nombre est utilis\'e9 pour
\par identifier les points d'arr\'eat quand vous les positionnez, effacez, d\'e9sactivez,
\par activez ou \'e9ditez.
\par 
\par Tous les points d'arr\'eat de Soft-ICE sont permanents. Ils ne disparaissent pas
\par automatiquement apr\'e8s avoir \'e9t\'e9 employ\'e9s; vous devez intentionnellement les
\par effacer ou les d\'e9valider en utilisant les commandes BC ou BD. Soft-ICE peut
\par g\'e9rer 16 points d'arr\'eat en m\'eame temps.
\par 
\par Vous pouvez avoir jusqu'\'e0 dix points d'arr\'eat d'un m\'eame type \'e0 l'exception
\par des points d'arr\'eat m\'e9moire (BPM), desquels vous ne pouvez avoir que quatre,
\par \'e0 cause des limitations du processeur 80386.
\par 
\par Les points d'arr\'eat peuvent \'eatre \'e9tablis avec un param\'e8tre 'count'. Le
\par param\'e8tre 'count' indique \'e0 Soft-ICE  combien de fois le point d'arr\'eat doit
\par \'eatre ignor\'e9 avant que le d\'e9clenchement survienne.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604285}4.2 Positionner les points d'arr\'eat
{\*\bkmkend _Toc480604285}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commandes:
\par      BPM, BPMB, BPMW, BPMD -- positionne un point d'arr\'eat sur
\par                               un acc\'e8s m\'e9moire ou une ex\'e9cution.
\par 
\par      BPR -- Positionne un point d'arr\'eat sur un domaine m\'e9moire.
\par      BPIO -- Positionne un point d'arr\'eat sur un acc\'e8s \'e0 un port I/O.
\par      BPINT -- Positionne un point d'arr\'eat sur une interruption.
\par      BPX -- Positionne/Efface un point d'arr\'eat sur une ex\'e9cution.
\par      CSIP --  D\'e9finit un domaine pour CS:IP.
\par      BPAND -- Attend l'occurence de plusieurs points d'arr\'eat.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { BPM, BPMB, BPMW, BPMD
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par  BPM, BPMB, BPMW, BPMD -- positionne un point d'arr\'eat sur un acc\'e8s
\par                           m\'e9moire ou une ex\'e9cution.
\par 
\par    Syntaxe:
\par      BPM [taille] adresse [verbe] [qualifieur] [C=count]
\par      taille -- B, W, D
\par                      B -- Octet
\par                      W -- Mot
\par                      D -- Mot Double
\par                      La taille est le domaine actuellement
\par                      couvert par ce point d'arr\'eat. Par
\par                      exemple, si un mot double est employ\'e9,
\par                      et le troisi\'e8me octet du double est
\par                      modifi\'e9, alors un point d'arr\'eat
\par                      surviendra.
\par                      La taille est aussi importante si
\par                      l'option qualifier est utilis\'e9e
\par                      (voir ci-dessous).
\par      verbe -- R, W, RW, ou X
\par      qualifieur -- EQ, NE, GT, LT, M
\par                      EQ -- Egal
\par                      NE -- Diff\'e9rent
\par                      GT -- Plus grand que
\par                      LT -- Plus petit que
\par                      M -- Masque
\par                      Ces qualifieurs sont seulement
\par                      applicables aux points d'arr\'eat lecture
\par                      et \'e9criture.
\par      valeur -- Un octet, un mot, ou un double mot,
\par                        en fonction de la taille sp\'e9cifi\'e9e.
\par 
\par }{\b\f2\fs20 Commentaires:
\par }{\f2\fs20 
\par La commande BPM vous permet de positionner un point d'arr\'eat sur la m\'e9moire
\par en lecture, en \'e9criture, ou en ex\'e9cution.
\par 
\par Si un verbe n'est pas pr\'e9cis\'e9, c'est RW par d\'e9faut.
\par 
\par Si une taille n'est pas pr\'e9cis\'e9e, c'est octet par d\'e9faut.
\par 
\par Tous les types de verbe sauf X forcent le programme \'e0 ex\'e9cuter
\par l'instruction qui provoque le point d'arr\'eat.  Le CS:IP courant
\par pointera l'instruction qui suit le point d'arr\'eat. Si le verbe est
\par X, le CS:IP courant pointe l'instruction o\'f9 le point d'arr\'eat \'e9tait
\par positionn\'e9.
\par 
\par Si R est pr\'e9cis\'e9, alors le point d'arr\'eat survient sur un acc\'e8s en
\par lecture ou en \'e9criture, ces op\'e9rations ne changent pas la valeur de
\par l'emplacement m\'e9moire.
\par 
\par Si le type de verbe est R, W ou RW, l'ex\'e9cution d'une instruction \'e0
\par l'adresse pr\'e9cis\'e9e ne provoquera pas l'ex\'e9cution du point d'arr\'eat.
\par 
\par Note:  Si BPMW est employ\'e9, l'adresse pr\'e9cis\'e9e doit commencer sur
\par un mot. Si BPMD est employ\'e9, l'adresse pr\'e9cis\'e9e doit indiquer
\par \'e0 un mot double.
\par 
\par }{\b\f2\fs20 Exemple:
\par }{\f2\fs20    BPM 1234:SI W EQ 10 C=3
\par     Cette commande d\'e9finit un point d'arr\'eat sur
\par     un acc\'e8s m\'e9moire d'un octet. La troisi\'e8me
\par     fois que 10H sera \'e9crit \'e0 l'emplacement
\par     1234:SI, le point d'arr\'eat surviendra.
\par 
\par    BPM CS:1235 X
\par     Cette commande d\'e9finit un point d'arr\'eat sur
\par     ex\'e9cution.Le point d'arr\'eat surviendra la
\par     premi\'e8re fois que l'instruction \'e0 adresse
\par     CS:1235 est atteinte. Le CS:IP courant
\par     sera l'instruction o\'f9 le point d'arr\'eat
\par     \'e9tait positionn\'e9.
\par 
\par    BPMW DS:FOO W EQ M 0XXX XXXX XXXX XXX1
\par     Cette commande d\'e9finit un point d'arr\'eat mot
\par     sur les \'e9critures m\'e9moire.  Le point d'arr\'eat
\par     surviendra la premi\'e8re fois que l'emplacement
\par     DS:FOO verra sa valeur \'e9crite avec le bit de
\par     poids fort \'e0 0 et le bit de poids faible \'e0 1.
\par     Les autres bits sont indiff\'e9rents.
\par 
\par   }{\f2\fs20\lang1043\langfe1036\langnp1043 BPM DS:1000 W GT 5
\par     }{\f2\fs20 Cet ordre d\'e9finit un point d'arr\'eat octet sur 
\par     les \'e9critures m\'e9moire. Le point d'arr\'eat surviendra
\par     la premi\'e8re fois qu'il y aura \'e9criture en DS:1000 
\par     d'une valeur sup\'e9rieure \'e0 5.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {           BPR
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BPR -- Positionne un point d'arr\'eat sur un domaine m\'e9moire
\par 
\par Syntaxe:
\par     BPR adresse_d\'e9but adresse_fin [verbe] [C=count]
\par     adresse_d\'e9but, adresse_fin -- adresse_d\'e9but et adresse_fin 
\par                                    d\'e9finissent le domaine m\'e9moire.
\par 
\par     verbe -- R, W, RW, T ou TW
\par 
\par Commentaire:
\par 
\par La commande BPR vous permet de positionner un point d'arr\'eat
\par sur une zone de m\'e9moire.
\par 
\par Tous les types de verbe sauf T ou TW forcent le programme \'e0 ex\'e9cuter
\par l'instruction qui a caus\'e9 le point d'arr\'eat. Le CS:IP courant pointera
\par l'instruction suivant le point d'arr\'eat.
\par 
\par Il n'y a aucun point d'arr\'eat domaine sur une ex\'e9cution. Si un point d'arr\'eat
\par domaine est d\'e9sir\'e9 sur une ex\'e9cution, R doit \'eatre employ\'e9. Le d\'e9codage d'une
\par instruction est consid\'e9r\'e9 comme une lecture pour des points d'arr\'eat domaine.
\par 
\par Si aucun verbe n'est pr\'e9cis\'e9, W sera le verbe par d\'e9faut.
\par 
\par Le point d'arr\'eat domaine d\'e9grade les performances du syst\'e8me dans certaines
\par circonstances. Toute lecture ou \'e9criture dans la page de 4K qui contient
\par le domaine du point d'arr\'eat est analys\'e9e par Soft-ICE. Cette d\'e9gradation des
\par performances n'est pas habituellement visible, cependant, elle pourrait \'eatre
\par extr\'eame dans des cas d'exception.
\par 
\par Les verbes T et TW activent des domaines de trace arri\'e8re sur le domaine
\par pr\'e9cis\'e9e. Ils ne provoquent pas de points d'arr\'eat, mais notent plut\'f4t des
\par informations sur les instructions qui peuvent \'eatre affich\'e9es ult\'e9rieurement
\par avec les commandes SHOW ou TRACE. Pour plus d'information sur les domaines de
\par trace arri\'e8re, voir le chapitre 9.
\par 
\par Exemple:
\par    BPR B000:0 B000:1000 W
\par    Cette commande d\'e9finit un point d'arr\'eat sur un domaine de m\'e9moire.
\par    Le point d'arr\'eat surviendra s'il y a la moindre \'e9criture dans la zone
\par    m\'e9moire de l'adaptateur monochrome.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {            BPIO
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par  BPIO -- point d'arr\'eat sur acc\'e8s aux ports I/O
\par 
\par  Syntaxe:
\par      BPIO port [verbe] [qualifieur valeur] [C=count]
\par      port -- Une valeur sur un mot ou un octet
\par      verbe -- R, W, ou RW
\par                   R -- Lire (ENTREE)
\par                   W -- Ecrire (SORTIE)
\par      qualifieur -- EQ, NE, GT, LT, M
\par                   EQ -- Egal
\par                   NE -- Pas Egal
\par                   GT -- Plus grand Que
\par                   LT -- Plus petit Que
\par                   M -- Masque
\par 
\par      la valeur - - Une valeur de mot ou octet
\par 
\par Commentaires:
\par 
\par La commande BPIO vous permet de positionner un point d'arr\'eat sur les
\par lectures ou les \'e9critures sur les ports I/O.
\par 
\par Si valeur est pr\'e9cis\'e9e, elle est compar\'e9e avec les donn\'e9es r\'e9elles
\par lues ou \'e9crites par l'instruction IN ou OUT causant le point d'arr\'eat.
\par La valeur peut \'eatre un octet ou un mot. Si le port I/O est un port 8 bits,
\par alors les 8 bits de poids faible sont employ\'e9s dans la comparaison.
\par 
\par Le pointeur d'instruction (CS:IP) pointera sur l'instruction apr\'e8s le IN ou
\par le OUT qui a caus\'e9 le point d'arr\'eat.
\par 
\par Si un verbe n'est pas pr\'e9cis\'e9, RW est la valeur par d\'e9faut.
\par 
\par Exemple:
\par   BPIO 21 W NE FF
\par 
\par    Cette commande positionne un point d'arr\'eat sur un acc\'e8s \'e0 un port I/O.
\par    Le point d'arr\'eat surviendra si un des registres de masque du contr\'f4leur
\par    d'interruptions est \'e9crit avec une valeur autre que FFH.
\par 
\par   }{\f2\fs20\lang2057\langfe1036\langnp2057 BPIO 3FE R EQ M 11XX XXXX
\par 
\par    }{\f2\fs20 Cette commande d\'e9finit un point d'arr\'eat octet sur une lecture d'un port I/O.
\par    Le point d'arr\'eat surviendra la premi\'e8re fois que le port I/O 3FE sera lu
\par    avec une valeur qui a les deux bits de poids fort \'e0 1. Les autres bits
\par    peuvent prendre toute valeur.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {           BPINT
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BPINT -- Positionne un point d'arr\'eat sur une interruption
\par 
\par Syntaxe:
\par   BPINT num-int [<AL | AH | AX >= valeur] [C = compte]
\par   num-int -- Num\'e9ro de l'Interruption de 0 \'e0 FFH
\par   valeur -- Un octet ou un mot
\par 
\par Commentaire:
\par 
\par La commande BPINT permet d'intervenir dans l'ex\'e9cution d'une interruption
\par mat\'e9rielle ou logicielle. En utilisant le registre optionnel AX avec une
\par valeur, des appels DOS ou BIOS sp\'e9cifiques peuvent \'eatre isol\'e9s ais\'e9ment.
\par 
\par Si aucune valeur n'est pr\'e9cis\'e9e, un point d'arr\'eat surviendra quand
\par l'interruption pr\'e9cis\'e9e par num-int se produit. Cette interruption peut \'eatre
\par une interruption logicielle, mat\'e9rielle, ou interne.
\par 
\par La valeur optionnelle est compar\'e9e avec le registre pr\'e9cis\'e9 (AH, AL, ou AX)
\par quand l'interruption survient. Si la valeur correspond au registre pr\'e9cis\'e9,
\par alors le point d'arr\'eat surviendra.
\par 
\par Quand le point d'arr\'eat survient, si l'interruption \'e9tait une
\par interruption mat\'e9rielle, le CS:IP point sur la premi\'e8re instruction \'e0 
\par l'int\'e9rieur de la routine d'interruption. La commande INT? peut \'eatre 
\par employ\'e9e pour voir o\'f9 l'ex\'e9cution en \'e9tait quand l'interruption est
\par survenue. Si l'interruption \'e9tait une interruption logicielle, quand le 
\par point d'arr\'eat, le CS:IP pointe sur l'instruction INT ayant caus\'e9 
\par l'interruption.
\par 
\par Exemple:
\par   BPINT 21 AH=4C
\par 
\par    Cette commande positionne un point d'arr\'eat sur l'interruption 21H 
\par    Le point d'arr\'eat surviendra quand la fonction DOS 4CH (termine le 
\par    programme) est appel\'e9e.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                          BPX
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BPX -- Positionne ou supprime un point d'arr\'eat sur ex\'e9cution
\par 
\par Syntaxe:
\par 
\par     BX [adresse] [C=count]
\par 
\par Commentaire:
\par 
\par La commande BPX vous permet de positionner ou de supprimer un point d'arr\'eat
\par d'ex\'e9cution dans le source. Quand le curseur est dans la fen\'eatre de code,
\par l'adresse n'est pas requise. Le point d'arr\'eat d'ex\'e9cution est positionn\'e9
\par \'e0 l'adresse du curseur. Si un point d'arr\'eat d'ex\'e9cution a d\'e9j\'e0 \'e9t\'e9
\par positionn\'e9 \'e0 l'adresse du curseur, alors le point d'arr\'eat est supprim\'e9.
\par 
\par Si la fen\'eatre de code n'est pas visible ou si le curseur n'est pas dans
\par la fen\'eatre de code alors l'adresse doit \'eatre pr\'e9cis\'e9e. Si l'offset seul
\par est pr\'e9cis\'e9 alors le registre CS sera utilis\'e9 comme segment.
\par 
\par Note Technique:
\par BPX emploie un point d'arr\'eat style INT3 \'e0 moins que l'adresse sp\'e9cifi\'e9e ne 
\par soit en ROM. C'est employ\'e9 au lieu d'un point d'arr\'eat registre afin de laisser
\par plus de points d'arr\'eat ex\'e9cution disponibles. Si les circonstances requi\'e8rent
\par l'emploi d'un point d'arr\'eat registre pour une raison particuli\'e8re (code pas
\par encore charg\'e9 par exemple) vous pouvez \'e9tablir un point d'arr\'eat d'ex\'e9cution
\par avec la commande BPM.
\par 
\par Exemple:
\par    BPX.1234
\par     Cela positionne un point d'arr\'eat ex\'e9cution \'e0 ligne de source 1234.
\par 
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {             CSIP
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par CSIP -- Positionne CS:IP sur un domaine m\'e9moire
\par 
\par Syntaxe:
\par     CSIP [OFF | [NOT] adresse-d\'e9but adresse-fin]
\par     NOT -- Quand NOT est pr\'e9cis\'e9, le point d'arr\'eat ne survient
\par                      que si le CS:IP est hors du domaine pr\'e9cis\'e9e.
\par     }{\f2\fs20\lang2057\langfe1036\langnp2057 OFF -- Met OFF le test de CS:IP
\par 
\par }{\f2\fs20 Commentaire:
\par 
\par La commande CSIP force un point d'arr\'eat \'e0 \'eatre d\'e9pendant de l'emplacement
\par du pointeur d'instructions quand les conditions de point d'arr\'eat sont r\'e9unies.
\par Cette fonction est souvent utile quand un programme est soup\'e7onn\'e9 de modifier
\par accidentellement du code en-dehors de son domaine.
\par 
\par Quand les conditions de point d'arr\'eat sont rencontr\'e9es, le registre CS:IP
\par est compar\'e9 avec un domaine pr\'e9cis. S'il est dans le domaine, le point
\par d'arr\'eat est activ\'e9. Pour activer le point d'arr\'eat quand CS:IP est hors du
\par domaine, utilisez le param\'e8tre NOT.
\par 
\par Quand un domaine CSIP est pr\'e9cis\'e9e, il s'applique \'e0 TOUS les points d'arr\'eat
\par qui sont actuellement actifs.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, le domaine CSIP courant est affich\'e9.
\par Exemple:
\par 
\par    CSIP NE F000:0 FFFF:0
\par 
\par    Cette commande force le point d'arr\'eat \'e0 survenir
\par    seulement le si CS:IP n'est pas dans la ROM BIOS
\par    quand les conditions de point d'arr\'eat sont r\'e9unies.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {         BPAND
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BPAND -- Attente du d\'e9clenchement de plusieurs points d'arr\'eat
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par    BPAND liste | * | OFF
\par     }{\f2\fs20 liste -- Une s\'e9rie de num\'e9ros de points d'arr\'eat
\par              s\'e9par\'e9s par des virgules ou des espaces
\par 
\par     * -- r\'e9alise un AND entre tous les points d'arr\'eat
\par 
\par Commentaire:
\par 
\par La commande BPAND fait un ET logique de deux ou plus points d'arr\'eat,
\par en ne les activant que quand les conditions de tous les points d'arr\'eat
\par sont remplies.
\par 
\par Parfois, les conditions surviennent quand vous ne voulez pas qu'un point
\par d'arr\'eat soit activ\'e9 jusqu'\'e0 ce que plusieurs conditions diff\'e9rentes soient
\par rencontr\'e9es. La commande BPAND permet de pr\'e9ciser deux ou plusieurs points
\par d'arr\'eat qui doivent survenir avant que l'action se d\'e9clenche.
\par Cette fonction permet de d\'e9finir des conditions de point d'arr\'eat plus
\par complexes.
\par 
\par Chaque fois que la commande BPAND est employ\'e9e, les num\'e9ros de points d'arr\'eat
\par pr\'e9cis\'e9s sont ajout\'e9s \'e0 la liste jusqu'\'e0 ce que BPAND OFF soit employ\'e9.
\par 
\par Vous pouvez savoir quels points d'arr\'eat sont li\'e9s avec la commande AND en 
\par listant les points d'arr\'eat avec la commande BL. Les points d'arr\'eat li\'e9s 
\par par la commande AND auront un ampersand (&) apr\'e8s leur num\'e9ro.
\par 
\par Une fois que des points d'arr\'eat ont \'e9t\'e9 li\'e9s avec AND, chacun reste li\'e9 par
\par AND jusqu'\'e0 ce qu'il soit effac\'e9, ou jusqu'\'e0 ce que BPAND soit mis OFF.
\par 
\par Exemple:
\par BPAND 0,2,3
\par 
\par Cette commande force les conditions des points d'arr\'eat 0, 2, et
\par 3 \'e0 \'eatre logiquement li\'e9es ensemble. Le point d'arr\'eat survient seulement
\par quand les conditions de tous les trois sont r\'e9unies. Par exemple, si les
\par conditions des points d'arr\'eat 2 et 3 ont toutes les deux \'e9t\'e9 rencontr\'e9es
\par au moins une fois chacune, mais que les conditions du point d'arr\'eat 0 
\par n'ont pas encore \'e9t\'e9 rencontr\'e9es, alors l'action ne surviendra pas tant 
\par que les conditions du point d'arr\'eat 0 ne seront pas rencontr\'e9es.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604286}4.3 Manipulation des points d'arr\'eat
{\*\bkmkend _Toc480604286}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE fournit plusieurs commandes pour manipuler des points d'arr\'eat.
\par Les commandes de manipulation permettent de lister, de modifier, d'effacer,
\par d'activer, et de d\'e9sactiver des points d'arr\'eat. Les points d'arr\'eat sont
\par identifi\'e9s par leurs num\'e9ros qui sont des chiffres hexad\'e9cimaux de 0 \'e0 F.
\par Les commandes de manipulation de point d'arr\'eat sont:
\par 
\par 
\par BD -- D\'e9sactiver des points d'arr\'eat
\par BE -- Activer des points d'arr\'eat
\par BL -- Lister des points d'arr\'eat
\par BPE -- Editer des points d'arr\'eat
\par BPT --Utiliser un point d'arr\'eat comme mod\'e8le
\par BC -- Effacer des points d'arr\'eat
\par BD -- D\'e9sactiver des points d'arr\'eat
\par 
\par }\pard \ql \li2832\ri0\widctlpar\faauto\rin0\lin2832\itap0 {\b\f2\fs20 BD
\par }\pard \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 {\f2\fs20 Syntaxe:
\par    BD liste | *
\par    liste -- Une s\'e9rie num\'e9ros de points d'arr\'eat s\'e9par\'e9s
\par                  par des virgules ou des espaces
\par 
\par    * -- D\'e9sactive tous les points d'arr\'eat
\par 
\par Commentaire:
\par 
\par La commande BD est utilis\'e9 pour d\'e9sactiver temporairement des points d'arr\'eat.
\par Les points d'arr\'eat peuvent \'eatre r\'e9ctiv\'e9s avec la commande BE (Activer point
\par d'arr\'eat).
\par 
\par Vous pouvez pr\'e9ciser quels  points d'arr\'eat sont d\'e9sactiv\'e9s en \'e9num\'e9rant les
\par points d'arr\'eat avec la commande BL. Les points d'arr\'eat d\'e9sactiv\'e9s sont rep\'e9r\'e9s
\par avec un ast\'e9risque (*) apr\'e8s leur num\'e9ro.
\par 
\par Exemple:
\par    BD 1,3
\par 
\par    Cette commande d\'e9sactive temporairement les points
\par          d'arr\'eat 1 et 3.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                         BE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BE -- Active des points d'arr\'eat
\par 
\par Syntaxe:
\par     BE liste | *
\par     liste -- Une s\'e9rie de num\'e9ros de points d'arr\'eat s\'e9par\'e9s
\par                  par des virgules ou des espaces
\par 
\par     * -- Active tous les points d'arr\'eat
\par 
\par Commentaire:
\par 
\par La commande BE est utilis\'e9e pour r\'e9activer des points d'arr\'eat qui avaient 
\par \'e9t\'e9 d\'e9sactiv\'e9s par la commande BD.
\par 
\par Notez qu'un point d'arr\'eat est automatiquement activ\'e9 quand il
\par    est d\'e9fini pour la premi\'e8re fois.
\par 
\par Exemple:
\par    BE 3
\par    
\par    Cette commande active le point d'arr\'eat n\'b03.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                       BL
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BL -- liste les points d'arr\'eat
\par 
\par Syntaxe:
\par    BL
\par 
\par Commentaires:
\par 
\par La commande BL affiche tous les points d'arr\'eat actuellement positionn\'e9s.Pour
\par chaque point d'arr\'eat, BL \'e9num\'e8re le num\'e9ro, les conditions, l'\'e9tat, et le
\par compteur.
\par 
\par L'\'e9tat d'un point d'arr\'eat est soit activ\'e9, soit d\'e9sactiv\'e9. Si le point d'arr\'eat
\par est d\'e9sactiv\'e9, un ast\'e9risque (*) est affich\'e9 apr\'e8s son num\'e9ro. Si un point
\par d'arr\'eat activ\'e9 est employ\'e9 dans une commande BPAND, un ampersand (&) est affich\'e9
\par apr\'e8s son num\'e9ro. Le point d'arr\'eat qui a caus\'e9 une action le plus r\'e9cemment
\par est affich\'e9 en surbrillance..
\par 
\par La commande BL n'a pas de param\'e8tres.
\par 
\par Exemple:
\par    BL
\par 
\par 
\par    Cette commande affiche tous les points d'arr\'eat qui ont \'e9t\'e9 d\'e9finis.
\par    Voici un exemple qui affiche 4 points d'arr\'eat:
\par 
\par 
\par         }{\f2\fs20\lang2057\langfe1036\langnp2057 0) BPMB 1234:0000 W EQ 0010 C=03
\par         1) * BPR B000:0000 B000:1000 W C=01
\par         2) BPIO 0021 W NE 00FF C=01
\par         }{\f2\fs20 3) BPINT 21 AH=4C C=01
\par 
\par     Noter que dans cet exemple, le point d'arr\'eat 1 est pr\'e9c\'e9d\'e9
\par         d'un ast\'e9risque (*), montrant qu'il a \'e9t\'e9 d\'e9valid\'e9.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {            BPE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BPE -- Edite un point d'arr\'eat
\par 
\par Syntaxe:
\par    BPE num\'e9ro du point d'arr\'eat
\par 
\par Commentaire:
\par 
\par La commande BPE charge la description du point d'arr\'eat sur la ligne de
\par commande pour la modification.  La commande peut alors \'eatre \'e9dit\'e9e en
\par utilisant les touches d'\'e9dition et revalid\'e9e en pressant ENTREE. Cette
\par commande offre une m\'e9thode rapide pour modifier les param\'e8tres d'un point
\par d'arr\'eat existant.
\par 
\par Exemple:
\par   BPE 1
\par 
\par    Cette commande d\'e9place la description du
\par    point d'arr\'eat 1 dans la ligne d'\'e9dition et
\par    efface le point d'arr\'eat 1. Presser la touche
\par    ENTREE r\'e9activera le point d'arr\'eat avec ses
\par    nouveaux param\'e8tres s'il y a lieu.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                   BPT
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BPT -- Utilise un point d'arr\'eat comme mod\'e8le
\par 
\par Syntaxe:
\par    BT num\'e9ro du point d'arr\'eat
\par 
\par Commentaire:
\par 
\par La commande BPT emploie une description de point d'arr\'eat comme mod\'e8le
\par pour un nouveau point d'arr\'eat.
\par 
\par Une description du point d'arr\'eat existant est charg\'e9e sur la ligne d'\'e9dition.
\par Le point d'arr\'eat r\'e9f\'e9renc\'e9 par le num\'e9ro n'est pas modifi\'e9. Cette commande
\par offre une m\'e9thode rapide pour cr\'e9er un nouveau point d'arr\'eat similaire \'e0 un
\par d\'e9j\'e0 existant.
\par 
\par Exemple:
\par   BPT 3
\par 
\par    Cette commande d\'e9place un mod\'e8le du point d'arr\'eat 3
\par    sur la ligne d'\'e9dition. Quand la touche ENTREE est
\par    press\'e9e, un nouveau point d'arr\'eat est ajout\'e9.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                          BC
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BC -- Efface tous les points d'arr\'eat
\par 
\par Syntaxe:
\par     BC liste | *
\par     liste -- Une s\'e9rie de num\'e9ros de points d'arr\'eat
\par              s\'e9par\'e9s par des virgules ou des espaces
\par 
\par     * -- Efface tous les points d'arr\'eat
\par 
\par Commentaire:
\par 
\par La commande BC est employ\'e9e pour effacer d\'e9finitivement un ou plusieurs
\par points d'arr\'eat.
\par 
\par Exemple:
\par    BC *
\par 
\par      Cette commande efface tous les points d'arr\'eat.
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page {\*\bkmkstart _Toc480604287}CHAPITRE 5
{\*\bkmkend _Toc480604287}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\b\f2 
\par Utilisation d'autres Commandes
\par    5.1 Commandes d'\'e9dition et d'affichage
\par    5.2 Commandes des Ports I/O
\par    5.3 Commandes des Contr\'f4les de Transfert
\par    5.4 Commandes du Mode D\'e9bug
\par    5.5 Commandes Utilitaires
\par    5.6 Commandes Sp\'e9cialis\'e9es de D\'e9bugging
\par    5.7 Commandes de Fen\'eatrage
\par    5.8 Commandes de Personnalisation du D\'e9bugger
\par    5.9 Commandes de Contr\'f4le D'\'e9cran
\par    5.10 Commandes Ligne Source et Symbole
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {   {\*\bkmkstart _Toc480604288}5.1 Commandes d'\'e9
dition et d'affichage{\*\bkmkend _Toc480604288}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commandes:
\par U        -- D\'e9sassemble instructions ou affiche un source
\par R        -- Affiche ou modifie des registres
\par MAP      -- Affiche une carte m\'e9moire du syst\'e8me
\par D        -- Affiche la m\'e9moire dans le dernier format pr\'e9cis\'e9
\par DB       -- Affiche la m\'e9moire dans le format octet
\par DW       -- Affiche la m\'e9moire dans le format mot
\par DD       -- Affiche la m\'e9moire dans le format mot double
\par E        -- Edite la m\'e9moire dans le dernier format pr\'e9cis\'e9
\par EB       -- Edite des octets en m\'e9moire
\par EW       -- Edite des mots en m\'e9moire
\par ED       -- Edite des mots doubles en m\'e9moire
\par INT?     -- Affiche le dernier num\'e9ro d'interruption
\par ? ou H   -- Affiche des Informations d'Aide
\par VER      -- Affiche le num\'e9ro de version de Soft-ICE
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                    U
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par U -- D\'e9sassemble des instructions ou affiche un source
\par 
\par Syntaxe:
\par 
\par     U [adresse] [L[=]longueur]
\par 
\par    longueur -- Le nombre d'instructions \'e0 d\'e9sassembler
\par 
\par Commentaires:
\par 
\par La commande U affiche les instructions du programme en d\'e9bugging.
\par 
\par Si longueur n'est pas pr\'e9cis\'e9e, la longueur par d\'e9faut est fix\'e9e \'e0 huit
\par lignes s'il y en a huit disponibles, ou une de moins que la longueur d'\'e9cran.
\par 
\par Si adresse n'est pas pr\'e9cis\'e9e, la commande d\'e9sassemble \'e0 l'adresse commen\'e7ant
\par au premier octet apr\'e8s le dernier octet d\'e9sassembl\'e9 par un pr\'e9c\'e9dent
\par d\'e9sassemblage.  S'il n'y a eu aucun pr\'e9c\'e9dent d\'e9sassemblage, l'adresse par
\par d\'e9faut sera fix\'e9e au CS:IP.
\par 
\par Si la fen\'eatre de code est visible, les instructions sont affich\'e9es dans la
\par fen\'eatre de code.
\par 
\par Si un source est charg\'e9 pour le domaine d'adresses pr\'e9cis\'e9, alors des lignes
\par de source peuvent \'eatre affich\'e9es en accord avec le mode SOURCE actuel.
\par 
\par Exemple:
\par     U $-10
\par    Cette commande d\'e9sassemble des instructions en
\par    commen\'e7ant 10H octets avant l'adresse actuelle.
\par 
\par     U .499
\par 
\par     Cette commande affiche le fichier source actuel
\par     en commen\'e7ant \'e0 la ligne 499. La fen\'eatre de code
\par     doit \'eatre visible et en mode SOURCE.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                       R
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par R -- Affichage ou modifications de registres
\par 
\par Syntaxe:
\par 
\par  R nom-registre [ [ = ] valeur] 
\par 
\par  nom-registre -- Un des noms suivants:
\par                   }{\f2\fs20\lang1043\langfe1036\langnp1043 AL, AH, AX, BL, BH,
\par                   }{\f2\fs20 BX, CL, CH, CX, DL,
\par                   DH, DX, DI, SI, BP,
\par                   }{\f2\fs20\lang1031\langfe1036\langnp1031 SP, IP, CS, DS, ES,
\par                   }{\f2\fs20 SS, ou FL
\par  valeur - - Si nom-registre est diff\'e9rent de FL,
\par                   valeur est une valeur hexa ou une
\par                   expression. Si nom-registre est FL,
\par                   valeur est une s\'e9rie d'un ou plusieurs
\par                   des drapeaux suivants, chacun pr\'e9c\'e9d\'e9
\par                   de fa\'e7on optionnelle par un signe plus
\par                   ou moins:
\par                      O (drapeau de d\'e9bordement)
\par                      D (drapeau de direction)
\par                      I (drapeau d'Interruption)
\par                      S (drapeau de signe)
\par                      Z (drapeau de z\'e9ro)
\par                      A (drapeau Auxiliaire de Retenue )
\par                      P (drapeau de Parit\'e9)
\par                      C (drapeau de Retenue)
\par Commentaires:
\par La commande R modifie ou affiche la valeur des registres.
\par 
\par Si aucun param\'e8tre n'est fourni, les valeurs des drapeaux et des registres
\par sont affich\'e9es, ainsi que l'instruction point\'e9e par CS:IP.
\par 
\par Si nom-registre est entr\'e9 sans valeur, Soft-ICE affiche la valeur actuelle
\par du registre cit\'e9 etattend une nouvelle valeur.  Si nom-registre est FL, les drapeaux  positionn\'e9s sont affich\'e9s en majuscules et en surbrillance; les drapeaux non positionn\'e9s sont affich\'e9s en minuscules et brilla
nce normale. Pour conserver la valeur actuelle d'un registre, pressez ENTREE.
\par 
\par Si nom-registre et valeur sont pr\'e9cis\'e9s, les contenus des registres sp\'e9cifi\'e9s
\par sont modifi\'e9s.
\par 
\par Pour changer d'un valeur d'un drapeau, utilisez FL comme nom-registre, suivi
\par par les symboles des drapeaux dont vous voulez changer la valeur. Pour mettre
\par un drapeau ON, faire pr\'e9c\'e9der le symbole de ce drapeau par un signe plus. Pour
\par mettre un drapeau OFF, faire pr\'e9c\'e9der le symbole de ce drapeau par un signe
\par moins. Les drapeaux peuvent \'eatre \'e9num\'e9r\'e9s dans nimporte quel ordre.
\par 
\par Exemples:
\par   R AH 5
\par 
\par   Cette commande positioonne le registre AH \'e0 5.
\par 
\par   R FL = OZP
\par 
\par   Cette commande bascule la valeur des drapeaux O, Z, et P.
\par 
\par   R  FL
\par 
\par   Cette commande affiche les valeurs actuelles des drapeaux,
\par   et permet leur changement.
\par 
\par   }{\f2\fs20\lang2057\langfe1036\langnp2057 R FL O +A -C
\par 
\par   }{\f2\fs20 Cette commande inverse la valeur du drapeau O, positionne
\par   la valeur du drapeau A sur 1 et celle du drapeau C sur 0.
\par 
\par }\pard\plain \s4\ql \li1416\ri0\keepn\widctlpar\faauto\outlinelevel3\rin0\lin1416\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {MAP
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par MAP -- Affiche une carte de la m\'e9moire syst\'e8me
\par 
\par Syntaxe:
\par 
\par MAP
\par 
\par Commentaires:  La commande CARTE affiche les noms, les emplacements et les
\par tailles des composants de la m\'e9moire syst\'e8me. La taille est exprim\'e9e en
\par paragraphes. Un paragraphe est \'e9quivalent \'e0 10H octets.
\par 
\par Le composant point\'e9 par le CS:IP est affich\'e9 en surbrillance.
\par 
\par Employer la commande MAP quand:
\par     * Un point d'arr\'eat survient et CS:IP n'est
\par          pas dans une r\'e9gion connue de la m\'e9moire.
\par     * Vous voulez obtenir le contr\'f4le d'un
\par          programme r\'e9sidant ou d'un programme
\par          syst\'e8me. Un point d'arr\'eat domaine peut \'eatre
\par          positionn\'e9 bas\'e9 sur la taille et l'adresse
\par          de d\'e9but affich\'e9e par MAP.
\par     * Vous soup\'e7onnez un composant du syst\'e8me ou un
\par          programme d'\'e9crire sur le code hors de son
\par          espace m\'e9moire. MAP est employ\'e9e obtenir
\par          l'adresse de m\'e9moire de la r\'e9gion \'e0 utiliser
\par          avec la commande CSIP.
\par     * Vous souhaitez trouver quel programme r\'e9sidant
\par          intercepte certains vecteurs d'interruption.
\par 
\par Exemple:
\par 
\par     MAP
\par 
\par     Voici un exemple d'affichage produit par la
\par     commande:
\par       Start     Length
\par       0000:0000 0040 Table des vecteurs d'Interruption
\par       0040:0000 0030 ROM BIOS Variables
\par       0070:0000 00FE I/O Syst\'e8me
\par       016E:0000 06B7 DOS
\par       0842:0000 02CE DOS Table Des fichiers & Buffers
\par       A000:0000 5E00 BUS syst\'e8me
\par       F000:0000 1000 ROM BIOS
\par 
\par    Les versions de DOS inf\'e9rieures \'e0 3.1 affichent les
\par    adresses des programmes au lieu de leurs noms.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {            D, DB, DW, DD
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par D, DB, DW, DD -- Affiche la m\'e9moire
\par 
\par Syntaxe:
\par 
\par      D [taille] [adresse] [L[ = ]longueur]
\par      taille -- B -- Octet
\par                W -- Mot
\par                D -- Mot Double
\par 
\par      longueur -- Le nombre d'octets \'e0 afficher.
\par 
\par Commentaires:
\par 
\par La commande D affiche le contenu de la m\'e9moire \'e0 l'adresse sp\'e9cifi\'e9e.
\par 
\par Les contenus sont affich\'e9s dans le format de taille pr\'e9cis\'e9. Si aucune
\par taille n'est pr\'e9cis\'e9e, la derni\'e8re taille employ\'e9e sera utilis\'e9e. La
\par repr\'e9sentation ASCII est aussi utilis\'e9e pour tous les formats.
\par 
\par Si adresse n'est pas pr\'e9cis\'e9e, la commande affiche le contenu de la m\'e9moire
\par \'e0 l'adresse commen\'e7ant au premier octet apr\'e8s le dernier octet affich\'e9 la
\par fois pr\'e9c\'e9dente.
\par 
\par Si longueur n'est pas pr\'e9cis\'e9e, elle est fix\'e9e par d\'e9faut \'e0 huit lignes, ou
\par moins si la fen\'eatre est plus petite.
\par 
\par Si la fen\'eatre de donn\'e9es est visible, les donn\'e9es sont affich\'e9es dans la
\par fen\'eatre de donn\'e9es et la longueur est ignor\'e9e.
\par 
\par Exemple:
\par   DW DS:00 L=8
\par     Cette commande affiche, dans le format de mot et dans le format ASCII, la
\par     valeur des huit premiers octets du segment de donn\'e9es actuel.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {           }{\lang1031\langfe1036\langnp1031 E, EB, EW, ED
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20\lang1031\langfe1036\langnp1031 
\par }{\f2\fs20 E, EB, EW, ED -- Edite la m\'e9moire
\par 
\par Syntaxe:
\par 
\par     E [taille] adresse [liste-donn\'e9es]
\par     taille -- B -- Octet
\par               W -- Mot
\par               D -- Mot Double
\par 
\par     liste-donn\'e9es -- liste d'objets de donn\'e9es de la
\par                         taille pr\'e9cis\'e9e (Octets, Mots
\par                         ou Mots Doubles) ou de cha\'eenes
\par                         s\'e9par\'e9es par des virgules ou
\par                         des espaces. Les cha\'eenes peuvent
\par                         commencer avec une quote simple ou
\par                         une quote double (' ou ").
\par Commentaire:
\par La commande E affiche le contenu de la m\'e9moire \'e0 l'adresse pr\'e9cis\'e9e, et vous
\par permet d'\'e9diter les valeurs.
\par 
\par Ces commandes affichent le contenu de la m\'e9moire dans le format ASCII, et
\par dans le format de taille pr\'e9cis\'e9.
\par 
\par Un \'e9diteur de m\'e9moire est fourni pour de rapides modifications de m\'e9moire.
\par La m\'e9moire peut \'eatre \'e9dit\'e9e en entrant des caract\'e8res ASCII ou en entrant les
\par valeurs d'octet, de mot, ou de mot double. Si aucune taille n'est pr\'e9cis\'e9e, la
\par derni\'e8re taille employ\'e9e sera suppos\'e9e. Les touches d'\'e9dition m\'e9moire sont:
\par 
\par     _ -- D\'e9placement du curseur vers le haut
\par     _ -- D\'e9placement du curseur vers le bas
\par     _ -- D\'e9placement du curseur vers la droite
\par     _ -- D\'e9placement du curseur vers la gauche
\par     ESPACE -- D\'e9placement du curseur vers l'\'e9l\'e9ment suivant
\par     TAB -- Bascule entre la zone num\'e9rique et la zone ASCII
\par     ESC ou
\par     ENTER -- Sortie de l'\'e9diteur de m\'e9moire
\par 
\par Toutes les valeurs sont valid\'e9es, les emplacements m\'e9moire sont mis \'e0 jour.
\par Toutes les valeurs num\'e9riques sont exprim\'e9es en hexad\'e9cimal. Pour basculer
\par entre la zone ASCII la zone num\'e9rique, utilisez la touche TAB.
\par 
\par Si la fen\'eatre de donn\'e9es est visible, les donn\'e9es sont \'e9dit\'e9es dans cette
\par fen\'eatre, sinon les donn\'e9es sont \'e9dit\'e9es dans la fen\'eatre de commandes.
\par 
\par Les donn\'e9es sont par d\'e9faut sur une longueur de 8 lignes dans la fen\'eatre de
\par de commandes, ou adapt\'e9es \'e0 la taille de la fen\'eatre de donn\'e9es si elle est
\par visible.
\par 
\par Si aucun param\'e8tre n'est fourni, le curseur est d\'e9plac\'e9 dans la fen\'eatre de
\par donn\'e9es si elle est visible. Si la fen\'eatre de donn\'e9es n'est pas visible, les
\par donn\'e9es sont \'e9dit\'e9es dans la fen\'eatre de commandes \'e0 la derni\'e8re adresse
\par affich\'e9e ou \'e9dit\'e9e.
\par 
\par Exemples:
\par    EB 1000:0
\par     Cette commande affiche, dans le format d'octet, jusqu' \'e0 six lignes
\par     contenant les repr\'e9sentations num\'e9rique et ASCII des valeurs des donn\'e9es
\par     commen\'e7ant \'e0 l'emplacement 1000:0000. Une fois les lignes affich\'e9es, vous
\par     pouvez \'e9diter les valeurs.
\par    EB 8000:0 "Bonjour" , 0D
\par     Cette commande remplace les valeurs commen\'e7ant \'e0 l'emplacement 8000:0000
\par     par la chaine "Bonjour" suivie par un retour chariot.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {             INT?
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par INT? -- Affiche le num\'e9ro de la derni\'e8re interruption
\par 
\par Syntaxe:
\par 
\par    INT?
\par 
\par Commentaire:
\par La commande INT? affiche l'adresse et le num\'e9ro de la derni\'e8re interruption
\par qui s'est produite.
\par 
\par Exemple:
\par    INT?
\par    Un exemple de l'affichage produit par la commande INT?:
\par         }{\f2\fs20\lang2057\langfe1036\langnp2057 Last Interrupt: 16
\par         At: 0070:0255
\par 
\par    }{\f2\fs20 Cet exemple montre que la derni\'e8re interruption g\'e9n\'e9r\'e9e
\par    dans le syst\'e8me avant que Soft-ICE soit activ\'e9 \'e9tait
\par    l'interruption 16H, \'e0 l'adresse 0070:0255H. Si la derni\'e8re
\par    interruption qui est survenue \'e9tait une interruption
\par    logicielle, le d\'e9sassemblage du code \'e0 l'adresse 0070:0255H
\par    montrera l'instruction d'interruption. Si c'\'e9tait une
\par    interruption mat\'e9rielle, le d\'e9sassemblage du code montrera
\par    l'instruction qui s'ex\'e9cutait quand l'interruption mat\'e9rielle
\par    est survenue.
\par 
\par }{\b\f2\fs20               ?  ou H
\par }{\f2\fs20 
\par ? ou H -- Affiche des informations d'aide
\par 
\par Syntaxe:
\par 
\par     < ? | H > [commande | expression]
\par 
\par Commentaires:
\par La commande ? et La commande H affichent toutes les deux les informations
\par d'aide.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'aide affiche une courte description
\par de toutes les commandes et op\'e9rateurs, un \'e9cran \'e0 la fois. Presser
\par une touche pour continuer, ou ESC pour abandonner l'aide.
\par 
\par Si commande est pr\'e9cis\'e9, l'aide affiche une information plus d\'e9taill\'e9e sur
\par la commande pr\'e9cis\'e9e, incluant la syntaxe de la commande et un exemple.
\par 
\par Si expression est pr\'e9cis\'e9e, l'expression est \'e9valu\'e9e et le r\'e9sultat est
\par affich\'e9 en hexad\'e9cimal, d\'e9cimal, et ASCII.
\par 
\par Exemples:
\par   ? ALTKEY
\par     Cette commande affiche une l'information sur
\par     la commande ALTKEY, incluant sa syntaxe et un
\par     exemple.
\par   H 10 + 14*2
\par     Cette commande affiche: 0038 00056 "8". Ce sont
\par     les repr\'e9sentations hexad\'e9cimales, ASCII et
\par     d\'e9cimales de la valeur de l'expression "10 + 14 * 2".
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {          VER
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par VER -- affiche le num\'e9ro de version de Soft-ICE
\par 
\par Syntaxe:
\par 
\par   VER
\par 
\par Exemple:
\par    VER
\par    Cette commande affiche la version de Soft-ICE
\par    et le message de copyright de Nu - Mega Technologies.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604289}5.2 Commandes des Ports I/O
{\*\bkmkend _Toc480604289}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commande:
\par    I ou IB -- Entr\'e9e d'1 octet depuis un port I/O
\par    IW -- entr\'e9e d'un mot depuis un port I/O
\par    O ou OB -- Sortie d'un octet sur un port I/O
\par    OW -- Sortie d'un mot sur un port I/O
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                    I, IB, IW
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par I, IB, IW -- Entr\'e9e depuis un port I/O port
\par 
\par Syntaxe:
\par 
\par    I [taille] port
\par 
\par    taille -- B -- Octet
\par              W -- Mot
\par 
\par    port -- Une valeur de mot ou d'octet
\par 
\par Commentaire:
\par La commande d'entr\'e9e depuis un port est employ\'e9e pour lire et afficher
\par une valeur d'un port mat\'e9riel. L'entr\'e9e peut \'eatre faite en mot ou en
\par octet. Si aucune taille n'est pr\'e9cis\'e9e, le d\'e9faut est octet.
\par 
\par Exemple:
\par    I 21
\par    Cette commande affiche le registre de masque
\par    du contr\'f4leur d'interruptions un.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {         O, OB, OW
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par O, OB, OW, -- Sortie sur un port I/O
\par 
\par Syntaxe:
\par 
\par     O [taille] valeur du port
\par     taille -- B -- Octet
\par               W - - Mot
\par 
\par     port -- valeur de mot ou d'octet
\par     valeur -- Un octet pour un port d'octet
\par               ou un mot pour un port de mot
\par 
\par Commentaires:
\par Les commandes de sortie sur un port sont employ\'e9s \'e9crire une valeur vers
\par un port mat\'e9riel. La sortie peut \'eatre faite sur un port de mot ou d'octet.
\par Si aucune taille n'est pr\'e9cis\'e9e, le d\'e9faut est octet.
\par 
\par Exemple:
\par    O 21 FF
\par     Cette commande masque toutes les interruptions
\par     du contr\'f4leur d'interruptions un.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604290}5.3 Commandes du Contr\'f4le De transfert
{\*\bkmkend _Toc480604290}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commandes:
\par 
\par  X -- Sortie de la fen\'eatre Soft-ICE
\par  G -- Aller \'e0 une adresse
\par  T -- Trace une instruction
\par  P -- Pas de programme
\par  HERE -- Aller \'e0 la ligne du curseur
\par  GENINT -- Force une interruption
\par  EXIT -- Force la sortie du programme DOS courant
\par  BOOT -- Boot du syst\'e8me (retient Soft-ICE)
\par  HBOOT -- Boot dur du syst\'e8me (reset total)
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                           X
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par X -- Sortie de la fen\'eatre Soft-ICE
\par 
\par Syntaxe:
\par 
\par    X
\par 
\par Commentaires:
\par La commande X quitte la fen\'eatre Soft-ICE et rend le contr\'f4le au programme qui
\par avait \'e9t\'e9 interrompu pour activer Soft-ICE. La fen\'eatre Soft-ICE dispara\'eet.
\par Si un point d'arr\'eat a \'e9t\'e9 positionn\'e9, il reste actif.
\par 
\par Exemple:
\par     X
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                           G
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par G -- Aller \'e0 l'adresse
\par 
\par Syntaxe:
\par 
\par     G [=adresse-d\'e9part] [adresse-arr\'eat]
\par 
\par Commentaires:
\par La commande G quitte la fen\'eatre soft-ICE avec un point d'arr\'eat \'e0 ex\'e9cution
\par unique positionn\'e9. De plus, tous les points d'arr\'eats permanents du programme
\par restent valid\'e9s.
\par 
\par L'ex\'e9cution commence au CS:IP \'e0 moins que le param\'e8tre adresse-d\'e9part soit
\par pr\'e9cis\'e9. Dans ce cas, l'ex\'e9cution commence \'e0 adresse-d\'e9part. L'ex\'e9cution
\par continue jusqu'\'e0 ce que adresse-arr\'eat soit atteinte, que la s\'e9quence de touches
\par de sortie soit employ\'e9e ou qu'un point d'arr\'eat permanent survienne.
\par 
\par Adresse-arr\'eat doit \'eatre le premier octet d'une instruction.
\par 
\par Quand l'adresse-arr\'eat sp\'e9cifi\'e9e est atteinte, le CS:IP pointera sur
\par l'instruction o\'f9 le point d'arr\'eat \'e9tait positionn\'e9.
\par 
\par La commande G sans param\'e8tre se comporte comme la commande X.
\par 
\par Le point d'arr\'eat d'ex\'e9cution temporaire utilise un point d'arr\'eat registre
\par du 80386, \'e0 moins que tous les point d'arr\'eat registre aient \'e9t\'e9 affect\'e9s
\par aux points d'arr\'eat permanents. Dans ce cas, un point d'arr\'eat de style INT3
\par est utilis\'e9.  Quand ce cas survient, les commandes G et P ne fonctionneront
\par pas correctement dans la ROM. Un message d'erreur sera affich\'e9.
\par 
\par Exemple:
\par    G CS:1234
\par     Cette commande positionne un point d'arr\'eat \'e0 utilisation
\par     unique \'e0 CS:1234
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                             T
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par T -- Trace une instruction
\par 
\par Syntaxe:
\par 
\par     T [=start-adresse] [compte]
\par 
\par Commentaires:
\par 
\par Les commandes de type T passent une instruction apr\'e8s l'autre en utilisant
\par le  drapeau pas \'e0 pas.
\par 
\par L'ex\'e9cution commence au CS:IP \'e0 moins que le param\'e8tre start-adresse soit
\par pr\'e9cis\'e9.  Si start-adresse est pr\'e9cis\'e9, CS:IP est modifi\'e9 en start-adresse
\par avant la trace.
\par 
\par Si compte est pr\'e9cis\'e9 la commande TRACE sera ex\'e9cut\'e9e jusqu'\'e0 ce que le compte
\par soit \'e9puis\'e9 ou que la touche ESC soit press\'e9e en tenant compte bien s\'fbr
\par d'\'e9ventuels points d'arr\'eat permanents du programme.
\par 
\par En mode source, la commande T saute \'e0 la prochaine ligne de source. Si
\par la ligne actuelle est un appel de fonction ou de proc\'e9dure, et si le source
\par existe pour la routine appel\'e9e, T continue dans la routine. S'il n'y a pas de
\par source disponible pour la fonction ou la proc\'e9dure appel\'e9e, T saute par-dessus
\par la routine.
\par 
\par Exemple:
\par    T = 1284 3
\par     Cette commande ex\'e9cute une par une trois instructions
\par     commen\'e7ant \'e0 l'emplacement m\'e9moire 1284.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                            P
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par P -- Ex\'e9cution de Programme
\par 
\par Syntaxe:
\par 
\par    P
\par 
\par Commentaires:
\par La commande P est un saut logique dans un programme. Une instruction point\'e9e
\par par le CS:IP est ex\'e9cut\'e9e \'e0 moins que l'instruction ne soit un appel, une
\par interruption, une boucle, ou une instruction de r\'e9p\'e9tition. Dans ces cas, la
\par routine enti\'e8re ou l'it\'e9ration est enti\'e8rement ex\'e9cut\'e9e avant de rendre le
\par contr\'f4le \'e0 soft-ICE.
\par 
\par La commande P emploie un point d'arr\'eat unique d'ex\'e9cution.Le point d'arr\'eat
\par d'ex\'e9cution non permanent emploie un point d'arr\'eat registre du 80386, \'e0 moins
\par que tous les points d'arr\'eat registre aient \'e9t\'e9 affect\'e9s aux points d'arr\'eats
\par permanents. Dans ce cas, un point d'arr\'eat de style INT3 est r\'e9alis\'e9. Quand ce
\par cas survient, les commandes P et G ne fonctionneront pas correctement dans la
\par ROM. Un message d'erreur sera affich\'e9 si cel\'e0 est tent\'e9.
\par 
\par Dans le mode source, la commande P ex\'e9cute jusqu'\'e0 la prochaine ligne de source.
\par Si la ligne actuelle est un appel de fonction ou de proc\'e9dure, la commande P
\par saute par-dessus.
\par 
\par Exemple:
\par     P
\par     Cette commande ex\'e9cute un pas de programme.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                         HERE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par HERE -- Aller a la ligne du curseur
\par 
\par Syntaxe:
\par 
\par   HERE
\par 
\par Commentaires:
\par La commande HERE ex\'e9cute jusqu'\'e0 ce que le programme atteigne la ligne du
\par curseur. HERE est seulement disponible quand le curseur est dans la
\par fen\'eatre de code. Si la fen\'eatre de code n'est pas visible ou si le curseur
\par n'est pas dans la fen\'eatre de code, employez plut\'f4t la commande G.
\par 
\par La commande HERE sort de Soft-ICE avec un point d'arr\'eat d'ex\'e9cution positionn\'e9.
\par En plus, tous les points d'arr\'eat permanents sont arm\'e9s.
\par 
\par L'ex\'e9cution commence au CS:IP et continue jusqu'\'e0 ce que l'adresse du curseur
\par dans la fen\'eatre de code soit rencontr\'e9e, que la s\'e9quence de touche de sortie de
\par la fen\'eatre soit activ\'e9e, ou qu'un point d'arr\'eat permanent survienne.
\par 
\par Le point d'arr\'eat d'ex\'e9cution temporaire emploie un point d'arr\'eat registre du
\par 80386 , \'e0 moins que tous les point d'arr\'eat registre aient \'e9t\'e9 affect\'e9s aux
\par points d'arr\'eat permanents. Dans ce cas, un point d'arr\'eat de style INT3 est
\par r\'e9alis\'e9. Quand ce cas se produit, la commande HERE ne fonctionnera pas
\par correctement dans la ROM. Un message d'erreur sera affich\'e9 si cel\'e0 est tent\'e9.
\par 
\par Exemple:
\par  HERE
\par     Cet exemple positionne un point d'arr\'eat d'ex\'e9cution
\par     \'e0 la position courante du curseur, puis quitte Soft-ICE
\par     et commence l'ex\'e9cution au CS:IP.
\par Touche de fonction par d\'e9faut: F7
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {          GENINT
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par GENINT -- Force une interruption
\par 
\par Syntaxe:
\par 
\par    GENINT INT1 | INT3 | NMI | num-interruption
\par 
\par    num-interruption -- un nombre dans la gamme 00 - FF
\par 
\par Commentaires:
\par La commande GENINT force une interruption \'e0 survenir. Cette fonction peut \'eatre
\par employ\'e9e pour donner le contr\'f4le \'e0 un autre d\'e9bugger si vous utilisez Soft-ICE
\par avec un autre d\'e9bugger. Elle peut aussi \'eatre employ\'e9e pour tester des routines
\par d'interruption.
\par 
\par La commande GENINT simule la s\'e9quence de traitement d'une interruption
\par mat\'e9rielle ou d'une instruction INT. Elle pousse sur la pile: les drapeaux, le
\par registre CS et le registre IP, elle change alors la valeur de  CS et de IP
\par par les valeurs correspondantes dans la table des vecteurs d'interruption avec
\par le num\'e9ro d'interruption pr\'e9cis\'e9.
\par 
\par Exemple:
\par     GENINT NMI
\par     Cela force une interruption non-masquable.
\par     Cela donnera le contr\'f4le \'e0 CodeView si
\par     Soft-ICE est employ\'e9 comme un assistant \'e0
\par     CodeView.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {            EXIT
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par EXIT -- Force la sortie du programme DOS actuel
\par 
\par Syntaxe:
\par 
\par    EXIT [R] [D]
\par     R -- Restaurer la table des vecteurs d'interruption
\par     D -- Effacer tous les points d'arr\'eat
\par 
\par Commentaires:
\par La commande EXIT essaie de terminer le programme actuel en for\'e7ant une fonction
\par DOS de sortie (INT 21H, fonction 4CH). Cette commande ne fonctionnera que si
\par le DOS est dans un \'e9tat o\'f9 il est capable d'accepter l'appel de cette fonction
\par de sortie. Si cet appel est fait depuis certaines routines d'interruption, ou
\par quand le DOS n'est pas pr\'eat, le syst\'e8me peut se comporter de fa\'e7on impr\'e9visible.
\par 
\par Cette fonction NE remet aucun syst\'e8me \'e0 z\'e9ro sinon les tables d'interruption
\par quand l'option R est employ\'e9e. Cela signifie que variables BIOS, mode vid\'e9o et
\par autres donn\'e9es syst\'e8mes ne sont pas restaur\'e9s.
\par 
\par Utiliser l'option R restaurera les vecteurs d'interruption \'e0 leur derni\'e8re
\par valeur sauvegard\'e9e. Soft-ICE sauvegarde les vecteurs d'interruption quand il
\par est charg\'e9, quand un programme est charg\'e9 avec LDR.EXE, et quand la commande
\par VECS S est employ\'e9e.
\par 
\par Notes:
\par Pour red\'e9marrer un programme qui a \'e9t\'e9 charg\'e9 avec LDR.EXE proc\'e9der ainsi:
\par      EXIT R
\par      LDR prog.EXE
\par La commande EXIT restaurera la table d'interruptions aux valeurs qu'elle
\par contenait avant que le programme ne soit charg\'e9, puis quittera le programme.
\par 
\par Avec l'utilitaire LDR et en pr\'e9cisant le suffixe .EXE, le programme est charg\'e9
\par sans rechargement des symboles et du source. Les symboles et le source restent
\par en m\'e9moire.
\par 
\par Prudence:
\par La commande EXIT doit \'eatre employ\'e9e avec pr\'e9cautions. Malgr\'e8s que Soft-ICE
\par puisse \'eatre activ\'e9 \'e0 tout moment, une situation peut survenir o\'f9 le DOS n'est
\par pas en \'e9tat d'accepter un appel de fonction de sortie. Aussi, la commande
\par EXIT ne peut pas remettre \'e0 z\'e9ro tout programme. Par exemple, la commande
\par EXIT ne remet pas \'e0 z\'e9ro le mode vid\'e9o. Si votre programme a plac\'e9 le BIOS
\par vid\'e9o dans un mode particulier, il restera dans ce mode apr\'e8s la commande
\par EXIT.
\par 
\par Exemple:
\par   EXIT R
\par     Restaure la table d'interruption et sort du programme
\par     actuel. L'option R doit \'eatre employ\'e9e pour sortir d'un
\par     programme charg\'e9 avec LDR.EXE.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {          BOOT
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BOOT -- BOOTE le syst\'e8me (laisse Soft-ICE en m\'e9moire)
\par 
\par     La syntaxe:
\par 
\par     BOOT
\par 
\par Commentaires:
\par La commande BOOT remet le syst\'e8me \'e0 z\'e9ro et garde Soft-ICE en m\'e9moire.
\par BOOT est n\'e9cessaire pour d\'e9bugger des s\'e9quences de d\'e9marrage, des pilotes de
\par p\'e9riph\'e9riques, et des syst\'e8mes d'exploitation non-DOS.
\par 
\par BOOT est impl\'e9ment\'e9 gr\'e2ce \'e0 un appel \'e0 l'interruption 19H de la ROM BIOS.
\par Dans certaines circonstances, la m\'e9moire peut \'eatre corrompue au point que
\par l'interruption 19 ne fonctionne pas. Si cela survient, activez Soft-ICE et
\par utilisez la commade HBOOT.
\par 
\par Pour que BOOT puisse fonctionner correctement, Soft-ICE doit \'eatre install\'e9
\par comme un pilote dans CONFIG.SYS avant tout autre pilote. Ceci pour que
\par Soft-ICE puisse restaurer l'\'e9tat original du syst\'e8me aussi exactement que
\par possible.
\par 
\par Exemple:
\par   BOOT
\par    Cette commande fait le rebooter le syst\'e8me. Soft-ICE
\par    reste r\'e9sident.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {         HBOOT
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par HBOOT -- BOOT hard du syst\'e8me (reset total)
\par 
\par Syntaxe:
\par 
\par   HBOOT
\par 
\par Commentaires:
\par La commande HBOOT remet le syst\'e8me int\'e9gralement \'e0 z\'e9ro. Soft-ICE ne reste
\par pas en m\'e9moire. HBOOT est normalement suffisant \'e0 moins qu'une carte
\par d'extention ne requi\'e8re un reset '\'e9lectrique'. Dans ces cas rares,
\par l'alimentation de la machine doit \'eatre coup\'e9e.
\par 
\par Exemple:
\par   HBOOT
\par    Cette commande reboote totalement le syst\'e8me.
\par    Soft-ICE doit \'eatre recharg\'e9.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604291}5.4 Commandes du Mode Debug
{\*\bkmkend _Toc480604291}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commande:
\par    ACTION -- D\'e9finit l'action apr\'e8s qu'un point d'arr\'eat soit atteint
\par    WARN   -- Positionne le mode d'avertissement de
\par                r\'e9entrance DOS/ROM BIOS
\par    BREAK  -- Arr\'eat \'e0 tout moment
\par    I3HERE -- Dirige l'Interruption 3 vers Soft-ICE
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {         ACTION
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par ACTION -- D\'e9finit l'action apr\'e8s qu'un point d'arr\'eat soit atteint
\par 
\par Syntaxe:
\par 
\par    ACTION [INT1 | INT3 | NMI | HERE | num-int]
\par 
\par    num-int -- Tout num\'e9ro d'interruption valable (0-FFH).
\par                   N'employer cette option que si une routine
\par                   utilisateur a d\'e9tourn\'e9 le vecteur (voir la section 11.2).
\par 
\par Commentaires:
\par La commande ACTION d\'e9termine \'e0 qui est donn\'e9 le contr\'f4le quand les conditions
\par de point d'arr\'eat ont \'e9t\'e9 rencontr\'e9es. Dans la plupart des cas, l'action
\par d\'e9sir\'e9e est INT3 ou HERE, INT3 est typiquement employ\'e9 si Soft-ICE est
\par employ\'e9 avec un d\'e9bugger h\'f4te, HERE est employ\'e9 quand on souhaite revenir
\par \'e0 Soft-ICE quand les conditions de point d'arr\'eat ont \'e9t\'e9 rencontr\'e9es, INT1 et
\par NMI sont des alternatives pour certains d\'e9buggers qui ne travaillent pas avec
\par l'option INT3. Par exemple, CODEVIEW travaille mieux avec ACTION positionn\'e9
\par sur NMI.
\par 
\par 
\par N'employez num-int que s'il y a une routine de point d'arr\'eat utilisateur
\par install\'e9e. Utiliser num-int en l'asence d'une telle routine provoque une
\par erreur. Pour plus d'information, voir la section 11.2, 'Points d'arr\'eat
\par utilisateur'.
\par 
\par Si aucun param\'e8tre n'est fourni avec la commande ACTION, la valeur actuelle
\par d'action est affich\'e9e.
\par 
\par L'action par d\'e9faut est HERE.
\par 
\par Exemple:
\par   ACTION HERE
\par Cette commande pr\'e9cise que le contr\'f4le reviendra \'e0 Soft-ICE quand les
\par conditions de point d'arr\'eat auront \'e9t\'e9 rencontr\'e9es.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {               WARN
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par WARN -- Positionne l'avertissement de r\'e9entrance DOS/ROM BIOS
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par 
\par   WARN [ON | OFF]
\par 
\par }{\f2\fs20 Commentaires:
\par La commande WARN est fournie pour utiliser Soft-ICE avec des d\'e9buggers qui
\par emploient le DOS et la ROM BIOS. Beaucoup de d\'e9buggers utilisent le DOS et
\par la ROM BIOS pour les sorties \'e9cran et pour la saisie du clavier. Comme le DOS
\par et la ROM BIOS ne sont pas pleinement r\'e9entrants, ces d\'e9buggers ne peuvent pas
\par travailler correctement si un point d'arr\'eat survient tandis que le DOS ou la
\par ROM BIOS travaillent.
\par Si WARN est positionn\'e9 sur ON, et si ACTION n'est pas HERE, alors le contr\'f4le
\par sera donn\'e9 \'e0 Soft-ICE avant que l'action r\'e9elle ne survient. Le syst\'e8me affiche
\par le CS:IP et vous donne le choix entre continuer ou revenir \'e0 Soft-ICE.
\par G\'e9n\'e9ralement, vous devriez choisir de revenir \'e0 Soft-ICE pour continuer votre
\par d\'e9bugging. Ne continuez avec le d\'e9bugger h\'f4te que si vous savez que votre
\par d\'e9bugger ne forcera pas DOS ou la ROM BIOS \'e0 r\'e9entrer.
\par 
\par Le mode WARN devrait \'eatre sur ON pour employer Soft-ICE avec DEBUG, SYMDEB,
\par et CODEVIEW. Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'\'e9tat actuel de WARN est
\par affich\'e9. Le mode par d\'e9faut de WARN est OFF.
\par 
\par Exemple:
\par   WARN ON
\par    Cette commande met sur ON l'avertissement de r\'e9entrance DOS/ROM BIOS.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                         BREAK
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BREAK -- Arr\'eate \'e0 nimporte quel moment
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par 
\par BREAK [ON | OFF]
\par 
\par }{\f2\fs20 Commentaires:
\par La commande BREAK permet d'activer la fen\'eatre Soft-ICE quand le syst\'e8me est
\par plant\'e9 avec les interruptions d\'e9sactiv\'e9es. Le mode BREAK peut \'eatre employ\'e9e
\par pour la s\'e9ance de d\'e9bugging enti\'e8re, ou il peut \'eatre mis ON et OFF quand cela
\par est requis.
\par 
\par Le mode BREAK d\'e9grade l\'e9g\'e8rement les performances de votre syst\'e8me. Cette
\par d\'e9gradation de performances doit \'eatre mise en bascule avec la n\'e9cessit\'e9 de
\par sortir d'un programme plant\'e9. Un utilisateur peut vouloir avoir le mode BREAK
\par ON tout le temps, bien que les performances soint d\'e9grad\'e9es, parce que le
\par programme pourrait le suspendre \'e0 tout moment.
\par 
\par A la diff\'e9rence d'autres d\'e9buggers qui peuvent aussi \'eatre activ\'e9s \'e0 tout
\par moment, Soft-ICE ne requiert pas de commutateur externe. Quand BREAK est on,
\par la fen\'eatre Soft-ICE peut \'eatre activ\'e9e \'e0 tout moment en pressant la s\'e9quence
\par actuelle de touches.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'\'e9tat actuel de BREAK est affich\'e9. Le mode
\par de BREAK par d\'e9faut est OFF.
\par 
\par Exemple:
\par   BREAK ON
\par     Cette commande met le mode BREAK ON.
\par     Cela signifie que la fen\'eatre Soft-ICE
\par     peut \'eatre activ\'e9e a tout moment, m\'eame
\par     si les interruptions sont d\'e9sactiv\'e9es.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {            13HERE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par 13HERE -- Dirige l'nterruption 3 sur Soft-ICE
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par 
\par   13HERE [ON | OFF]
\par 
\par }{\f2\fs20 Commentaires:
\par La commande 13HERE vous permet de pr\'e9ciser qu'aucune Interruption3 n'activera
\par la fen\'eatre Soft-ICE. Cette caract\'e9ristique est utile pour arr\'eater votre
\par programme dans un emplacement m\'e9moire sp\'e9cifique.
\par 
\par Pour employer cette caract\'e9ristique, placez un INT3 dans votre code \'e0 l'endroit
\par o\'f9 vous voulez l'arr\'eater. Quand l'INT3 survient, elle  activera la fen\'eatre
\par Soft-ICE. A ce point, vous pouvez utiliser la commande R IP pour changer votre
\par pointeur d'instruction \'e0 l'instruction suivant l'INT3, alors vous pouvez
\par continuer \'e0 d\'e9bugger.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'\'e9tat actuel de 13HERE est affich\'e9.
\par 
\par Le mode par d\'e9faut de 13HERE OFF.
\par 
\par Exemple:
\par   13HERE ON
\par     Cette commande met le mode 13HERE sur ON.
\par     Toute INT3 g\'e9n\'e9r\'e9e apr\'e8s ce point
\par     activera la fen\'eatre Soft-ICE.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604292}5.5 Commandes Utilitaires
{\*\bkmkend _Toc480604292}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commandes:
\par     A     -- Assembler le code
\par     S     -- Rechercher des donn\'e9es
\par     F     -- Remplir la m\'e9moire avec des donn\'e9es
\par     M     -- D\'e9placer des donn\'e9es
\par     C     -- Comparer deux blocs de donn\'e9es
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                           A
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\b0 A -- Assembler le code
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Syntaxe:
\par 
\par     A [adresse]
\par 
\par Commentaires:
\par L'assembleur de Soft-ICE vous permet d'assembler des instructions directement
\par en m\'e9moire.  L'assembleur supporte les instructions fondamentales du jeu 8086
\par avec les extensions d'adressage en mode r\'e9el des 80186 et 80286. Les
\par instructions des coprocesseurs arithm\'e9tiques et les instructions 80386,
\par registres et modes d'adressage sp\'e9cifiques NE peuvent pas \'eatre assembl\'e9es.
\par 
\par La commande A entre dans l'assembleur interactif de Soft-ICE. Une adresse est
\par affich\'e9e comme prompt pour chaque ligne assembl\'e9e. Apr\'e8s qu'une instruction
\par d'assembleur soit entr\'e9e et que ENTREE soit press\'e9e, les instructions
\par sont assembl\'e9es en m\'e9moire \'e0 l'adresse pr\'e9cis\'e9e. Les instructions doivent
\par \'eatre entr\'e9es au format Intel standard. Pressez ENTREE \'e0 un prompt pour sortir
\par de l'assembleur.
\par 
\par Si la zone d'adresses dans laquelle vous assemblez des instructions est visible
\par dans la fen\'eatre de code, les instructions changeront de fa\'e7on interactive au
\par fur et \'e0 mesure de l'assemblage.
\par 
\par 
\par L'assembleur de Soft-ICE supporte les mn\'e9moniques standards de la famille
\par 8086, cependant il y a certains ajouts:
\par    * La mn\'e9monique DB est utilis\'e9e pour d\'e9finir des
\par        octets de donn\'e9es directement en m\'e9moire. La
\par        commande DB est suivie par une liste d'octets
\par        et/ou des cha\'eenes s\'e9par\'e9es par des espaces ou
\par        des virgules et encadr\'e9es de guillemets.
\par    * La mn\'e9monique RETF repr\'e9sente un retour lointain.
\par    * WORD PTR et BYTE PTR sont employ\'e9s pour pr\'e9ciser
\par         la taille des donn\'e9es \'e0 \'e9valuer s'il n'y a
\par         aucun registre dans l'argument, par exemple:
\par         }{\f2\fs20\lang1031\langfe1036\langnp1031 MOV BYTE PTR ES:[ 1234],1.
\par 
\par    }{\f2\fs20 * Utiliser FAR et NEAR pour assembler explicitement
\par         les saut et les appels proches et lointain.
\par         Si FAR ou NEAR ne sont pas pr\'e9cis\'e9s, alors
\par         tous les sauts et appels sont assembl\'e9s en
\par         proches.
\par 
\par    * Les Op\'e9randes se r\'e9f\'e9rant aux emplacements de
\par         m\'e9moire doivent \'eatre plac\'e9s entre des crochets,
\par         par exemple: MOV AX,[1234].
\par 
\par 
\par Exemple:
\par    A CS:1234
\par     Cette commande attend l'entr\'e9e d'une instruction
\par     assembleur puis l'assemble en commen\'e7ant \'e0 l'offset
\par     1234H dans le segment de code actuel. Pressez ENTREE
\par     au prompt apr\'e8s avoir entr\'e9 la derni\'e8re instruction.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                            S
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par S -- Recherche de donn\'e9es
\par 
\par Syntaxe:
\par 
\par    S adresse L longueur liste-donn\'e9es
\par    liste-donn\'e9es -- liste d'octets ou cha\'eenes s\'e9par\'e9es par
\par                        des virgules ou des espaces et encadr\'e9es
\par                        par des guillemets. Une cha\'eene peut
\par                        commencer avec une apostrophe seule ou
\par                        un guillemet.
\par 
\par    longueur - - longueur en octets
\par 
\par Commentaires:
\par 
\par La commande S recherche dans la m\'e9moire une s\'e9rie d'octets ou de caract\'e8res
\par correspondant \'e0 liste-donn\'e9es. La recherche commence \'e0 l'adresse pr\'e9cis\'e9e
\par et continue sur la longueur pr\'e9cis\'e9e. L'adresse de chaque occurence trouv\'e9e
\par dans la zone est affich\'e9e.
\par 
\par Exemple:
\par    S DS:SI+10 L CX 'Hello',12,34
\par     Cette commande recherche la cha\'eene 'Hello' suivie
\par     par les octets 12H et 34H en commen\'e7ant a l'offset
\par     SI+10 dans le segment de donn\'e9es actuel et en
\par     terminant CX octets plus loin.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                           F
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par F -- Remplir la m\'e9moire avec des donn\'e9es
\par 
\par Syntaxe:
\par 
\par    F adresse L longueur liste-donn\'e9es
\par    liste-donn\'e9es -- liste d'octets ou cha\'eenes s\'e9par\'e9es par
\par                       des virgules ou des espaces et encadr\'e9es
\par                       par des guillemets. Une cha\'eene peut
\par                       commencer avec une apostrophe seule ou
\par                       un guillemet.
\par 
\par    longueur -- longueur en octets
\par 
\par Commentairse:
\par La commande F  remplit la m\'e9moire avec la s\'e9rie d'octets ou les caract\'e8res
\par pr\'e9cis\'e9s dans liste-donn\'e9es. La m\'e9moire est remplie en commen\'e7ant \'e0 l'adresse
\par pr\'e9cis\'e9e et pour la longueur pr\'e9cis\'e9e, en r\'e9p\'e9tant liste-donn\'e9es si n\'e9cessaire.
\par 
\par Exemple:
\par     F 8000:0 L 100 'Test'
\par     Cette commande remplit la m\'e9moire commen\'e7ant \'e0 8000:0 par
\par     une longueur de 100H octets avec la cha\'eene 'Test'. La
\par     cha\'eene 'Test' est r\'e9p\'e9t\'e9e jusqu'\'e0 ce que la longueur \'e0 remplir
\par     soit \'e9puis\'e9e.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                         M
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par M -- D\'e9placement de donn\'e9es
\par 
\par Syntaxe:
\par 
\par    M adresse-d\'e9but L longueur adresse-fin
\par    longueur -- longueur en octets
\par 
\par Commentaires:
\par La commande M d\'e9place le nombre pr\'e9cis\'e9 d'octets de adresse-d\'e9but dans la
\par m\'e9moire vers adresse-fin dans la m\'e9moire.
\par 
\par Exemple:
\par    M 1000:0 L 200 2000:0
\par    Cet ordre d\'e9place 200H octets de l'emplacement
\par    m\'e9moire 1000:0 \'e0 l'emplacement m\'e9moire 2000:0.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                          C
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par C -- Comparer deux blocs de donn\'e9es
\par 
\par Syntaxe:
\par 
\par     C address1 L longueur address2
\par     longueur -- longueur en octets
\par 
\par Commentaires:
\par La commande C compare le bloc m\'e9moire sp\'e9cifi\'e9 par address1 et longueur
\par avec le bloc m\'e9moire sp\'e9cifi\'e9 par address2 et longueur. Quand un octet du
\par premi\'e8r bloc de donn\'e9es est diff\'e9rend de son homologue dans le deuxi\'e8me
\par bloc, les deux octets sont affich\'e9s avec leurs adresses.
\par 
\par Exemple:
\par    C 5000:100 L 10 6000:100
\par 
\par Cette commande compare les 10H octets commen\'e7ant \'e0 l'emplacement m\'e9moire
\par 5000:100 avec les 10H octets commen\'e7ant \'e0 l'emplacement m\'e9moire 6000:100.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604293}5.6 Commandes Sp\'e9cialis\'e9es de D\'e9
bugging{\*\bkmkend _Toc480604293}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commandes:
\par  SHOW   -- instructions d'affichage du buffer d'historique
\par  TRACE  -- Entre en mode simulation de trace
\par  XT     -- Pas seul en mode simulation de trace
\par  XP     -- Pas de programme en mode simulation de trace
\par  XG     -- Va \'e0 l'adresse en mode simulation de trace
\par  XRSET  -- Reset du buffer de trace arri\'e8re
\par  VECS   -- Sauve/restaure/compare des vecteurs d'interruption
\par  SNAP   -- Fait une copie d'un bloc m\'e9moire
\par  EMMMAP -- Affichage de la carte d'affectation EMM
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {         SHOW
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par SHOW -- Affiche les instructions du buffer d'historique
\par 
\par Syntaxe:
\par 
\par    SHOW [B | d\'e9but]
\par     B -- Cela indique \'e0 la commande SHOW de
\par               commencer l'affichage avec
\par               l'instruction la plus ancienne
\par               dans le buffer de trace arri\'e8re.
\par     d\'e9but -- Le nombre d'instructions en arri\'e8re
\par               depuis la fin du buffer (la derni\'e8re
\par               instruction captur\'e9e) pour commencer
\par               l'affichage.
\par 
\par Commentaires:
\par La commande SHOW affiche les instructions du buffer historique de trace
\par arri\'e8re. Si le source est disponible pour les instructions alors l'affichage
\par est en mode mixte, autrement le code seul est affich\'e9.
\par 
\par SHOW permet le d\'e9filement dans le buffer avec les touches haut, bas, Pageup
\par et PageDn. Pour sortir de SHOW vous devez presser la touche ESC.
\par 
\par Devant l'adresse de chaque instruction il y a le num\'e9ro d'entr\'e9e dans le
\par buffer. Ce nombre montre la profondeur dans le buffer que vous affichez.
\par Plus le nombre est grand, plus vous \'eates profond dans le buffer.
\par 
\par Notes:
\par Avant d'utiliser la commande SHOW, les instructions doivent avoir \'e9t\'e9
\par enregistr\'e9es avec un domaine de trace arri\'e8re. Voir le chapitre 9 pour
\par plus d'information sur les domaines  de race arri\'e8re.
\par 
\par Astuces:
\par Il est souvent utile d'avoir la fen\'eatre de code visible avec le code actuel
\par de la zone que vous affichez depuis le buffer de trace arri\'e8re. Quand vous
\par comparez le flux actuel d'instructions au code, les sauts et appels affich\'e9s
\par sont souvent moins d\'e9routants.
\par 
\par En utilisant SHOW en conjonction avec la commande TRACE vous pourrez voir les
\par instructions dans le buffer d'historique de trace de deux points de vue
\par diff\'e9rents.
\par 
\par Exemple:
\par   SHOW 40
\par    Cet exemple affiche en commen\'e7ant avec la
\par    40\'e8me instruction en arri\'e8re dans le buffer
\par    de trace arri\'e8re.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {          TRACE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par TRACE -- Entre en mode simulation de trace
\par 
\par Syntaxe:
\par 
\par    TRACE [d\'e9but] | [OFF]
\par    d\'e9but -- Le nombre d'instructions a remonter
\par                depuis la fin du buffer (derni\'e8re
\par                instruction captur\'e9e) pour commencer
\par                une simulation de trace.
\par    OFF -- Sortir du mode simulation de trace.
\par 
\par Commentaires:
\par La commande TRACE vous permet de 'rejouer' des instructions du buffer de trace
\par arri\'e8re tout comme si elles \'e9taient ex\'e9cut\'e9es pour la premi\'e8re fois. Pour
\par utiliser le mode simulation de trace vous devez avoir la fen\'eatre de code
\par visible. Apr\'e8s \'eatre entr\'e9 dans le mode simulation de trace vous employez les
\par commandes XT, XP et XG pour tracer les instructions dans le buffer.
\par 
\par Pour sortir du mode simulation de trace entrez TRACE OFF.
\par 
\par TRACE sans param\'e8tre affiche si le mode simulation de trace est ON ou OFF.
\par 
\par Note:
\par Avant d'utiliser la commande TRACE, les instructions doivent avoir \'e9t\'e9 not\'e9es
\par avec un dommaine arri\'e8re de trace. Voir le chapitre 9 pour plus d'information
\par sur les domaines arri\'e8res de trace.
\par 
\par Astuce:
\par Le mode simulation de trace est plus utile quand la fen\'eatre de code est
\par visible. Il est souvent utile d'employer TRACE en conjonction avec la commande
\par SHOW. Cela permet de voir les instructions du buffer historique de trace de
\par deux fa\'e7ons diff\'e9rentes.
\par 
\par Exemple:
\par    TRACE 40
\par    Cet exemple entre en mode simulation de trace
\par    en commen\'e7ant 40 instructions avant la derni\'e8re
\par    instruction not\'e9e. Il restera en mode  simulation
\par    de trace jusqu'\'e0 ce que TRACE OFF soit entr\'e9.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {               XT
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par XT -- Saut d'une instruction en mode simulation de trace
\par 
\par Syntaxe:
\par 
\par    XT [R]
\par    R -- Saut d'une instruction en sens inverse
\par 
\par Commentaires:
\par La commande XT ex\'e9cute pas \'e0 pas dans le buffer de trace arri\'e8re. Cette
\par commande se comporte comme la commande T pour le d\'e9bugging normal.
\par Notez que les registres NE changent pas quand vous avancez en mode simulation
\par de trace sauf CS et IP.
\par 
\par L'instruction XT vous permet de 'rejouer' des instructions du buffer de trace
\par arri\'e8re.
\par 
\par Note:
\par Avant d'utiliser XT vous devez \'eatre dans en mode simulation de trace. Voir le
\par chapitre 9 et la commande TRACE dans cette section pour plus d'information sur
\par les domaines de trace arri\'e8re.
\par 
\par Astuce:
\par Si vous utilisez XT fr\'e9quemment, comme toute autre commande Soft-ICE, elle peut
\par \'eatre affect\'e9e \'e0 une touche de fonction.
\par 
\par Exemple:
\par     XT
\par     Cette commande ex\'e9cute une seule instruction en mode simulation de trace.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                          XP
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par XP -- saut dans le programme en mode simulation de trace
\par 
\par La syntaxe:
\par 
\par    XP
\par 
\par Commentaires:
\par La commande XP fait un pas logique dans le programme dans le buffer de trace
\par arri\'e8re. Cette commande agit comme la commande P pour le d\'e9bugging normal.
\par Notez que les registres NE changent pas en ex\'e9cutant les instructions sauf CS
\par et IP.
\par 
\par L'instruction XP vous permet de 'rejouer' des instructions du buffer de trace
\par arri\'e8re.
\par 
\par Note:
\par Avant d'utiliser XP vous devez \'eatre en mode simulation de trace. Voir le
\par chapitre 9 et la commande TRACE dans cette section pour plus d'information sur
\par les domaines de trace arri\'e8re.
\par 
\par Astuce:
\par Si vous utilisez XP fr\'e9quemment, comme toute autre commande Soft-ICE elle peut
\par \'eatre affect\'e9e \'e0 une touche de fonction.
\par 
\par Exemple:
\par    XP
\par    Cette commande ex\'e9cute un pas de programme en mode simulation de trace.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                    XG
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par XG -- Va \'e0 une adresse en mode simulation de trace
\par 
\par Syntaxe:
\par 
\par     XG [R] adresse
\par     R -- Recherche l'adresse en direction inverse
\par 
\par     adresse -- Adresse \'e0 atteindre \'e0 dans le buffer de trace arri\'e8re.
\par 
\par Commentaires:
\par La commande XG d\'e9place le pointeur d'instruction \'e0 l'occurence suivante
\par de l'adresse pr\'e9cis\'e9e dans le buffer de trace arri\'e8re. Si R est pr\'e9cis\'e9
\par avant l'adresse, alors le pointeur d'instruction est d\'e9plac\'e9 \'e0 l'occurence
\par pr\'e9c\'e9dant l'adresse pr\'e9cis\'e9e dans le buffer de trace arri\'e8re.
\par 
\par L'adresse doit \'eatre le premier octet d'une instruction.
\par 
\par XG est analogue \'e0 la commande G dans un d\'e9bugging normal.
\par 
\par Note:
\par Avant d'utiliser XG vous devez \'eatre en mode simulation de trace. Voir le
\par chapitre 9 et la commande TRACE dans cette section pour plus d'information
\par sur les domaines de trace arri\'e8re.
\par 
\par Exemple:
\par     XG 273:1030
\par     Cette commande d\'e9place le pointeur d'instruction
\par     \'e0 la prochaine instance de l'instruction \'e0
\par     l'adresse 273:1030.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {          XRSET
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par XRSET -- Remet \'e0 z\'e9ro le buffer de trace arri\'e8re
\par 
\par Syntaxe:
\par 
\par    XRSET
\par 
\par Commentaires:
\par La commande XRSET remet a z\'e9ro le buffer de trace arri\'e8re. Cette commande
\par doit \'eatre ex\'e9cut\'e9e avant de fixer un domaine de trace arri\'e8re s'il y a des
\par l'informations superflues dans le buffer.
\par 
\par Exemple:
\par   XRSET
\par   Cette commande remet le buffer de trace arri\'e8re \'e0 z\'e9ro.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {           VECS
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par VECS -- Sauve/Restaure/Compare des vecteurs d'interruption
\par 
\par Syntaxe:
\par 
\par    VECS [C|S|R]
\par         C -- Comparer la table actuelle avec la table sauvegard\'e9e
\par         S -- Sauve la table d'interruption courante dans le buffer
\par         R -- Restaure la table d'interruption depuis le buffer
\par 
\par Commentaires:
\par La commande VECS vous permet de sauver et de restaurer la table
\par d'interruptions dans un buffer interne de Soft-ICE. La table r\'e9elle
\par peut aussi \'eatre compar\'e9e avec la table sauv\'e9e et les diff\'e9rences affich\'e9es.
\par 
\par Quand l'option C est employ\'e9e pour comparer la table des vecteurs
\par d'interruption courante avec la copie emmagasin\'e9e, la sortie est au format
\par suivant:
\par    
\par    adresse vieux-vecteur nouveau-vecteur
\par 
\par Tout vecteur ayant chang\'e9 est affich\'e9.
\par 
\par La table des vecteurs d'interruption est tout d'abord sauv\'e9e quand Soft-ICE
\par est charg\'e9.  Elle est aussi sauv\'e9e automatiquement quand un programme est
\par charg\'e9 avec LDR.EXE. Une seule copie de la table des vecteurs d'interruption
\par est sauv\'e9e, donc chaque fois que VECS S est appel\'e9, la copie pr\'e9c\'e9dente de
\par la table d'interruption est effac\'e9e.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'int\'e9gralit\'e9 de la table des vecteurs
\par d'interruption est affich\'e9e.
\par 
\par Exemple:
\par    VECS C
\par    Cette commande compare la table des vecteurs
\par    d'interruption actuelle avec une table qui
\par    avait \'e9t\'e9 sauvegard\'e9e auparavant dans le
\par    buffer interne de VECS de Soft-ICE.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                    SNAP
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par SNAP -- Fait une copie d'un bloc de m\'e9moire
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par 
\par     SNAP [C | S | R] address1 address2
\par         }{\f2\fs20 C -- Comparer le buffer avec un domaine d'adresses
\par         S -- Sauver un domaine d'adresses dans le buffer
\par         R -- Restaurer le buffer vers un domaine d'adresses
\par 
\par Commente:
\par La commande SNAP fait une copie d'un bloc m\'e9moire pour une comparaison
\par ult\'e9rieure. L'option S copie un bloc de m\'e9moire vers un buffer dans la
\par m\'e9moire \'e9tendue. L'option C affiche les diff\'e9rences entre le buffer dans
\par la m\'e9moire \'e9tendue et la m\'e9moire r\'e9elle sp\'e9cifi\'e9e par le domaine d'adresses.
\par L'option R copie le buffer en m\'e9moire \'e9tendue dans le domaine d'adresses
\par en m\'e9moire conventionnelle.
\par 
\par Quand l'option C est employ\'e9e pour comparer le buffer avec le domaine
\par d'adresses la sortie est dans le format suivant:
\par 
\par    adresse vieilles-donn\'e9es nouvelles-donn\'e9es
\par 
\par Chaque octet ayant chang\'e9 est affich\'e9.
\par 
\par L'adresse n'est normalement pas n\'e9cessaire pour les options C et R. Si
\par l'adresse n'est pas pr\'e9cis\'e9e, l'adresse du dernier SNAP qui a \'e9t\'e9 entr\'e9
\par avec une adresse pr\'e9cis\'e9e sera employ\'e9e.
\par 
\par 
\par Note:
\par Pour employer la commande SNAP, vous devez avoir pr\'e9cis\'e9 le commutateur
\par /TRA XXXX  sur la ligne S-ICE.EXE dans CONFIG.SYS.
\par 
\par L'ordre SNAP sauve les donn\'e9es dans le buffer de trace arri\'e8re. Si vous
\par utilisez la trace arri\'e8re alors vous aurez un conflit avec SNAP.
\par Sp\'e9cifiquement, SNAP efface les informations de trace arri\'e8re si vous faites
\par un SNAP S quand il y a des instructions dans le buffer de trace arri\'e8re.
\par Inversement, si vous avez sauv\'e9 une zone avec SNAP, l'activation d'un domaine
\par de trace arri\'e8re efface le buffer de SNAP.
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Exemple:
\par    SNAP S 2000:0 4000:0
\par    }{\f2\fs20 Cette commande sauve le bloc de donn\'e9es
\par    de 2000:0 \'e0 4000:0 dans le buffer de
\par    trace arri\'e8re de Soft-ICE.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {        EMMMAP
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par EMMMAP -- Affichage de la carte d'affectation EMM
\par 
\par Syntaxe:
\par 
\par   EMMMAP
\par 
\par Commentaires:
\par 
\par La commande EMMMAP affiche chaque page physique disponible pour la m\'e9moire
\par EMM et les pages qui sont actuellement mapp\'e9es.
\par 
\par Note:
\par La caract\'e9ristique EMM de Soft-ICE doit \'eatre activ\'e9e pour employer cette
\par fonction. Voir le chapitre 8 pour plus d'information sur l'activation de
\par l'aptitude EMM.
\par 
\par Exemple:
\par   EMMMAP
\par    Cet exemple affiche l'allocation EMM courante dans la forme suivante.
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 Phy page Seg adress Handle/Page
\par    00         D000      FFFF
\par    01         D400      0001/0000
\par    }{\f2\fs20 02         D800      0001/0001
\par    03         DC00      0001/0002
\par    Dans cet exemple, la page physique 0 est situ\'e9e \'e0 D000 et est n'est pas
\par    mapp\'e9e. La page physique 1 est situ\'e9e \'e0 D400 et a le handle 1, page 0
\par    mapp\'e9 sur elle. La page physique 2 est situ\'e9e \'e0 D800 et a le handle 1,
\par    page 1 mapp\'e9 sur elle. La page physique 3 est situ\'e9e \'e0 DC00 et a le handle
\par    2, page 1 mapp\'e9 sur elle.
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604294}5.7 Commandes de fen\'eatrage
{\*\bkmkend _Toc480604294}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par    Commandes:
\par       WR -- Bascule la fen\'eatre registre
\par       WC -- Bascule/r\'e8gle la taille de la fen\'eatre code
\par       WD -- Bascule/r\'e8gle la taille de la fen\'eatre donn\'e9es
\par       EC -- Entre/sors de la fen\'eatre code
\par       .  -- Trouve l'instruction courante
\par 
\par       Trois types de fen\'eatres peuvent \'eatre cr\'e9\'e9s avec Soft-ICE:
\par       registre, donn\'e9es, et code. Chacune de ces fen\'eatres peut
\par       \'eatre ouverte ou ferm\'e9e \'e0 tout moment. Les fen\'eatres code
\par       et donn\'e9es peuvent \'eatre de taille variable; la fen\'eatre
\par       registre est de taille fixe. Les fen\'eatres restent toujours
\par       dans un ordre fix\'e9. En partant du sommet de l'\'e9cran, l'ordre
\par       est: fen\'eatre registre, fen\'eatre donn\'e9es, puis fen\'eatre code.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                    WR
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par WR -- Bascule la fen\'eatre registre
\par 
\par Syntaxe:
\par 
\par  WR
\par 
\par Commentaires:
\par La commande rend la fen\'eatre registre visible si elle est actuellement
\par invisible. Si la fen\'eatre registre est actuellement visible, WR l'efface.
\par 
\par La fen\'eatre registre affiche le jeu de registres du 8086 et les drapeaux du
\par processeur.
\par 
\par Touche de fonction par d\'e9faut: F2
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                    WC
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par WC -- Bascule/r\'e8gle la taille de la fen\'eatre code
\par 
\par Syntaxe:
\par 
\par    WC [taille-fen\'eatre]
\par    taille-fen\'eatre -- un nombre d\'e9cimal entre 1 et 21.
\par 
\par Commentaires:
\par Si taille-fen\'eatre n'est pas pr\'e9cis\'e9e, cette commande bascule la fen\'eatre code.
\par Si elle n'\'e9tait pas visible elle est rendue visible, et si elle \'e9tait visible
\par elle est effac\'e9e.
\par 
\par Si taille-fen\'eatre est pr\'e9cis\'e9e la taille de la fen\'eatre code est modifi\'e9e, ou
\par si elle n'\'e9tait pas visible elle est rendue visible avec la taille pr\'e9cis\'e9e.
\par 
\par Note:
\par Si vous d\'e9sirez d\'e9placer le curseur dans la fen\'eatre code employez la
\par commande EC. Voir la description de la commande EC pour plus de d\'e9tails.
\par 
\par Exemple:
\par    WC 12
\par    Si aucune fen\'eatre code n'est pr\'e9sente,
\par    alors une fen\'eatre code de 12 lignes de
\par    hauteur est cr\'e9\'e9e. Si la fen\'eatre code
\par    est actuellement \'e0 l'\'e9cran, sa taille est
\par    ajust\'e9e \'e0 12 lignes.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                    WD
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par WD -- Bascule/r\'e8gle la taille de la fen\'eatre donn\'e9es
\par 
\par Syntaxe:
\par 
\par    WD [taille-fen\'eatre]
\par    taille-fen\'eatre -- un nombre d\'e9cimal entre 1 et 21.
\par 
\par Commentaires:
\par Si taille-fen\'eatre n'est pas pr\'e9cis\'e9e, cette commande bascule la fen\'eatre donn\'e9es.
\par Si elle n'\'e9tait pas visible elle est rendue visible, si elle \'e9tait visible elle
\par est effac\'e9e.
\par 
\par Si taille-fen\'eatre est pr\'e9cis\'e9e la taille de la fen\'eatre donn\'e9es est modifi\'e9e,
\par ou si elle n'\'e9tait pas visible elle est rendue visible avec la taille pr\'e9cis\'e9e.
\par 
\par Exemple:
\par    WD 1
\par       Si aucune fen\'eatre donn\'e9es  n'est pr\'e9sente,
\par       alors une fen\'eatre donn\'e9es de 12 lignes de
\par       hauteur est cr\'e9\'e9e. Si la fen\'eatre donn\'e9es
\par       est actuellement \'e0 l'\'e9cran, sa taille est
\par       ajust\'e9e \'e0 1 ligne.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                   EC
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par EC -- Entre/sors de la fen\'eatre code
\par 
\par Syntaxe:
\par 
\par     EC
\par 
\par Commentaires:
\par La commande EC bascule le curseur entre la fen\'eatre code et la fen\'eatre
\par de commandes. Si le curseur \'e9tait dans la fen\'eatre de commandes il est d\'e9plac\'e9
\par dans la fen\'eatre code, et si le curseur \'e9tait dans la fen\'eatre code il est
\par d\'e9plac\'e9 dans la fen\'eatre de commandes.
\par 
\par Quand le curseur est dans la fen\'eatre code plusieurs options deviennent
\par disponibles et cela rend le d\'e9bugging beaucoup plus facile.
\par Les options sont:
\par     * Le 'pointer-et-activer' les point d'arr\'eat
\par         Le 'pointer-et-activer' les points d'arr\'eat est r\'e9alis\'e9 avec la commande
\par         BP. Si aucun param\'e8tre n'est pr\'e9cis\'e9 avec la commande BPX un point
\par         d'arr\'eat d'ex\'e9cution est positionn\'e9 \'e0 la position du curseur dans la
\par         fen\'eatre code. Le curseur doit \'eatre sur une ligne qui contient du code
\par         (placer la fen\'eatre de code en mode mixte si vous n'\'eates pas s\'fbr).
\par         L'affectation par d\'e9faut pour BPX est F9.
\par 
\par     * Aller \'e0 la ligne du curseur
\par         Vous pouvez \'e9tablir un point d'arr\'eat temporaire au curseur et y aller
\par         avec la commande HERE. Le curseur doit \'eatre sur une ligne qui contient
\par         du code (placer la fen\'eatre  code en mode mixte si vous n'\'eates pas s\'fbr).
\par         L'affectation par d\'e9faut pour HERE est F7.
\par 
\par     * D\'e9filement de la fen\'eatre code
\par        La fen\'eatre code ne peut \'eatre scroll\'e9e que si le cursor est \'e0
\par        l'int\'e9rieur. Les touches de d\'e9filement (fl\'e8che haut, fl\'e8che bas,
\par        PageUp et  PageDown) sont red\'e9finies quand le curseur est dans la
\par        fen\'eatre code. Quand le curseur est dans la fen\'eatre code les touches
\par        de d\'e9filement se comportent ainsi:
\par          haut   -- la fen\'eatre code scrolle vers le haut d'une ligne
\par          bas    -- la fen\'eatre code scrolle vers le bas d'une ligne
\par          pageup -- la fen\'eatre code scrolle vers le haut d'une fen\'eatre
\par          pageDn -- la fen\'eatre code scrolle vers le bas d'une fen\'eatre
\par 
\par Note:
\par La fen\'eatre code doit \'eatre visible pour la commande EC fonctionne. La touche
\par de fonction par d\'e9faut: F6
\par 
\par 
\par                            .
\par 
\par . -- Trouver l'instruction courante
\par 
\par Syntaxe:
\par  .
\par 
\par Commentaires:
\par Quand la fen\'eatre code est visible, la commande . affiche la ligne actuelle
\par du source ou l'instruction actuelle.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604295}5.8 Commandes de personnalisation du D\'e9
bugger{\*\bkmkend _Toc480604295}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commandes:
\par    PAUSE  -- Pause apr\'e8s chaque \'e9cran
\par    ALTKEY -- Modifie la s\'e9quence de touches servant \'e0
\par                   activer Soft-ICE
\par    FKEY   -- Affiche et \'e9dite les touches de fonction
\par    BASE   -- Positionne/affiche la base courante de num\'e9ration
\par    CTRL-P -- Bascule la session vers l'imprimante
\par Print-Screen -- Imprime le contenu de l'\'e9cran
\par    PRN    -- Positionne le port d'imprimante
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                   PAUSE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par PAUSE -- Pause apr\'e8s chaque \'e9cran
\par 
\par Syntaxe:
\par 
\par PAUSE [ON | OFF]
\par 
\par Commentaires:
\par PAUSE contr\'f4le les pauses \'e9cran au bout de chaque page. Si PAUSE est ON,
\par on vous propose de presser une touche avant l'affichage de la page suivante.
\par Le prompt est affich\'e9 dans la ligne de statut en bas de la fen\'eatre.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'\'e9tat actuel de PAUSE est affich\'e9.
\par 
\par Le mode par d\'e9faut de PAUSE est ON.
\par 
\par Exemple:
\par    PAUSE ON
\par    Cette commande pr\'e9cise que les commandes
\par    d'affichage dans les fen\'eatres provoqueront
\par    une attente touche apr\'e8s l'affichage de
\par    chaque \'e9cran.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                    ALTKEY
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 ALTKEY --  Modifie la s\'e9quence de touches servant \'e0 activer Soft-ICE
\par 
\par Syntaxe:
\par 
\par      ALTKEY [ALTlettre] | [CTRLlettre] | [SYSREQ]
\par      lettre -- Toute lettre (A - Z)
\par 
\par Commentaires:
\par La commande ALTKEY permet de modifier la s\'e9quence de touches pour activer
\par Soft-ICE. La s\'e9quence de touches peut \'eatre chang\'e9e en CTRL + lettre,
\par ALT + lettre, ou la touche SysRq.
\par 
\par Occasionnellement vous pouvez utiliser un programme qui entre en conflit
\par avec la s\'e9quence de touches CTRL D qui active Soft-ICE. Une m\'e9thode pour
\par r\'e9soudre ce probl\'e8me  est d'utiliser la commande ALTKEY pour changer la
\par s\'e9quence de touches. Une autre m\'e9thode est d'ajouter la touche SHIFT \'e0 la
\par s\'e9quence actuelle.  Soft-ICE ne r\'e9pond pas \'e0 cette s\'e9quence de touches et
\par permet d'acc\'e9der \'e0 votre programme.  Par exemple si un programme r\'e9sident que
\par vous utilisez est activ\'e9 avec la s\'e9quence de touches CTRL D, essayer d'utiliser
\par la s\'e9quence de touches CTRL SHIFT D pour activer votre programme r\'e9sident. Sur
\par certains claviers, vous devez presser ALT et la touche PrtScr simultan\'e9ment
\par pour g\'e9n\'e9rer un Sys Request. 
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, la s\'e9quence de touches actuelle est
\par affich\'e9e.
\par 
\par La s\'e9quence de touches par d\'e9faut est CTRL D.
\par 
\par Exemple:
\par    ALTKEY  ALT Z
\par      Cette commande pr\'e9cise que la s\'e9quence de touches
\par      ALT Z sera maintenant utilis\'e9e pour activer Soft-ICE
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {            FKEY
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par FKEY -- Affichage et \'e9dition des touches de fonction
\par 
\par Syntaxe:
\par 
\par    FKEY [nom-touche-fonction cha\'eene]
\par    nom-touch-fonction -- F1, F2... F12
\par 
\par    cha\'eene -- La cha\'eene consiste en toute commande valable
\par                     de Soft-ICE et les caract\'e8res sp\'e9ciaux
\par                     ^ (circonflexe) et ; (point-virgule).
\par                     Un ^ est plac\'e9 dans la cha\'eene pour faire
\par                     une commande invisible. Un ; est plac\'e9
\par                     dans la cha\'eene pour simuler un retour de
\par                     chariot.
\par 
\par Commentaires:
\par La commande FKEY est employ\'e9 sur la ligne de commandes pour affecter une
\par touche de fonction \'e0 une cha\'eene de commande. La touche de fonction peut \'eatre
\par affect\'e9e \'e0 toute cha\'eene de commande pouvant \'eatre entr\'e9e dans Soft-ICE.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, alors les affectations actuelles des touches
\par de fonction sont affich\'e9es.
\par 
\par Pour d\'e9safecter une touche de fonction particuli\'e8re, utilisez la commande
\par FKEY avec ces param\'e8tres: un nom de touche de fonction suivi par une cha\'eene
\par nulle.
\par 
\par Les touches de fonction peuvent aussi \'eatre pr\'e9-initialis\'e9es dans le fichier de
\par d\'e9finition S-ICE.DAT. Pour plus d'informations sur les d\'e9finitions de touches
\par de fonction dans le fichier de d\'e9finition, r\'e9f\'e9rez-vous \'e0 la  section 6.4.
\par 
\par L'utilisation du symbole de retour chariot dans les cha\'eenes d'affectation
\par des touches de fonction vous permet d'attribuer \'e0 une touche de fonction
\par une s\'e9rie de commandes. Un retour chariot est repr\'e9sent\'e9 par un ;
\par (point-virgule).
\par 
\par Si vous mettez ^ (Shift 6) au d\'e9but d'une d\'e9finition de touche de fonction,
\par la commande correspondante sera invisible. La commande fonctionnera
\par normalement, mais toute information affich\'e9e dans la fen\'eatre de commande
\par (messages d'erreur inclus) est supprim\'e9e. Le mode invisible est utile quand
\par une commande change une information dans une fen\'eatre (code, registre ou
\par donn\'e9es) mais que vous ne voulez pas encombrer la fen\'eatre de commandes.
\par 
\par Quand une touche de fonction est rendue invisible avec ^, la touche de
\par fonction peut \'eatre employ\'e9e au milieu de l'entr\'e9e d'une autre commande
\par sans affecter cette entr\'e9e. Par exemple, si vous utilisez l'affectation
\par par d\'e9faut pour F2, vous pouvez basculer la fen\'eatre de registre avec F2
\par m\'eame si vous \'eates en train d'entrer votre prochaine commande.
\par 
\par Note:
\par Soft-ICE a maintenant un fichier de d\'e9finition nomm\'e9 S-ICE.DAT. Vous pouvez
\par placer des affectations de touches de fonction dans ce fichier si bien
\par que ces touches de fonction seront automatiquement affect\'e9es quand
\par Soft-ICE sera charg\'e9. La syntaxe pour affecter une touche de fonction dans
\par le fichier de configuration est:
\par 
\par  nom-touche-fonction = "cha\'eene"
\par 
\par Quand vous affectez une touche de fonction \'e0 une cha\'eene de commande dans
\par S-ICE.DAT, la cha\'eene doit \'eatre incluse dans des guillemets.
\par 
\par Exemple de ligne de commande:
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 FKEY F2 ^WR;
\par     }{\f2\fs20 Cet exemple attribuera la commande de
\par     basculage de la fen\'eatre registre a
\par     la touche F2. Le ^ rend la commande
\par     invisible, et le ; termine la commande
\par     avec un retour de chariot. La touche
\par     F2 bascule la fen\'eatre registre ON ou
\par     OFF, et peut m\'eame \'eatre activ\'e9e pendant
\par     l'entr\'e9e d'une autre commanden.
\par 
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 FKEY F1 "G CS:120; R; G CS:"
\par     }{\f2\fs20 Cet exemple montre que des commandes
\par     multiples peuvent \'eatre attribu\'e9s \'e0 une
\par     seule touche de fonction et que des
\par     ordres partiels peuvent \'eatre affect\'e9s
\par     pour \'eatre compl\'e9t\'e9s par l'utilisateur.
\par     L'entr\'e9e de cette commande, en pressant
\par     la touche F1 forcera le programme \'e0
\par     s'ex\'e9cuter jusqu'\'e0 ce que l'emplacement
\par     CS:120 soit atteint, affichera les
\par     registres, commencera alors la commande
\par     G pour qu'lle soit compl\'e9t\'e9e par
\par     l'utilisateur.
\par 
\par    FKEY F1 WD 3; D DS:100;
\par     Cet exemple attribuera une s\'e9rie de
\par     commandes \'e0 la touche F1. La fonction est
\par     visible, et finit avec un retour de chariot.
\par     La touche F1 positionnera la fen\'eatre donn\'e9es
\par     \'e0 trois lignes de haut et fera un dump des
\par     donn\'e9es en commen\'e7ant \'e0 DS:100.
\par   }{\f2\fs20\lang2057\langfe1036\langnp2057 S-ICE.DAT exemple:
\par     F1 = "WR;WD 2;WC 10;"
\par     }{\f2\fs20 Si cette ligne est plac\'e9e dans S-ICE.DAT, quand
\par     Soft-ICE est charg\'e9 il affecte la cha\'eene \'e0 la
\par     touche F1. Quand F1 est press\'e9e dans Soft-ICE,
\par     elle bascule la fen\'eatre registre, cr\'e9e une
\par     fen\'eatre donn\'e9es de hauteur 2 et une fen\'eatre
\par     code de hauteur 10. Pour plus d'information sur
\par     l'affectation des touches de fonction dans
\par     S-ICE.DAT, se r\'e9f\'e9rer au chapitre 6.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {           BASE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par BASE -- Positionne la base de num\'e9ration courante
\par 
\par Syntaxe:
\par 
\par     BASE [10 | 16]
\par 
\par Commentaires:  La commande BASE fixe la base courante de num\'e9ration \'e0 base 10
\par ou base 16. La base 10 est d'emploi limit\'e9 dans la fen\'eatre \'e9troite \'e0 cause
\par des limitations de largeur de la fen\'eatre. Elle limite aussi la quantit\'e9
\par d'informations affich\'e9es par certaines commandes en mode large.
\par 
\par Quand la base courante est base 10, tous les nombres et les adresses
\par entr\'e9s et affich\'e9s par Soft-ICE sont en d\'e9cimal. Quand la base courante est
\par base 16, tous les nombres et adresses entr\'e9s et affich\'e9s par Soft-ICE sont
\par en hexad\'e9cimal sauf:
\par        * les num\'e9ros des lignes de source
\par        * les coordonn\'e9es \'e9cran et les tailles dans la commande WIN
\par 
\par Ces exceptions sont toujours entr\'e9ees et affich\'e9es comme nombres d\'e9cimaux.
\par 
\par La base par d\'e9faut est base 16.
\par 
\par Exemple:
\par    BASE 16
\par      Cet exemple positionne la base courante \'e0 base 16.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                       CTRL - P
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par CTRL-P -- Bascule l'enregistrement de la sc\'e9ance sur l'imprimante
\par 
\par Syntaxe:
\par 
\par   CTRL-P
\par 
\par Commentaires:
\par Quand la touche CTRL suivie par la touche P est press\'e9e, toute information
\par affich\'e9e dans la fen\'eatre de commande est aussit\'f4t envoy\'e9e \'e0 l'imprimante.
\par Pour basculer l'impression OFF, entrez CTRL suivi par P une deuxi\'e8me fois.
\par 
\par Quand vous envoyez des informations \'e0 l'imprimante en utilisant CTRL-P,
\par vous pouvez vouloir basculer la commande PAUSE sur OFF pour permettre \'e0
\par l'information de d\'e9filer dans la fen\'eatre sans presser une touche.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {             Print-Screen
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Print-Screen - Imprime le contenu de l'\'e9cran
\par 
\par Syntaxe:
\par 
\par    Print-Screen
\par 
\par Commentaires:
\par L'appui sur la touche Print-Screen fait une copie d'\'e9cran sur l'imprimante.
\par Toutes les informations de l'\'e9cran sont envoy\'e9es \'e0 l'imprimante.
\par 
\par Si vous d\'e9sirez imprimer la carte de la m\'e9moire ou des information d'aide,
\par il est habituellement beaucoup plus rapide \'e0 d'employer CTRL-P que Print-Screen.
\par C'est parce Print-Screen imprime tous les caract\'e8res sur l'\'e9cran y compris les
\par bordures.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                       PRN
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par PRN --- Positionne le port de sortie imprimante
\par 
\par Syntaxe:
\par 
\par   PRN [LPTx | COMx]
\par   x -- un nombre d\'e9cimal entre 1 et 4.
\par 
\par Commentaires:
\par La commande PRN vous permet envoyer la sortie de CTRL-P et de Print-Screen
\par \'e0 un port imprimante diff\'e9rent.
\par 
\par Si aucun param\'e8tre n'est entr\'e9, PRN affiche le port d'imprimante
\par actuellement attribu\'e9.
\par 
\par Exemple:
\par   PRN COM 1
\par    Cette commande envoie les sorties de
\par    CTRL-P et Print-Screen vers le port COM 1.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604296}5.9 Commandes de Contr\'f4le D'\'e9cran
{\*\bkmkend _Toc480604296}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commande:
\par  FLASH         -- Restaure l'\'e9cran durant P et T
\par  FLICK         -- R\'e9duction du 'Flicker'
\par  WATCHV        -- Positionne le mode de surveillance vid\'e9o
\par  RS            -- Restaure l'\'e9cran de programme
\par  CLS           -- Efface la fen\'eatre
\par  ALTSCR        -- Changement d'\'e9cran
\par  WIN           -- Changement de taille de la fen\'eatre Soft-ICE
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                 FLASH
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par FLASH -- Restaure l'\'e9cran durant P et T
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par 
\par FLASH [ON | OFF]
\par }{\f2\fs20 Commentaires: L'ordre FLASH vous permet de pr\'e9cisez comment l'\'e9cran sera
\par restaur\'e9 durant les commandes Saut de Programme et Trace. Si vous pr\'e9cisez que
\par l'\'e9cran doit \'eatre restaur\'e9, il est restaur\'e9 durant la br\'e8ve p\'e9riode de temps
\par que met la commande P ou T \'e0 s'ex\'e9cuter. Cette caract\'e9ristique est requise pour
\par d\'e9bugger des sections de code qui acc\'e8dent \'e0 la m\'e9moire vid\'e9o.
\par 
\par Si la commande P ex\'e9cute le contenu d'un saut ou d'une interruption, l'\'e9cran
\par sera toujours restaur\'e9, parce que la routine \'e9tant appel\'e9e peut \'e9crire sur
\par l'\'e9cran.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'\'e9tat actuel de FLASH est affich\'e9.
\par 
\par Le mode par d\'e9faut de FLASH est OFF.
\par 
\par Exemple:
\par   FLASH ON
\par    Cette commande met ON le mode FLASH. L'\'e9cran
\par    sera restaur\'e9 durant toute commande P ou T.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {           FLICK
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par FLICK -- r\'e9duction du scintillement de l'\'e9cran
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par 
\par    FLICK [ON | OFF]
\par 
\par }{\f2\fs20 Commentaires:
\par Certains types de cartes vid\'e9o requi\'e8rent une attente des rafra\'eechissements
\par horizontaux ou verticaux avant d'afficher des caract\'e8res. Si les \'e9critures
\par vid\'e9o sont faites arbitrairement, un scintillement appara\'eetra pendant
\par l'affichage des caract\'e8res. Si un scintillement survient sur votre \'e9cran
\par lors de l'utilisation de Soft-ICE, vous devriez positionner FLICK sur ON.
\par 
\par Avec certaines cartes EGA, les couleurs ne sont pas restaur\'e9es correctement
\par quand vous sortez de Soft-ICE. C'est un probl\'e8me de virtualisation de la
\par vid\'e9o EGA. Le port 3DA est un port vid\'e9o employ\'e9 dans deux buts. Le premier
\par est les vieux softs CGA testant 3DA pour hsync et vsync. Cela leur permet
\par de ne pas avoir de scintillement avec quelques vieilles cartes contr\'f4leur CGA.
\par Le second est qu'il est employ\'e9 \'e0 la remise \'e0 z\'e9ro d'un verrou de palette
\par sur les cartes EGA. Soft-ICE a un algorithme qui lui permet d'\'e9viter d'avoir
\par \'e0 constamment surveiller ce port, ce qui pourrait ralentir de vieux programmes
\par qui penseraient qu'ils sont en CGA. Cependant, il peut occasionnellement y
\par avoir des circonstances o\'f9 cet algorithme ne fonctionne pas. Si vous utilisez
\par Soft-ICE sur un \'e9cran EGA et si vous remarquez que les couleurs ne sont pas
\par restaur\'e9es correctement, alors positionnez FLICK sur ON et Soft-ICE surveillera
\par le port 3DA, fixant le probl\'e8me.
\par 
\par Quand FLICK est sur ON, les mises \'e0 jour d'\'e9cran sont plus lentes.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'\'e9tat actuel de FLICK est affich\'e9.
\par 
\par Le mode par d\'e9faut de FLICK est OFF.
\par 
\par Exemple:
\par    FLICK ON
\par    Cette commande le mode FLICK sur ON. Cela force
\par    Soft-ICE \'e0 attendre pour les rafra\'eechissements
\par    horizontal ou vertical avant d'afficher des caract\'e8res.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {        WATCHV
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par WATCHV -- Affiche le mode surveillance vid\'e9o
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par 
\par   WATCHV [ON | OFF]
\par 
\par }{\f2\fs20 Commentaires:
\par La commande WATCHV vous permet pr\'e9ciser comment Soft-ICE doit surveiller les
\par ports vid\'e9o. Normalement, Soft-ICE ne surveille les ports vid\'e9o qu'apr\'e8s
\par qu'une INT10 ait \'e9t\'e9 ex\'e9cut\'e9e si elle bascule en mode graphique. Certains
\par programmes n'emploient pas INT10 pour changer de mode. Dans ces cas-l\'e0, si
\par WATCHV est OFF, Soft-ICE peut avoir des probl\'e8mes pour sauver et restaurer
\par l'\'e9cran correctement. En basculant WATCHV ON on oblige Soft-ICE \'e0 surveiller
\par les ports vid\'e9o tout le temps.
\par 
\par Basculez WATCHV sur ON si vous remarquez que Soft-ICE ne g\'e8re pas votre \'e9cran
\par correctement, ou si le curseur n'est pas restaur\'e9 correctement. Le fait de
\par basculer WATCHV sur ON peut avoir des effets sur les performances dans certains
\par modes vid\'e9o.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, l'\'e9tat actuel de WATCHV est affich\'e9.
\par 
\par Le mode par d\'e9faut de WATCHV est OFF.
\par 
\par Exemple:
\par    WATCHV ON
\par    Cette commande met WATCHV en mode ON. Cela force
\par    Soft-ICE \'e0 surveiller des ports vid\'e9os suppl\'e9mentaires
\par    dans un but de virtualisation.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                        RS
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par RS -- Restaure l'\'e9cran de programme
\par 
\par Syntaxe:
\par 
\par    RS
\par 
\par Commentaires:
\par La commande RS vous permet de restaurer l'\'e9cran du programme temporairement.
\par La fen\'eatre Soft-ICE fen\'eatre dispara\'eet jusqu'\'e0 ce qu'une touche soit press\'e9e.
\par Cette caract\'e9ristique est utile en d\'e9buggant des programmes graphiques qui
\par mettent \'e0 jour l'\'e9cran fr\'e9quemment. Quand Soft-ICE est r\'e9activ\'e9, il revient
\par en mode texte. L'utilisation de la commande RS restaure temporairement l'\'e9cran
\par graphique.
\par 
\par Exemple:
\par    RS
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {            CLS
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par CLS -- Effacement de la fen\'eatre
\par 
\par Syntaxe:
\par 
\par   CLS
\par 
\par Commentaires:
\par La commande  CLS efface la fen\'eatre Soft-ICE et d\'e9place le prompt et le curseur
\par dans le coin sup\'e9rieur gauche de la fen\'eatre.
\par 
\par Exemple:
\par   CLS
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                  ALTSCR
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par ALTSCR -- Changement d'\'e9cran
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Syntaxe:
\par 
\par 
\par ALTSCR [ON | OFF]
\par 
\par }{\f2\fs20 Commentaires:
\par La commande ALTSCR vous permet de rediriger les sorties \'e9cran de Soft-ICE
\par de votre \'e9cran par d\'e9faut \'e0 l'\'e9cran altern\'e9. Cette caract\'e9ristique est utile,
\par par exemple, quand vous voulez d\'e9bugger un programme graphique sans devoir
\par changer entre la fen\'eatre Soft-ICE et l'affichage graphique.
\par 
\par ALTSCR n\'e9cessite que le syst\'e8me ait deux moniteurs connect\'e9s. Le moniteur
\par altern\'e9 doit \'eatre en mode caract\'e8re, qui est le mode par d\'e9faut pour les
\par moniteurs.
\par 
\par Le mode par d\'e9faut de ALTSCR est OFF.
\par 
\par Exemple:
\par    ALTSCR ON
\par 
\par Cette commande redirige les sorties \'e9cran vers le moniteur altern\'e9.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {               WIN
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par WIN -- Change la taille de la fen\'eatre Soft-ICE
\par 
\par Syntaxe:
\par 
\par    WIN [N | W] [d\'e9but-rang\'e9e longueur [d\'e9but-colonne]]
\par    N -- Quand N est pr\'e9cis\'e9, la fen\'eatre est mise \'e0 la
\par                   largeur \'e9troite: 46 caract\'e8res.
\par    W -- Quand W est pr\'e9cis\'e9, la fen\'eatre est positionn\'e9e
\par                   \'e0 la largeur plein \'e9cran.
\par    d\'e9but-rang\'e9e -- Nombre de 0 \'e0 17 pr\'e9cisant la rang\'e9e
\par                   o\'f9 d\'e9bute l'affichage de la fen\'eatre.
\par    longueur -- Nombre de 8 \'e0 25 pr\'e9cisant de combien
\par                   de combien de lignes vous voulez la fen\'eatre.
\par    d\'e9but-colonne -- position de la colonne gauche de la fen\'eatre
\par                   \'e9troite. D\'e9but-rang\'e9e et d\'e9but-colonne pr\'e9cisent
\par                   le coin sup\'e9rieur gauche de la fen\'eatre
\par                   \'e9troite. D\'e9but-colonne est ignor\'e9 s'il
\par                   est appliqu\'e9 \'e0 la fen\'eatre large.
\par 
\par Commentaires:
\par La commande WIN vous permet modifier la largeur et la hauteur de la
\par fen\'eatre Soft-ICE.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, cette commande bascule la fen\'eatre entre
\par l'affichage \'e9troit et l'affichage large.
\par 
\par Si la commande WIN est pr\'e9cis\'e9 avec seulement le param\'e8tre N ou W, la taille
\par de fen\'eatre sera chang\'e9e \'e0 la largeur demand\'e9e et \'e0 la hauteur actuelle.
\par 
\par Si le nombre de lignes plus le num\'e9ro de la rang\'e9e de d\'e9part est plus grand
\par que 25, la fen\'eatre va jusqu'au bas de l'\'e9cran.
\par 
\par Le mode par d\'e9faut de WIN est NARROW.
\par 
\par Exemples:
\par    WIN N 4 9 30
\par    Cette commande force l'affichage \'e0 commencer
\par    \'e0 la rang\'e9e 4 et \'e0 la colonne 30, et \'e0 \'eatre
\par    haut de 9 lignes et large de 46 caract\'e8res.
\par    WIN
\par    Cette commande bascule la largeur de la fen\'eatre
\par    de son \'e9tat actuel (large ou \'e9troit) \'e0 l'\'e9tat
\par    contraire.
\par    WIN W 10 8
\par    Cette commande force la fen\'eatre \'e0 commencer
\par    \'e0 la colonne 10, et \'e0 \'eatre haut de 8 lignes
\par    et de toute la largeur de l'\'e9cran.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604297}5.10 Commandes symboles et ligne source
{\*\bkmkend _Toc480604297}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Commandes:
\par  SYM        -- Affiche/Positionne les symboles
\par  SYMLOC     -- D\'e9place la base de symboles
\par  SRC        -- Bascule entre source, m\'e9lang\'e9 et code
\par  FICHIER    -- Change/affiche le source actuel
\par  SS         -- Cherche une cha\'eene dans le fichier source actuel
\par   158
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                         SYM
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par SYM -- Affiche/positionne les symboles
\par 
\par Syntaxe:
\par 
\par    SYM [nom-symbole [valeur]]
\par    Nom-symbole -- Un nom de symbole valide. Le nom du symbole
\par                    peut se terminer avec un * (ast\'e9risque).
\par                    Cela permet de chercher un symbole si on
\par                    ne connait que la premi\'e8re partie de son
\par                    nom. Le caract\'e8re , (virgule) peut \'eatre
\par                    employ\'e9 comme un joker \'e0 la place d'un
\par                    caract\'e8re dans nom-symbole.
\par 
\par    valeur -- C'est une valeur de mot qui est employ\'e9e si vous
\par                    voulez positionner un symbole \'e0 une valeur
\par                    sp\'e9cifique.
\par 
\par Commentaires:
\par La commande SYM permet d'afficher et de positionner des symboles.  Si SYM
\par est entr\'e9 sans param\'e8tre tous les symboles sont affich\'e9s. La valeur de chaque
\par symbole est affich\'e9e \'e0 c\'f4t\'e9 du nom du symbole.
\par 
\par Si un nom de symbole est entr\'e9 sans aucune valeur alors la valeur et nom du
\par symbole sont affich\'e9s. Si le nom du symbole n'est pas trouv\'e9 alors rien n'est
\par affich\'e9.
\par 
\par La commande SYM est souvent utile pour trouver un nom de symbole quand vous
\par ne pouvez vous rappeler que d'une portion du nom. Deux types de jokers sont
\par disponibles pour situer des symboles. Si nom-symbole finit avec un *, alors
\par tous les symboles qui ont les m\'eames caract\'e8res pr\'e9c\'e9dant le * seront affich\'e9s
\par ind\'e9pendamment de leurs terminaisons. Si une virgule est employ\'e9e \'e0 la place
\par d'un caract\'e8re sp\'e9cifique dans nom-symbole, cette virgule est un joker.
\par 
\par Si valeur est pr\'e9cis\'e9e, tous les symboles correspondant \'e0 nom-symbole sont
\par positionn\'e9s \'e0 la valeur. Tous les symboles ont des valeurs de mot.
\par 
\par Exemples:
\par    SYM FOO *
\par    Tous les symboles commen\'e7ant par FOO sont affich\'e9s.
\par    SYM FOO * 6000
\par    Tous symboles commen\'e7ant par FOO sont positionn\'e9s \'e0 la valeur 6000.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {          SYMLOC
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par SYMLOC -- Reloge la base de symboles
\par 
\par Syntaxe:
\par 
\par SYMLOC segment-adresse
\par 
\par Commentaires:
\par La commande SYMLOC reloge l'adresse de segment de tous les symboles par rapport
\par \'e0 l'adresse de segment pr\'e9cis\'e9e. Cette fonction est n\'e9cessaire en d\'e9buggant
\par de pilotes de p\'e9riph\'e9riques ou d'autres programmes qui ne peuvent pas \'eatre
\par charg\'e9s directement avec LDR.EXE.
\par 
\par Quand on reloge un pilote de p\'e9riph\'e9rique, il faut employer la valeur de
\par l'adresse de base du pilote comme trouv\'e9 avec la commande MAP. Quand on reloge
\par un programme .EXE, la valeur est 10H plus \'e9lev\'e9e que celle trouv\'e9e comme base
\par avec la commande MAP. Quand on reloge un programme .COM, il faut employer
\par l'adresse de base du segment qui est trouv\'e9e la commande MAP.
\par 
\par La commande MAP affiche au moins deux entr\'e9es pour chaque programme. La premi\'e8re
\par est typiquement l'environnement et le second est typiquement le programme.
\par L'adresse de base du programme est la valeur de relogement.
\par 
\par Exemple:
\par     SYMLOC 1244 + 10
\par     Ceci reloge tous les segments de la table de symbole
\par     \'e0 1244.  Le + 10 est employ\'e9 pour reloger un TSR qui
\par     \'e9tait \'e0 l'origine un fichier .EXE. S'il s'\'e9tait agi
\par     d'un fichier .COM le + 10 n'\'e9tait pas n\'e9cessaire.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {           SRC
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par SRC -- Bascule entre source, m\'e9lang\'e9 et code
\par 
\par Syntaxe:
\par 
\par   SRC [?]
\par 
\par Commentaires:
\par La commande SRC bascule entre les modes source, m\'e9lang\'e9 et code dans la
\par fen\'eatre code.
\par 
\par Si SRC? est entr\'e9, l'\'e9tat actuel est affich\'e9.
\par 
\par Exemple:
\par    SRC
\par    Cette commande change la mode actuel de la
\par    fen\'eatre de code. Si le mode \'e9tait source,
\par    il devient mixte. Si le mode \'e9tait mixte,
\par    il devient code. Si le mode \'e9tait code,
\par    il devient source.
\par 
\par La touche de fonction par d\'e9faut: F3
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                           FILE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par FILE -- Modifie/affiche le fichier source courant
\par 
\par Syntaxe:
\par 
\par FILE [nom-fichier]
\par Commentaires:
\par Si nom-fichier est pr\'e9cis\'e9, ce fichier devient le fichier courant et le
\par d\'e9but du fichier est affich\'e9 dans la fen\'eatre code. Si aucun nom n'est pr\'e9cis\'e9,
\par le nom du fichier source actuel (s'il existe) est affich\'e9.
\par 
\par La commande FILE est souvent utile quand on positionne un point d'arr\'eat
\par sur une ligne qui n'a aucun symbole public associ\'e9. Utilisez FILE pour
\par amener le fichier d\'e9sir\'e9 dans la fen\'eatre  code, employez la commande SS pour
\par situer la ligne sp\'e9cifique, d\'e9placer le curseur sur la ligne sp\'e9cifique, puis
\par entrez alors BPX pour positionner le point d'arr\'eat.
\par 
\par Note:
\par Seuls les fichiers source charg\'e9s en la m\'e9moire \'e9tendue avec LDR.EXE sont
\par disponibles pour la commande FILE.
\par 
\par Exemple:
\par    FILE MAIN.C
\par    Si MAIN.C avait \'e9t\'e9 charg\'e9 avec LDR.EXE, cette
\par    commande l'am\'e8ne dans la fen\'eatre de code en
\par    commen\'e7ant par la ligne 1.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {                           SS
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par SS -- Cherche une cha\'eene dans le fichier source actuel
\par 
\par Syntaxe:
\par 
\par     SS [num\'e9ro-ligne] ['cha\'eene']
\par 
\par     num\'e9ro-ligne -- un nombre d\'e9cimal
\par 
\par     cha\'eene -- une cha\'eene de caract\'e8re entour\'e9e
\par     par des apostrophes ou des guillemets.
\par 
\par Commentaires:
\par La commande SS cherche la cha\'eene de caract\'e8res pr\'e9cis\'e9e dans le fichier source.
\par S'il y a une occurence, la ligne dans laquelle la cha\'eene est situ\'e9e est
\par affich\'e9e sur la premi\'e8re ligne dans la fen\'eatre code.
\par 
\par La recherche commence au num\'e9ro de ligne pr\'e9cis\'e9. Si aucun num\'e9ro de ligne
\par n'est pr\'e9cis\'e9 la recherche d\'e9bute \'e0 la premi\'e8re ligne affich\'e9e dans la fen\'eatre
\par code.
\par 
\par Si aucun param\'e8tre n'est pr\'e9cis\'e9, la recherche continue pour la pr\'e9c\'e9dente
\par cha\'eene.
\par 
\par Note:
\par La fen\'eatre code doit \'eatre visible et en mode source avant d'utiliser la
\par commande SS.
\par 
\par Exemple:
\par     }{\f2\fs20\lang2057\langfe1036\langnp2057 SS 1 'if(i = = 3)'
\par     }{\f2\fs20 La cha\'eene 'if(i = = 3)' est recherch\'e9e dans le
\par     fichier source actuel en commen\'e7ant \'e0 la ligne 1.
\par     La ligne contenant la prochaine occurence de la
\par     cha\'eene devient la premi\'e8re ligne affich\'e9e dans
\par     la fen\'eatre de code.
\par 
\par \page 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {SECTION III - Caract\'e9ristiques
\par }{\f2\fs20 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {       {\*\bkmkstart _Toc480604298}CHAPITRE 6
{\*\bkmkend _Toc480604298}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2 Options d'Initialization de Soft-ICE
\par 
\par    6.1 Introduction
\par    6.2 Chargement depuis le prompt du DOS
\par    6.3 Chargement de Soft-ICE comme un pilote de p\'e9riph\'e9rique
\par    6.3.1 Commutateurs de chargement de Soft-ICE
\par    6.4 Le fichier d'initialisation S-ICE.DAT
\par    6.4.1 Options de configuration
\par    6.4.2 Affectations des touches de fonction
\par    6.4.3 S\'e9quence de commandes d'initialisation
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604299}6.1 Introduction{\*\bkmkend _Toc480604299}

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Le programme Soft-ICE (S-ICE.EXE) peut \'eatre charg\'e9 comme un pilote de
\par p\'e9riph\'e9rique dans CONFIG.SYS ou comme un programme depuis la ligne de commande
\par DOS. Pour exploiter Soft-ICE au maximum, il doit \'eatre charg\'e9 initialement
\par comme un pilote de p\'e9riph\'e9rique dans CONFIG.SYS. Cependant, il peut y avoir
\par des circonstances o\'f9 vous pourriez vouloir lancer Soft-ICE depuis le prompt
\par DOS ou dans un fichier .BAT:
\par 
\par     * Vous n'avez pas de m\'e9moire \'e9tendue dans votre
\par         syst\'e8me. Soft-ICE ne peut \'eatre charg\'e9 comme
\par         un pilote de p\'e9riph\'e9rique que si vous avez
\par         de la m\'e9moire \'e9tendue.
\par     * Vous ne voulez utiliser AUCUN octet de m\'e9moire
\par         conventionnelle. Quand il est charg\'e9 comme
\par         un pilote de p\'e9riph\'e9rique, Soft-ICE occupe
\par         \'e0-peu-pr\'e8s 2K de m\'e9moire conventionnelle.
\par     * Vous ne pensez employer Soft-ICE
\par         qu'occasionnellement et vous n'avez pas
\par         d'autres programmes utilisant la m\'e9moire
\par         \'e9tendue.
\par 
\par Dans certains cas vous pouvez avoir besoin de certaines caract\'e9ristiques qui
\par imposent \'e0 Soft-ICE d'\'eatre charg\'e9 dans CONFIG.SYS mais vous ne voulez pas que
\par Soft-ICE soit r\'e9sidant tout le temps. Dans ce cas Soft-ICE peut \'eatre charg\'e9
\par dans CONFIG.SYS pour r\'e9server de la m\'e9moire \'e9tendue, puis d\'e9sactiv\'e9, en
\par utilisant le commutateur /UN, jusqu'\'e0 ce que Soft-ICE soit n\'e9cessaire. Voir
\par la section 6.3.1 pour plus d'informations sur le commutateur /UN.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604300}
6.2 Chargement de Soft-ICE depuis le prompt du DOS{\*\bkmkend _Toc480604300}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Vous NE pouvez PAS activer toutes les caract\'e9ristiques de Soft-ICE en le
\par chargeant depuis le prompt DOS. Si vous utilisez Soft-ICE comme un d\'e9bugger
\par seul, il est recommand\'e9 de le charger dans le fichier CONFIG.SYS.
\par 
\par Pour charger Soft-ICE depuis le prompt du DOS entrez:
\par 
\par          S-ICE
\par 
\par Dans les syst\'e8mes sans m\'e9moire \'e9tendue, Soft-ICE se charge lui-m\'eame dans le
\par plus haut emplacement m\'e9moire possible. La m\'e9moire utilis\'e9e par Soft-ICE est
\par alors rendue invisible aux programmes DOS. Malgr\'e8s que la m\'e9moire totale
\par visible par DOS et ses programmes soit moindre apr\'e8s le chargement de Soft-ICE,
\par il est recommand\'e9 de charger Soft-ICE avant tout programme T&SR.
\par 
\par Dans des syst\'e8mes avec de la m\'e9moire \'e9tendue, vous ne devriez charger Soft-ICE
\par depuis le prompt DOS que si vous n'avez pas \'e0 utiliser la m\'e9moire \'e9tendue pour
\par autre chose (ex, VDISK, CACHE, HIMEM...).  Quand vous chargez initialement
\par Soft-ICE depuis la ligne de commande ou depuis un fichier .BAT, Soft-ICE
\par vous avertira avec un message. Ce message d'avertissement ne sert qu'\'e0 vous
\par rappeler que Soft-ICE \'e9crase la zone la plus haute de la m\'e9moire \'e9tendue quand
\par il se charge. Vous pouvez supprimer cet avertissement avec l'option EXTENDED
\par dans le fichier de configuration (S-ICE.DAT). Pour plus d'information sur
\par l'option EXTENDED, voir la section 6.4.1.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604301}
6.3 Chargement de Soft-ICE comme un pilote de p\'e9riph\'e9rique{\*\bkmkend _Toc480604301}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Dans le but de rendre disponibles toutes les caract\'e9ristiques de Soft-ICE,
\par vous devez d'abord charger Soft-ICE comme un pilote de p\'e9riph\'e9rique dans
\par votre fichier CONFIG.SYS. Les caract\'e9ristiques rendues disponibles sont:
\par     * Coexister avec autre logiciel qui emploie la
\par         m\'e9moire \'e9tendue.
\par         Le chargement comme un pilote de p\'e9riph\'e9rique
\par         permet \'e0 Soft-ICE de g\'e9rer la m\'e9moire \'e9tendue
\par         ainsi vous pouvez lancer Soft-ICE avec des
\par         programmes qui emploient la m\'e9moire \'e9tendue,
\par         tels que VDISK, CACHE et HIMEM.
\par     * D\'e9bugging Symbolique et niveau source
\par         Le chargement comme un pilote de p\'e9riph\'e9rique
\par         permet \'e0 Soft-ICE d'affecter un buffer en
\par         m\'e9moire \'e9tendue pour les informations de source
\par         et symboles.
\par     * Les domaines de trace arri\'e8re et la commande SNAP
\par         Le chargement comme un pilote de p\'e9riph\'e9rique
\par         permet \'e0 Soft-ICE d'affecter un buffer en m\'e9moire
\par         \'e9tendue pour un buffer de trace arri\'e8re. Ce buffer
\par         est aussi utilis\'e9 pour la commande Soft-ICE SNAP.
\par     * Activer les possibilit\'e9s EMM 4.0 de Soft-ICE
\par     * Faire tourner Soft-ICE avec MagicCV ou MagicCVW
\par 
\par Notes:
\par Quand il est charg\'e9 comme un pilote de p\'e9riph\'e9rique dans CONFIG.SYS, Soft-ICE
\par affecte la zone la plus haute de m\'e9moire \'e9tendue pour lui-m\'eame et ses
\par composants associ\'e9s, afin qu'il ne puisse y avoir aucun conflit de m\'e9moire.
\par Le fichier S-ICE.EXE doit \'eatre charg\'e9 dans CONFIG.SYS avant tout autre
\par pilote qui affecte la m\'e9moire \'e9tendue (ex, VDISK.SYS, RAMDRIVE.SYS).
\par G\'e9n\'e9ralement Soft-ICE travaille mieux s'il est le premier pilote de
\par p\'e9riph\'e9rique install\'e9 dans CONFIG.SYS.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604302}6.3.1 Commutateurs de chargement de Soft-ICE
{\*\bkmkend _Toc480604302}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Un ou plusieurs commutateurs de chargement peuvent suivre S-ICE.EXE dans
\par CONFIG.SYS. Ces commutateurs vous permettent personnaliser la fa\'e7on dont la
\par m\'e9moire \'e9tendue sera r\'e9serv\'e9e par Soft-ICE. Tous les commutateurs doivent
\par commencer par le caract\'e8re /.
\par Les commutateurs de chargement sont:
\par 
\par    * /EXT XXXX -- Demande \'e0 S-ICE.EXE de r\'e9server
\par      XXXX kilo-octets de m\'e9moire \'e9tendue pour
\par      d'autres programmes DOS qui utilsent la
\par      m\'e9moire \'e9tendue (ex, VDISK, CACHE, HIMEM,...).
\par      Si le commutateur /EXT n'est pas pr\'e9sent,
\par      alors toute la m\'e9moire \'e9tendue que n'emploient
\par      pas Soft-ICE ou ses composants associ\'e9s sera
\par      laiss\'e9e comme m\'e9moire \'e9tendue standard, mais
\par      la quantit\'e9 ne peut pas \'eatre garantie. Le
\par      commutateur /EXT est utile parce qu'il est
\par      parfois difficile de d\'e9terminer exactement combien
\par      de m\'e9moire est utilis\'e9e par Soft-ICE et ses
\par      composants associ\'e9s. L'utilisation du commutateur
\par      /EXT garantira que la quantit\'e9 pr\'e9cis\'e9e sera
\par      disponible pour d'autres programmes utilisant la
\par      m\'e9moire \'e9tendue.
\par 
\par    * / SYM XXXX -- Demande \'e0 S-ICE.EXE de r\'e9server
\par      XXXX kilo-octets de m\'e9moire \'e9tendue pour le
\par      source et les symboles. Si XXXX n'est pas pr\'e9cis\'e9,
\par      alors toute la m\'e9moire \'e9tendue restante est utilis\'e9e
\par      pour les symboles. Assez de m\'e9moire doit \'eatre
\par      affect\'e9e pour  votre fichier .SYM et tous les fichiers
\par      source. Pour plus d'informations sur l'utilisation des
\par      sources et des symboles, voir le chapitre 7.
\par 
\par    * /TRA XXXX -- Demande \'e0 S-ICE.EXE de r\'e9server
\par      XXXX kilo-octets de m\'e9moire \'e9tendue pour un
\par      buffer d'historique de trace. Ce buffer est
\par      utilis\'e9 pour des domaines de trace arri\'e8re
\par      et pour la commande SNAP. Si XXXX n'est pas
\par      pr\'e9cis\'e9, alors 10K de m\'e9moire \'e9tendue sont
\par      automatiquement r\'e9serv\'e9s pour le buffer. Si
\par      vous ne voulez pas du tout de m\'e9moire r\'e9serv\'e9e
\par      pour un buffer de trace arri\'e8re, utilisez /TRA 0.
\par      Pour plus d'informations sur l'utilisation des 
\par      domaines de trace arri\'e8re, voir le chapitre 9.
\par    
\par    * /MCV XXX -- Demande \'e0 S-ICE.EXE de r\'e9server
\par      XXX kilo-octets de m\'e9moire \'e9tendue pour MagicCV
\par      ou MagicCVW. La quantit\'e9 minimum de m\'e9moire \'e9tendue
\par      que vous pouvez affecter est 280K et le maximum est
\par      620K.  Si XXX n'est pas pr\'e9cis\'e9, S-ICE.EXE r\'e9servera
\par      la m\'e9moire restante, entre 280K et 620K. Voir le
\par      chapitre 10 pour plus d'informations sur le lancement
\par      de Soft-ICE avec MagicCV ou MagicCVW.
\par 
\par    * /EMM XXXX -- Demande \'e0 S-ICE.EXE de transformer XXXX
\par      kilo-octets de m\'e9moire \'e9tendue en m\'e9moire pagin\'e9e
\par      EMM 4.0. Si XXXX est pr\'e9cis\'e9, alors toute la m\'e9moire
\par      restante est uttilis\'e9e comme pagin\'e9e. Voir le chapitre
\par      8 pour plus d'informations sur le support de la m\'e9moire
\par      pagin\'e9e.
\par 
\par    * /UN -- Demande \'e0 S-ICE.EXE d'entrer en mode prot\'e9g\'e9, de
\par      r\'e9server toute la m\'e9moire \'e9tendue n\'e9cessaire, de sortir
\par      du mode prot\'e9g\'e9 et de se d\'e9charger lui-m\'eame. Ce commutateur
\par      doit \'eatre utilis\'e9 quand vous chargez S-ICE.EXE comme un
\par      pilote de p\'e9riph\'e9rique, mais vous ne voulez pas que votre
\par      syst\'e8me reste en mode prot\'e9g\'e9. Ce commutateur r\'e9serve la
\par      m\'e9moire pour Soft-ICE, et vous devrez ex\'e9cuter S-ICE.EXE
\par      au prompt du DOS quand vous \'eates pr\'eats \'e0 employer Soft-ICE.
\par 
\par Soft-ICE r\'e9serve la m\'e9moire \'e9tendue dans l'ordre suivant, ind\'e9pendamment de
\par l'ordre dans lequel les commutateurs sont pr\'e9cis\'e9s:
\par 
\par      R\'e9serve \'e0-peu-pr\'e8s 120K pour S-ICE.EXE.
\par      R\'e9serve de la m\'e9moire pour le commutateur /EXT si pr\'e9sent.
\par      R\'e9serve de la m\'e9moire pour le commutateur /SYM si pr\'e9sent.
\par      R\'e9serve de la m\'e9moire pour le commutateur /TRA si pr\'e9sent.
\par           s'il n'est pas pr\'e9sent, r\'e9serve par d\'e9faut 10K pour le
\par                buffer de trace arri\'e8re.
\par      R\'e9serve de la m\'e9moire pour le commutateur /MCV si pr\'e9sent.
\par      R\'e9serve de la m\'e9moire pour le commutateur /EMM si pr\'e9sent.
\par 
\par Si la m\'e9moire disponible venait \'e0 manquer tandis que l'on essaye
\par de r\'e9server de la m\'e9moire pour un commutateur dans la s\'e9quence
\par au-dessus, alors S-ICE.EXE proc\'e8de ainsi:
\par 
\par 
\par     1. La reste de la m\'e9moire \'e9tendue est affect\'e9
\par         pour switcher quand la m\'e9moire manquera.
\par     2. Aucune m\'e9moire ne sera r\'e9serv\'e9e pour les
\par         commutateurs restants.
\par 
\par Notes:
\par 
\par Si le commutateur /MCV ou /EMM est pr\'e9sent, 64k de m\'e9moire \'e9tendue
\par suppl\'e9mentaire sont r\'e9serv\'e9s pour un buffer DMA.
\par 
\par Les commutateurs peuvent \'eatre plac\'e9s dans nimporte quel ordre apr\'e8s la
\par commande DEVICE = S-ICE.EXE. Un exemple:
\par 
\par     DEVICE = S-ICE.EXE /TRA50 /EMM 500 /SYM 2048
\par 
\par Si 4 m\'e9ga-octets de m\'e9moire \'e9tendue sont disponibles, cet exemple
\par r\'e9servera \'e0 peu pr\'e8s 120K pour Soft-ICE, 2 m\'e9ga-octets pour des symboles,
\par 50K pour un buffer de trace arri\'e8re, 500K pour la m\'e9moire pagin\'e9e et laisse
\par \'e0 peu pr\'e8s 1.3 m\'e9ga-octets pour autres programmes utilisant la m\'e9moire
\par \'e9tendue. Notez que Soft-ICE se chargera dans la zone la plus haute de m\'e9moire
\par \'e9tendue, en laissant le reste la m\'e9moire commen\'e7ant \'e0 100000H (un m\'e9ga-octet).
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604303}6.4 Le fichier d'initialisation S-ICE.DAT
{\*\bkmkend _Toc480604303}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE a plusieurs options de chargement. Ces options sont pr\'e9cis\'e9es en
\par pla\'e7ant des ordres sp\'e9ciaux dans un fichier d'initialisation nomm\'e9 S-ICE.DAT.
\par S-ICE.DAT est un fichier texte ASCII que Soft-ICE parcourt au moment du
\par chargement. Ce fichier peut contenir des affectations de touches de fonction
\par une cha\'eene d'auto-d\'e9marrage et diverses options de configuration. Le fichier
\par peut \'eatre cr\'e9\'e9 et \'e9dit\'e9 avec tout traitement de texte DOS. Quand on charge
\par Soft-ICE depuis la ligne de commande, S-ICE.DAT doit \'eatre plac\'e9 dans
\par le r\'e9pertoire actuel ou dans un r\'e9pertoire qui est accessible par votre
\par PATH actuel. Quand Soft-ICE est charg\'e9e comme un pilote de p\'e9riph\'e9rique dans
\par CONFIG.SYS, S-ICE.DAT doit \'eatre dans le m\'eame r\'e9pertoire que S-ICE.EXE.
\par 
\par Il y a trois cat\'e9gories d'ordres qui peuvent \'eatre inclus dans le fichier
\par }{\f2\fs20\lang1043\langfe1036\langnp1043 S-ICE.DAT:
\par      }{\f2\fs20 * Les options sp\'e9ciales de configuration
\par      * Les affectations de touches de fonction
\par      * Une s\'e9quence de commandes d'initialisation
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604304}6.4.1 Options Sp\'e9ciales De configuration
{\*\bkmkend _Toc480604304}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Chacune des options suivantes de configuration qui pourraient \'eatre
\par n\'e9cessaire doivent chacune \'eatre plac\'e9e sur une ligne diff\'e9rente dans
\par le fichier S-ICE.DAT.
\par    * COMPAQ -- Les ordinateurs Compaq 386 et 386SX
\par        et quelque ordinateurs compatibles Compaq
\par        (y compris des ordinateurs contenant des
\par        cartes m\'e8re Micronix) ont 384K de m\'e9moire
\par        \'e9tendue non-contig\'fce. L'option COMPAQ est
\par        n\'e9cessaire si vous voulez que Soft-ICE
\par        emploie cette m\'e9moire.Notez que l'option
\par        COMPAQ est identique au param\'e8tre de ligne
\par        de commande /C dans Soft-ICE 1.X.
\par    * NOLEDS -- L'option NOLEDS indique \'e0 Soft-ICE
\par        ne pas allumer ni \'e9teindre les LEDS du clavier
\par        pendant que la fen\'eatre Soft-ICE est activ\'e9e.
\par        Certains claviers ont des probl\'e8mes de
\par        temporisation qui provoqueront des pertes de
\par        synchronisation avec le clavier. Si  Soft-ICE
\par        s'arr\'eate quand vous \'eates dans sa fen\'eatre,
\par        employez cette option. Notez que l'option
\par        NOLEDS est identique au param\'e8tre de ligne de
\par        commande /L dans Soft-ICE 1.X.
\par    * NOTVGA -- L'option NOTVGA permet \'e0 Soft-ICE de
\par        fonctionner sur cartes compatibles VGA au niveau
\par        BIOS seulement. Beaucoup de cartes VGA ne sont
\par        pas compatibles avec le VGA IBM au niveau
\par        mat\'e9riel. Ces cartes supportent le VGA au
\par        niveau BIOS seulement. Employez ce commutateur
\par        si vous avez un de ces adaptateurs vid\'e9o.
\par        Notez que l'option NOTVGA est identique au
\par        param\'e8tre de ligne de commande /V dans Soft-ICE 1.X.
\par 
\par    * EXTENDED -- l'option EXTENDED force Soft-ICE \'e0 se
\par        charger directement en m\'e9moire \'e9tendue sans
\par        message d'avertissement pour l'utilisateur.
\par        Il doit \'eatre employ\'e9 si vous chargez Soft-ICE
\par        depuis le prompt du DOS et ne voulez pas \'eatre
\par        averti.Notez que l'option EXTENDED est identique
\par        au param\'e8tre de ligne de commande
\par        }{\f2\fs20\lang1031\langfe1036\langnp1031 /E dans Soft-ICE 1.X.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604305}6.4.2 Affectations des touches de fonction
{\*\bkmkend _Toc480604305}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Une ou plusieurs commandes Soft-ICE peuvent \'eatre affect\'e9es \'e0 toute touche de
\par fonction au moment du chargement. Voir la description de la commande FKEY dans
\par la section 5.8 (Commandes de personnalisation du D\'e9bugger) pour une description
\par de l'affectation des touches de fonction de la ligne de commande de Soft-ICE.
\par 
\par La syntaxe pour affecter une touche de fonction dans S-ICE.DAT est:
\par 
\par     nom-de-la-touche-de-fonction = "cha\'eene"
\par     nom-de-la-touche-de-fonction -- F1, F2... F12.
\par     cha\'eene -- La cha\'eene peut consister en toute commande
\par                    Soft-ICE valide et les caract\'e8res
\par                    sp\'e9ciaux ^ et ;.
\par                    Un ^ est plac\'e9 dans la cha\'eene pour rendre
\par                    la commande invisible.
\par                    Un ; plac\'e9 dans la cha\'eene signifie un retour
\par                    de chariot.
\par                    La cha\'eene doit \'eatre entour\'e9e de guillements.
\par 
\par Un exemple d'affectation de touche de fonction dans S-ICE.DAT:
\par      F12 = "D 100;"
\par 
\par Cela affectera la commande Soft-ICE DUMP \'e0 la touche F12. Quand F12 sera
\par press\'e9e Soft-ICE fera un dump de la m\'e9moire \'e0 l'offset 100H dans le segment
\par de donn\'e9es actuel. Le point virgule suivant le 100 repr\'e9sente la touche ENTREE.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604306}6.4.3 S\'e9quence de commandes d'initialisation
{\*\bkmkend _Toc480604306}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Une s\'e9quence de commandes peut \'eatre ex\'e9cut\'e9e automatiquement au chargement
\par de Soft-ICE. C'est utile pour personnaliser Soft-ICE comme vous le souhaitez.
\par Par exemple, vous pouvez positionner des fen\'eatres et changer la s\'e9quence
\par de touches d'activation.
\par La syntaxe pour positionner une s\'e9quence de commandes d'initialisation dans
\par S-ICE.DAT est:
\par 
\par 
\par    INIT = "cha\'eene-d'affectation"
\par    cha\'eene d'affectation -- La cha\'eene peut \'eatre constitu\'e9e
\par                      de toute commande Soft-ICE valide et
\par                      des caract\'e8res sp\'e9ciaux ^ et ;.
\par                      Un ^ est plac\'e9 dans la cha\'eene pour
\par                      rendre une commande invisible.
\par                      Un ; plac\'e9 dans la cha\'eene signifie un
\par                      retour de chariot.
\par                      La cha\'eene doit \'eatre incluse dans des
\par                      guillemets.
\par 
\par Un exemple s\'e9quence de commande d'initialisation dans S-ICE.DAT est:
\par 
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 INIT = "WIN; WR; WD 1; WC 12; ALTKEY CTRL X;"
\par 
\par }{\f2\fs20 Cet exemple mettra la fen\'eatre Soft-ICE en mode plein \'e9cran, cr\'e9e une fen\'eatre
\par registre, cr\'e9e une fen\'eatre donn\'e9es d'une ligne, cr\'e9e une fen\'eatre code de 12
\par lignes, et change la s\'e9quence de touches de d\'e9marrage en CTRL X.
\par 
\par L'exemple S-ICE.DAT
\par 
\par Un exemple de fichier d'initialisation S-ICE.DAT est inclus sur la disquette
\par de distribution. Cet exemple affecte les touches de fonction
\par 
\par de la m\'eame fa\'e7on que les touches de fonction dans le d\'e9bugger Microsoft
\par CodeView.
\par 
\par Cet exemple S-ICE.DAT peut aussi \'eatre employ\'e9 tel quel pour le didacticiel
\par du chapitre 3.
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page   {\*\bkmkstart _Toc480604307}CHAPITRE 7
{\*\bkmkend _Toc480604307}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2 D\'e9bugging Symbolique et Niveau source
\par    7.1 Introduction
\par    7.2 Pr\'e9paration pour d\'e9bugging symbolique ou source
\par    7.2.1 Pr\'e9paration pour d\'e9bugging symbolique seulement
\par    7.2.2 Pr\'e9paration pour d\'e9bugging symbolique et source
\par    7.3 R\'e9servation de m\'e9moire pour le fichier source et les symboles
\par    7.4 Chargement des programmes et des fichiers symboles
\par    7.5 D\'e9bugging avec des symboles
\par    7.6 D\'e9bugging avec source
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604308}7.1 Introduction{\*\bkmkend _Toc480604308}

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 Soft-ICE peut charger des programmes, des tables de symboles et des fichiers
\par source pour un d\'e9bugging am\'e9lior\'e9. Le d\'e9bugging symbolique vous permet de
\par positionner des points d'arr\'eat et des variables de r\'e9f\'e9rence avec des
\par noms de symboles plut\'f4t qu'en pr\'e9cisant des adresses num\'e9riques. Le d\'e9bugging
\par niveau source vous permet d'avancer dans votre programme au niveau du code
\par source plut\'f4t que dans le code assembl\'e9.
\par 
\par Les num\'e9ros de ligne du source et les informations de symboles sont extraits
\par du fichier "MAP" de linkage.
\par Le fichier .MAP doit \'eatre compatible avec le linker Microsoft version
\par 3.60 ou sup\'e9rieur.
\par 
\par Les fichiers source et symboles sont stck\'e9s dans la m\'e9moire \'e9tendue. Vous
\par devez avoir suffisament de m\'e9moire \'e9tendue pour les fichiers source et
\par symboles. Les fichiers source ne sont pas charg\'e9s depuis le disque comme dans
\par beaucoup de d\'e9buggers. Cela permet \'e0 Soft-ICE de fournir un syst\'e8me complet de
\par d\'e9bugging niveau source, vous pouvez d\'e9bugger des T&SR, des routines
\par d'interruption et d'autres syst\'e8mes de code niveau source.
\par 
\par Note:
\par Vous ne pouvez pas utiliser le d\'e9bugging symbolique ou niveau source si
\par Soft-ICE n'a pas \'e9t\'e9 charg\'e9 comme pilote de p\'e9riph\'e9rique dans CONFIG.SYS.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604309}7.2 Pr\'e9paration pour d\'e9
bugging symbolique ou source{\*\bkmkend _Toc480604309}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 Avant de d\'e9bugger un programme avec des symboles ou un source vous devez cr\'e9er
\par un fichier de symbole. C'est un fichier binaire qui contient l'information de
\par num\'e9ros de ligne et de symboles dans un format que Soft-ICE peut comprendre.
\par Ce fichier est cr\'e9\'e9 avec l'utilitaire MSYM.EXE. MSYM.EXE lit dans votre 
\par fichier .MAP pour cr\'e9er un fichier de symbole avec l'extension (.SYM).
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604310}7.2.1 Pr\'e9paration pour d\'e9
bugging symbolique seulement{\*\bkmkend _Toc480604310}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Pour pr\'e9parer un programme pour un d\'e9bugging symbolique seulement,
\par vous devez suivre les \'e9tapes suivantes:
\par 
\par    1. Compiler ou assembler votre programme.
\par    2. Linker votre programme avec les commutateurs adapt\'e9s
\par         pour cr\'e9er le fichier .MAP qui contient une liste
\par         des symboles publics. Si vous utilisez le linker
\par         Microsoft, le commutateur \'e0 employer est /MA.
\par         Ce fichier doit \'eatre identique au fichier .MAP
\par         produit par le linker Microsoft, version 3.60 ou
\par         sup\'e9rieure.
\par    3. Cr\'e9er un fichier .SYM en lan\'e7ant MSYM.EXE. La
\par         syntaxe pour utiliser MSYM.EXE est:
\par         MSYM nom-programme [.extension]
\par       Si l'extension n'est pas indiqu\'e9e MSYM suppose
\par       que l'extension est .MAP. MSYM lit dans un fichier
\par       MAP et \'e9crit dans un fichier symbole. Le fichier
\par       symbole a le nom nom-programme.SYM.
\par 
\par Note:
\par Avant de compiler ou d'assembler votre programme vous pouvez vouloir rendre
\par un certain nombre de symboles publics. Seuls les symboles publics sont
\par support\'e9s avec le d\'e9bugging symbolique de Soft-ICE. La m\'e9thode pour rendre une
\par variable ou une \'e9tiquette publique varie, en fonction du langage que vous
\par utilisez.
\par 
\par En assembleur 8086, employez simplement la directive PUBLIQUE suivie par les
\par symboles locaux que vous d\'e9sirez rendre publics. Par exemple:
\par 
\par   PUBLIC FOO, LOOP1, STATUT
\par 
\par En langage C, tous les noms de proc\'e9dure et les variables statiques d\'e9finis
\par hors d'un bloc sont publics.
\par 
\par Pour autres langages, r\'e9f\'e9rez-vous au manuel de votre langage pour des d\'e9tails.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604311}7.2.2 Pr\'e9paration pour d\'e9
bugging symbolique et source{\*\bkmkend _Toc480604311}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Pour pr\'e9parer un programme pour le d\'e9bugging symbolique et source, vous devez
\par suivre les \'e9tapes suivantes:
\par 
\par    1. Compiler ou assembler chaque module que vous d\'e9sirez
\par         d\'e9bugger au niveau source avec le commutateur
\par         appropri\'e9 pour mettre les informations de num\'e9ros
\par         de ligne dans les fichiers objets. Avec les langages
\par         Microsoft langages vous pouvez employer les commutateur
\par         /Zi ou /Zd. Vous pouvez ne pas vouloir faire cela
\par         avec tous les fichiers, parce que les tailles combin\'e9es
\par         du fichier de symbole et de tous les fichiers source
\par         compil\'e9s avec ces commutateurs doivent rentrer dans la
\par         m\'e9moire \'e9tendue que vous avez r\'e9serv\'e9e avec le commutateur
\par         /SYM dans CONFIG.SYS.
\par     2.  Linker votre programme avec les commutateurs propres \'e0 cr\'e9er
\par         un fichier .MAP qui contient les num\'e9ros de ligne du
\par         source et une liste des symboles publics. Si vous utilisez
\par         le linker Microsoft, les commutateurs \'e0 employer sont /LI et /MA
\par         Le fichier .MAP doit \'eatre identique au fichier .MAP produit
\par         par le linker Microsoft, version 3.60 ou sup\'e9rieure.
\par    3. Cr\'e9er un fichier .SYM en lan\'e7ant MSYM.EXE. La syntaxe pour
\par         utiliser MSYM.EXE est:
\par         MSYM nom-programme [.extension]
\par  Si l'extension n'est pas pr\'e9cis\'e9e MSYM suppose que l'extension est .MAP.
\par  MSYM lit dans un fichier .MAP et \'e9crit dans un fichier symbole. Le fichier
\par  symbole a le nom nom-programme.SYM.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604312}7.3 R\'e9servation de m\'e9
moire pour le fichier source et les symboles{\*\bkmkend _Toc480604312}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Avant de charger des programmes, des fichiers source et des fichiers de
\par symboles vous devez r\'e9server de la m\'e9moire \'e9tendue pour eux. La m\'e9moire \'e9tendue
\par est r\'e9serv\'e9e quand vous chargez Soft-ICE dans CONFIG.SYS. Avant de r\'e9server
\par la m\'e9moire \'e9tendue vous devez ajouter les tailles du fichier .SYM et de tous
\par les fichiers source que vous voulez charger. Vous devez r\'e9server au moins
\par autant de m\'e9moire \'e9tendue.
\par Vous devez employer le commutateur de chargement /SYM en chargeant S-ICE.EXE.
\par Une exemple de ligne dans CONFIG.SYS pour charger Soft-ICE et r\'e9server de la
\par place pour les fichiers source et symboles est:
\par 
\par       DEVICE = S-ICE.EXE / SYM 1024
\par 
\par Cet exemple charge Soft-ICE en m\'e9moire \'e9tendue et r\'e9serve 1 m\'e9ga-octet de
\par m\'e9moire pour les fichiers source et symboles. Voir la section 6.3 (Chargement
\par de Soft-ICE comme un pilote de p\'e9riph\'e9rique) pour plus de d\'e9tails sur les
\par r\'e9servations de m\'e9moire.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604313}
7.4 Chargement des Programmes et des fichiers symboles{\*\bkmkend _Toc480604313}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par L'utilitaire LDR.EXE est employ\'e9 pour charger des programmes, des fichiers de
\par symboles et des fichiers source. Pour faire du d\'e9bugging symbolique sur des
\par programmes d'application et des T&SR vous devez utiliser LDR.EXE pour charger
\par le programme, les fichiers source et les symboles en une seule op\'e9ration.
\par Pour d\'e9bugger des pilotes de p\'e9riph\'e9riques, des ROMS et autres composantes du
\par syst\'e8me vous emploirez LDR.EXE pour charger seulement le fichier symbole et 
\par les fichiers source.
\par 
\par La syntaxe pour LDR.EXE est:
\par 
\par LDR nom-programme | nom-programme.SYM | nom-programme.extension
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604314}7.4.1 Chargement d'un programme, de symboles et de source
{\*\bkmkend _Toc480604314}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Pour charger votre programme, les fichiers source les symboles en une seule
\par op\'e9ration, vous devez employer LDR.EXE sous cette forme:
\par 
\par    LDR nom-programme
\par 
\par Notez que nom-programme ne doit pas avoir d'extension. Si aucune extension
\par n'est fournie, alors LDR.EXE proc\'e8dera ainsi:
\par     1. Il charge nom-programme.SYM en m\'e9moire \'e9tendue
\par     2. Il charge les fichiers source en m\'e9moire \'e9tendue. Cette
\par         \'e9tape n'a lieu que s'il y a des enregistrements de source dans le
\par         fichier .SYM.
\par     3. Il charge nom-programme.EXE en m\'e9moire \'e0 l'emplacement o\'f9 il aurait
\par         \'e9t\'e9 charg\'e9 s'il avait \'e9t\'e9 charg\'e9 directement du prompt DOS.
\par     4. Il active Soft-ICE avec le pointeur d'instruction sur la premi\'e8re
\par         instruction de votre programme. S'il s'agit d'un programme en C et si
\par         le source est charg\'e9 pour le fichier contenant _MAIN, alors le source
\par         de ce fichier sera visible dans la fen\'eatre code.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604315}7.4.2 Charger seulement les fichiers source et symboles
{\*\bkmkend _Toc480604315}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Si vous d\'e9sirez charger seulement les fichiers source et symboles (pour
\par d\'e9bugger un pilote de p\'e9riph\'e9rique par exemple), vous devez employer LDR.EXE
\par sous la forme suivante:
\par 
\par    LDR nom-programme.SYM
\par 
\par Notez que the l'extension .SYM est pr\'e9cis\'e9e. Cela chargera le fichier .SYM et
\par les fichiers source en m\'e9moire \'e9tendue. Quand les symboles sont charg\'e9s par
\par cette m\'e9thode vos symboles de pilote de p\'e9riph\'e9rique ou de programme sont
\par suppos\'e9s \'eatre r\'e9f\'e9renc\'e9s \'e0 0:0. Comme c'est rarement le cas vous souhaiterez
\par utiliser la commande Soft-ICE SYMLOC pour reloger les symboles.
\par Voir la description de la commande SYMLOC dans la section 5.10 pour une
\par description compl\'e8te.
\par 
\par Un exemple de chargement d'un fichier symbole appel\'e9 DRIVER.SYM:
\par 
\par   LDR DRIVER.SYM
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604316}7.4.3 Chargement d'un programme sans symboles ni source
{\*\bkmkend _Toc480604316}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Pour charger un fichier programme sans charger les symboles associ\'e9s vous
\par devez employer LDR.EXE sous la forme:
\par 
\par   LDR nom-programme.extension
\par 
\par Notez que l'extension du fichier est pr\'e9sente. L'extension du fichier est .EXE
\par ou .COM. Quand une extension de fichier est pr\'e9cis\'e9e LDR.EXE charge le
\par programme et active Soft-ICE avec le pointeur d'instructions sur la premi\'e8re
\par instruction du programme.
\par Un exemple de chargement d'un programme avec des symboles et le source:
\par 
\par  LDR TEST.EXE
\par 
\par Notes:
\par LDR.EXE sauve automatiquement une copie de la table des vecteurs d'interruption
\par quand il charge votre programme.  Cel\'e0 \'e9quivaut \'e0 ex\'e9cuter la commande VECS S.
\par Si vous \'eates amen\'e9s \'e0 sortir de votre programme avant son ach\'e8vement, vous
\par devez faire un EXIT R pour sortir du programme et restaurer la table des
\par vecteurs d'interrumption.
\par 
\par L'utilisation de LDR.EXE pour charger seulement le nom-programme.EXE est 
\par souvent utile pour red\'e9marrer votre programme tandis que vous \'eates au milieu 
\par d'une s\'e9ance de d\'e9bugging. Pour red\'e9marrer, la commande EXIT R pour terminer 
\par la s\'e9ance actuelle. Utilisez alors LDR.EXE pour recharger votre fichier .EXE.
\par Les symboles: le source ne doit pas \'eatre charg\'e9 puisqu'il reste en m\'e9moire
\par \'e9tendue.
\par 
\par Si LDR.EXE vous affiche le message "Plus de place au chargement des
\par informations de symboles", cela signifie que vous ne r\'e9servez pas assez de
\par m\'e9moire \'e9tendue avec le commutateur /SYM dans CONFIG.SYS. Si LDR.EXE ne
\par trouve pas vos fichiers source dans le m\'eame r\'e9pertoire que le programme que
\par vous chargez, LDR.EXE vous demandera les noms de chemin o\'f9 il peut trouver
\par les fichiers source. Si vous avez des fichiers source dans plusieurs
\par r\'e9pertoires ou si vous chargez un programme fr\'e9quemment cela devient g\'e9nant.
\par Vous pouvez \'e9liminer ce prompt en utilisant la variable d'environnement DOS
\par SRC. LDR.EXE utilise cette variable d'environnement pour trouver les fichiers
\par source avant de demander \'e0 l'utilisateur.
\par La syntaxe pour positionner la variable d'environnement au prompt du DOS est:
\par 
\par    SET SRC = r\'e9pertoire;r\'e9pertoire;...;r\'e9pertoire
\par 
\par Chacun des r\'e9pertoires pr\'e9cis\'e9 sera explor\'e9 avant de demander \'e0 l'utilisateur.
\par 
\par Limitations:
\par Soft-ICE ne supporte les symboles que pour un programme \'e0 la fois. Si vous
\par chargez un nouveau fichier .SYM, le fichier existant est d\'e9truit.
\par Soft-ICE ne suit pas les overlays ou le mouvement des segments de Microsoft
\par Windows.
\par Soft-ICE reconna\'eet les symboles publics et les num\'e9ros de ligne seulement.
\par Il ne supporte pas les variables locales.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604317}7.5 D\'e9bugging avec des symboles
{\*\bkmkend _Toc480604317}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Apr\'e8s avoir charg\'e9 votre programme et votre fichier .SYM vous pouvez commencer
\par le d\'e9bugging symbolique de votre programme. En g\'e9n\'e9ral un symbole peut \'eatre
\par utilis\'e9 dans toute commande \'e0 la place d'une adresse.
\par 
\par Les symboles sont aussi utilis\'e9s par certaines commandes Soft-ICE quand des
\par adresses sont affich\'e9es.
\par Par exemple, la commande U affiche les noms de symbole ou les labels et les
\par proc\'e9dures comme il les rencontre.
\par Il y a deux commandes qui sont tr\'e9s utiles quand vous faites du d\'e9bugging
\par symbolique:
\par    * SYM -- Utilisez la commande SYM pour obtenir une liste
\par        des noms de symboles et de leurs valeurs, ou pour
\par        changer la valeur d'un symbole.
\par    * SYMLOC -- Utilisez la commande SYMLOC pour reloger la
\par        base de tous vos symboles. Vous utiliserez la commande
\par        SYMLOC quand:
\par        1.  Vous chargez des symboles pour un pilote de p\'e9riph\'e9rique
\par        2.  Vous chargez des symboles pour un T&SR qui a d\'e9j\'e0 \'e9t\'e9 charg\'e9
\par        3.  Votre programme se d\'e9place lui-m\'eame \'e0 un emplacement autre que
\par             son emplacement original.
\par Voir la section 5. 10 pour une description compl\'e8te de ces commandes.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604318}7.6 D\'e9bugging avec source
{\*\bkmkend _Toc480604318}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Quand les fichiers source sont charg\'e9s, Soft-ICE vous permet de visualiser et
\par de vous d\'e9placer dans le code source comme quand vous d\'e9buggez. Soft-ICE offre
\par deux modes diff\'e9rents de d\'e9bugging niveau source: le mode mixte et le mode
\par source. Utilisez la commande SRC pour basculer entre ces deux modes.
\par Le mode mixte affiche les lignes de source et le langage d'assemblage produit
\par par ces lignes de source intercall\'e9s sur l'affichage. Le mode mixte est utile
\par quand vous devez d\'e9bugger au niveau assembleur, mais utilise les lignes de
\par source comme r\'e9f\'e9rence. Le mode mixte est permis que la fen\'eatre de code soit
\par visible ou non.
\par 
\par Le mode source ne montre que les lignes source sur l'affichage. Le d\'e9bugging
\par niveau de source n\'e9cessite que la fen\'eatre de code soit visible.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604319}7.6.1 Utilisation des num\'e9ros de ligne
{\*\bkmkend _Toc480604319}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Les num\'e9ros de ligne peuvent \'eatre utilis\'e9s \'e0 la place des adresses dans
\par plusieurs commandes. Pour diff\'e9rencier un num\'e9ro de ligne d'une adresse
\par r\'e9elle, placez un . (un point) avant le nombre. Par exemple, pour positionner
\par un point d'arr\'eat d'ex\'e9cution \'e0 la ligne de source 45, entrez:
\par 
\par   BPX .450
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604320}7.6.2 Utilisation du mode source dans la fen\'eatre code
{\*\bkmkend _Toc480604320}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par La fen\'eatre code doit \'eatre visible pour basculer en mode source. Si elle n'est
\par pas visible, employez la commande WC pour la rendre visible. Une fois que vous
\par \'eates en mode source vous pouvez employer les commandes Soft-ICE pour changer
\par vers un fichier source diff\'e9rent, visualiser un source \'e0 tout emplacement dans
\par le fichier, se d\'e9placer \'e0 travers le fichier, rechercher des cha\'eenes dans le
\par fichier, et positionner des points d'arr\'eat dans le fichier. Pour une
\par description compl\'e8te des commandes suivantes voir leurs descriptions dans les
\par chapitres 4 et 5.  La liste suivante est un bref aper\'e7u des commandes qui sont
\par utiles quand vous d\'e9buggez du code source:
\par     * Rendre la fen\'eatre code visible (si elle ne l'est pas d\'e9j\'e0)
\par         avec la commande WC.
\par     * Basculer entre les modes source, mixte, et code avec la
\par         commande SRC. Pour basculer entre les modes entrez:
\par 
\par            SRC
\par 
\par     * Placer un fichier source dans la fen\'eatre code (s'il n'y est
\par         pas d\'e9j\'e0) avec la commande FILE. Par exemple pour changer
\par         du fichier actuel pour le fichier MAIN.C entrez:
\par 
\par             FILE MAIN.C
\par 
\par 
\par     * Afficher le source \'e0 un emplacement sp\'e9cifique
\par         dans le fichier avec la commande U. Pour changer
\par         l'affichage \'e0 un num\'e9ro de ligne sp\'e9cifique ou
\par         une adresse m\'e9moire utilisez la commande U. Vous
\par         pouvez pr\'e9ciser l'adresse actuelle ou un num\'e9ro
\par         de ligne comme param\'e8tre de la commande. Par 
\par         exemple, pour voir le source dans la fen\'eatre de
\par         code en commen\'e7ant \'e0 la ligne de source 450 entrez:
\par 
\par              U .450
\par 
\par     * Trouver l'instruction actuelle dans la fen\'eatre code
\par         avec la commande . (le point).
\par     * Rechercher une cha\'eene de caract\'e8res particuli\'e8re avec
\par         la commande S. Par exemple, pour chercher la cha\'eene
\par         "Bonjour Monde" en commen\'e7ant \'e0 ligne 100 dans le
\par         fichier source actuel entrez:
\par 
\par             SS 100 "Bonjour Monde"
\par 
\par     * D\'e9placer le curseur vers la fen\'eatre de code
\par         (s'il n'y est pas d\'e9j\'e0) avec la commande EC.
\par     * Faire d\'e9filer le source avec les touches haut,
\par         bas, PaqeUp, PageDn.
\par     * Postionner des points d'arr\'eat avec la commande
\par         BPX. Placer simplement le curseur sur la ligne
\par         de source o\'f9 vous d\'e9sirez positionner le point
\par         d'arr\'eat, entrez alors:
\par 
\par            BPX
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page {\*\bkmkstart _Toc480604321}CHAPITRE 8
{\*\bkmkend _Toc480604321}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2 Le support de la m\'e9moire pagin\'e9e
\par    8.1 Introduction
\par    8.2 Configuration de l'environnement EMM
\par    8.2.1 Pages EMM par d\'e9faut
\par    8.2.2 Personnalisation de la carte des pages EMM
\par    8.2.2.1 Inclure et Exclure des zones de EMM
\par    8.3 Autres caract\'e9ristiques de EMM
\par    8.3.1 Accroitre la M\'e9moire Conventionnelle
\par    8.3.2 Localisation Automatique du cadre de page
\par    8.4 D\'e9bugging sous EMM
\par }{\f2\fs20 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604322}8.1 Introduction
{\*\bkmkend _Toc480604322}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE a un gestionnaire de m\'e9moire pagin\'e9e dans son noyau. Le gestionnaire
\par de m\'e9moire pagin\'e9e de soft-ICE  supporte les sp\'e9cifications Lotus-Intel-
\par Microsoft 4.0. Cette caract\'e9ristique de Soft-ICE est utile si vous utilisez des
\par programmes qui supportent les sp\'e9cifications EMM, ou si vous devez
\par "backfiller" votre m\'e9moire conventionnelle pour l'\'e9tendre au-del\'e0 de 640K.
\par 
\par D'autres programmes de contr\'f4le 386 qui fournissent des possibilit\'e9s EMM
\par (tels que QEMM ou 386MAX) ne coexisteront pas avec Soft-ICE. Si vous utilisez
\par ces programmes pour un support EMM ou du "backfilling", vous pouvez employer
\par le gestionnaire EMM de Soft-ICE \'e0 leur place.
\par 
\par Activer les capacit\'e9s EMM de Soft-ICE entra\'eene les mesures suivantes:
\par    1. Configure l'environnement de m\'e9moire
\par       avec l'utilitaire EMMSETUP.EXE.
\par       Cette utilitaire modifie S-ICE.EXE
\par       avec la carte des pages EMM d\'e9sir\'e9e.
\par    2. Ajouter le commutateur /EMM \'e0 votre
\par       ligne S-ICE.EXE dans votre CONFIG.SYS.
\par       Cela r\'e9serve une fraction de la m\'e9moire
\par       \'e9tendue pour la m\'e9moire pagin\'e9e.
\par       Une ligne d'exemple de CONFIG.SYS
\par       qui r\'e9serve de la m\'e9moire pour EMM:
\par            DEVICE = S-ICE.EXE /EMM 2048
\par       Cela r\'e9servera 2 m\'e9ga-octets de m\'e9moire
\par       \'e9tendue pour l'usage de EMM. Voir la
\par       section 6.3 (Chargement Soft-ICE comme un
\par       Pilote de p\'e9riph\'e9rique) pour des d\'e9tails de
\par       l'installation de Soft-ICE dans CONFIG.SYS.
\par    3. Rebootez votre syst\'e8me.
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604323}
8.2 Configuration de l'Environnement EMM{\*\bkmkend _Toc480604323}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Avant d'installer S-ICE.EXE avec le commutateur /EMM dans CONFIG.SYS,
\par vous devez lancer EMMSETUP.EXE pour configurer l'environnement EMM 4.00.
\par Ce proc\'e9d\'e9 de configuration vous permet de s\'e9lectionner quelles portions
\par de m\'e9moire vous aimeriez rendre disponible comme pages EMM 4.0. Lancer
\par EMMSETUP.EXE est hautement recommand\'e9 si vous utilisez des programmes qui
\par prennent avantage des sp\'e9cifications EMM 4.0.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604324}8.2.1 Pages EMM par D\'e9faut{\*\bkmkend _Toc480604324}

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Par d\'e9faut, S-ICE.EXE avec le commutateur /EMM est pre-configur\'e9 pour
\par permettre des pages EMM 4.0 dans les zones de m\'e9moire suivantes:
\par    
\par    * Les 640K inf\'e9rieurs (\'e0 l'exception des 1er 64K)
\par    * Les 64K commen\'e7ant \'e0 DDH
\par Vous pouvez vouloir reconfigurer pour l'une des raisons suivantes:
\par    * Vous pouvez avoir un pilote tel qu'un r\'e9seau qui utilise la
\par         zone m\'e9moire de D000H.
\par    * Vous pouvez vouloir remplir plus de trous au-dessus de 640K
\par         avec des pages EMM. Cela accro\'eetra la performance et la
\par         convivialit\'e9 de programmes comme Microsoft Windows. Pour
\par         obtenir la performance maximum de Microsoft Windows, vous
\par         devriez remplir chaque page disponible avec de la m\'e9moire
\par         pagin\'e9e accrue.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604325}8.2.2 Personnalisation de la carte des pages EMM
{\*\bkmkend _Toc480604325}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Pour configurer la carte EMM vous devez employer l'utilitaire EMMSETUP.EXE.
\par EMMSETUP.EXE permet de modifier la carte des page, puis met \'e0 jour S-ICE.EXE
\par avec les changements.
\par 
\par EMMSETUP fait sa meilleure supposition en configuration automatiquement de la
\par carte EMM. EMMSETUP essayera de remplir le plus d'espace possible avec des
\par pages disponibles  autour des cartes de vid\'e9o et des ROMS. Si sa supposition
\par n'est pas bien assez ou de ne vous satisfait pas tout \'e0 fait, vous pouvez
\par l'outrepasser. L'outrepasser peut \'eatre n\'e9cessaire si vous avez un r\'e9seau ou
\par un adaptateur vid\'e9o sp\'e9cial.
\par Pour configurer la carte EMM entrez:
\par 
\par    EMMSETUP
\par 
\par EMMSETUP affiche une matrice de pages de 16K disponibles dans le m\'e9ga-octet
\par inf\'e9rieur. La matrice est partag\'e9 en 16 colonnes, chacun repr\'e9sentant 64K
\par (de 0 \'e0 10000H). Il y a 4 rang\'e9es repr\'e9sentant les quatre pages de 16K dans
\par chaque r\'e9gion de 64K.
\par 
\par Chaque bloc de la matrice peut contenir un E, un X, un R ou un V. Les blocs
\par contenant un E sont disponibles comme pages EMM; les blocs contenant un X
\par ne le sont pas. Les blocs contenant un R sont des zones de m\'e9moire qui ont
\par \'e9t\'e9 identifi\'e9es par EMMSETUP comme zones de ROM. Vous pouvez marquer ces
\par zones avec un E si vous le d\'e9sirez, cependant, cela devrait seulement \'eatre
\par fait si la ROM n'est jamais acc\'e9d\'e9e. Les blocs contenant un V sont identifi\'e9s
\par comme m\'e9moire vid\'e9o. Nous avons fait des suppositions tr\'e8s larges sur la m\'e9moire
\par vid\'e9o. Votre carte vid\'e9o ne devrait pas prendre autant que nous avons r\'e9serv\'e9.
\par Vous pouvez outrepasser la m\'e9moire qui semble contenir des V inutiles si vous
\par le d\'e9sirez.
\par 
\par Si vous \'eates satisfait des suppositions D'EMMSETUP, pressez F10 et S-ICE.EXE
\par sera modifi\'e9 avec ces param\'e8tres.  Vous devez rebooter avant que tout
\par changement fait \'e0 S-ICE.EXE prenne effet. Si vous d\'e9sirez modifier les
\par suppositions D'EMMSETUP, le faire maintenant.
\par 
\par }\pard\plain \s4\ql \li1416\ri0\keepn\widctlpar\faauto\outlinelevel3\rin0\lin1416\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {8.2.2.1 Inclure et Exclure des zones de EMM
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Pour inclure une zone comme m\'e9moire EMM 4.0 guidez simplement le curseur sur
\par le bloc d\'e9sir\'e9, tapez alors E. Inversement, pour exclure une zone de la m\'e9moire
\par EMM 4.0, guidez le curseur sur le bloc et tapez X. Quand vous \'eates satisfaits
\par de vos changements, pressez F10 pour sortir du programme. Tous les changements
\par sont automatiquement sauv\'e9s dans le fichier S-ICE.EXE.  Si vous d\'e9sirez sortir
\par sans modifier S-ICE.EXE pressez ESC.
\par 
\par Vous devez rebooter avant que les changements faits \'e0 S-ICE.EXE ne prennent
\par effet.
\par 
\par Quand vous incluez de la m\'e9moire sup\'e9rieure gardez \'e0 l'esprit les faits
\par suivants:
\par    * CGA occupe de B800H \'e0 C000H.
\par    * MDA occupe de B000H \'e0 B100H.
\par    * Les cartes Hercule occupent de B000 \'e0 C000H.
\par    * EGA occupe de A000H \'e0 C000H et de C000H \'e0 C400H.
\par    * VGA (sur carte m\'e8re) occupe de A000H \'e0 C000H.
\par    * VGA (sur carte d'extention) occupe de A000H \'e0 C000H et C000H \'e0 C800H.
\par    * PS / 2 syst\'e8me en ROM occupe de E000H \'e0 10000H.
\par    * PS / 2 ESDI en ROM occupe de CC00H \'e0 D000H
\par    * La plupart des Roms de compatibles AT occupent de F000H \'e0 10000H.
\par    * Les syst\'e8mes Compaq, les cartes m\'e8res Micronix et beaucoup
\par      de carte m\'e8res Chips et Technologies d\'e9placent la ROM EGA/VGA
\par       \'e0 E000H. Cependant ils occupent encore la r\'e9gion C000H.
\par    * Les r\'e9seaux 'Token Ring' occupent habituellement de CC00H \'e0 E000H.
\par   * Beaucoup de r\'e9seaux occupent des r\'e9gions de m\'e9moire dans la zone D000H.
\par Les principes ci-dessus sont valables pour des cartes 'normales', beaucoup
\par d'utilisations par les fabricants d'ordinateurs et par les fabricants de
\par cartes diff\'e8rent.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604326}8.3 Autres caract\'e9ristiques de l'EMM
{\*\bkmkend _Toc480604326}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par S-ICE.EXE avec le commutateur /EMM a deux caract\'e9ristiques qui sont
\par automatiquement activ\'e9es suivant votre configuration syst\'e8me. Ces
\par caract\'e9ristiques sont: le 'backfilling' et le relogement du cadre de page.
\par 
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604327}8.3.1 Accroitre la M\'e9moire Conventionnelle
{\*\bkmkend _Toc480604327}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par La m\'e9moire syst\'e8me peut automatiquement \'eatre 'backfilled' jusqu' a la
\par premi\'e8re page non-mappable. Cela signifie que l'on commence \'e0 chercher des
\par E contigus \'e0 partir de l'emplacement 1000, et qu'on continue jusqu'\'e0 trouver
\par le premier E non-contigu. Si les E contigus vont au-del\'e0 de la m\'e9moire de base
\par de votre syst\'e8me, la m\'e9moire est 'backfilled' jusqu'au premier R, V, ou X qui
\par est trouv\'e9.
\par 
\par Le b\'e9n\'e9fice de 'backfilling' est que vous pouvez accroitre la quantit\'e9 de
\par m\'e9moire utilisable de syst\'e8me \'e0 plus de 640K.  La m\'e9moire 'backfilled' est
\par disponible sous DOS. Si vous ne voulez pas de m\'e9moire 'backfilled', employez
\par EMMSETUP pour rendre les pages non-mappable (X) \'e0 l'endroit ou vous d\'e9sirez
\par que se termine votre m\'e9moire syst\'e8me.
\par 
\par Note:
\par Les syst\'e8mes uniquement monochromes (MDA) peuvent 'backfill' jusqu'\'e0 B000H
\par pour ajouter un suppl\'e9ment de 64K \'e0 la m\'e9moire conventionnelle; les syst\'e8mes
\par CGA peut \'eatre 'backfilled' jusqu'\'e0 B800, pour ajouter un suppl\'e9ment de 96K \'e0
\par la m\'e9moire conventionnelle. Les syst\'e8mes EGA et VGA peuvent \'eatre 'backfilled'
\par seulement si aucun programme graphique ne doit \'eatrre ex\'e9cut\'e9.
\par 
\par Avertissement:
\par Si la m\'e9moire est 'backfilled', NE D\'c9CHARGEZ PAS Soft-ICE. Le faire
\par planterait votre syst\'e8me.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604328}8.3.2 Localisation Automatique du cadre de page
{\*\bkmkend _Toc480604328}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Beaucoup de programmes connus requi\'e8rent un cadre de page de 64K inemploy\'e9
\par comme m\'e9moire DOS normale. C'est normalement situ\'e9 au-dessus de la zone
\par de la m\'e9moire vid\'e9o. Cependant dans certains syst\'e8mes il y a aucune zone de
\par 64K contigus pour placer le cadre de page. Dans ce cas, S-ICE.EXE 'vole'
\par 4 pages mappables en m\'e9moire basse. Le r\'e9sultat net est que la m\'e9moire DOS
\par r\'e9tr\'e9cit de 64K.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604329}8.4 D\'e9bugging sous EMM
{\*\bkmkend _Toc480604329}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Un point d'arr\'eat domaine ou un point d'arr\'eat m\'e9moire qui est dans une zone
\par EMM restera \'e0 cette adresse que la page soit mapp\'e9e ou non.
\par 
\par Quand vous d\'e9buggez des programmes EMM, la commande EMMMAP peut aussi \'eatre
\par tr\'e8s utile. Voir la section 5.6 pour plus d'information.
\par 
\par Les commandes D, E, S, F, et C peuvent \'eatre employ\'e9s voir ou modifier nimporte
\par quelle page EMM affect\'e9e. La page ne doit pas \'e0 \'eatre actuellement mapp\'e9e.
\par La syntaxe de ces commandes est similaire \'e0 celle des commandes qui \'e9taient
\par employ\'e9es pour les pages non-EMM, \'e0 l' exception de la suivante:
\par      * Dans les commandes D, E, S, et F, la partie adresse
\par         de la commande doit \'eatre pr\'e9cis\'e9e de la fa\'e7on suivante:
\par         Hhandle# Ppage# d\'e9calage
\par         o\'f9 handle est un nombre pr\'e9cisant quel handle EMM employer,
\par         page est un nombre pr\'e9cisant quelle page EMM \'e0 employer,
\par         d\'e9calage est un nombre de 0 \'e0 4000H, pr\'e9cisant le d\'e9calage
\par         par rapport au d\'e9but la page.
\par 
\par Exemple:
\par 
\par    DB H1 P3 0
\par       Cette commande d\'e9chargera les octets de la page 3 du
\par       handle 1, en commen\'e7ant au d\'e9calage 0.
\par 
\par    *  La commande C doit \'eatre pr\'e9cis\'e9e de la fa\'e7on suivante:
\par       }{\f2\fs20\lang2057\langfe1036\langnp2057 C Hhandle# Ppage# offset1 Llength offset2
\par       }{\f2\fs20 O\'f9 handle et page sont comme ci-dessus.
\par       offset1 est un nombre de 0 \'e0 4000H, pr\'e9cisant
\par       le d\'e9calage par rapport au d\'e9but de la page,
\par       o\'f9 le premier bloc de donn\'e9es \'e0 comparer est situ\'e9.
\par       offset2 est un nombre de 0 \'e0 4000H, pr\'e9cisant
\par       le d\'e9calage par rapport au d\'e9but de la page,
\par       o\'f9 le deuxi\'e8me bloc de donn\'e9es \'e0 comparer est situ\'e9.
\par 
\par Exemple:
\par 
\par C H2 P4 00 L10 1000
\par 
\par       Cette commande comparera les 10 premiers octets de m\'e9moire situ\'e9s
\par       au d\'e9calage 0 de la page 4 du handle 2 avec les 10 premiers octets
\par       de m\'e9moire situ\'e9s au d\'e9calage 1000 de la page 4 du handle 2.
\par 
\par Note:  Les emplois suivants des commandes D, E, S, F, et C continueront \'e0
\par employer le handle et la page pr\'e9cis\'e9s en dernier. Pour revenir \'e0 la m\'e9moire
\par conventionnelle, utilisez un des ordres ci-dessus avec un segment pr\'e9cis\'e9
\par dans le champ adresse, par exemple:
\par 
\par          D 0:0
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page   {\*\bkmkstart _Toc480604330}CHAPITRE 9
{\*\bkmkend _Toc480604330}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2 Les domaines de trace arri\'e8re
\par    9.1 Introduction
\par    9.2 Utilisation des domaines de trace arri\'e8re
\par    9.3 Notes sp\'e9ciales
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604331}9.1 Introduction{\*\bkmkend _Toc480604331}

\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE peut enregistrer les informations d'instructions dans un buffer de
\par trace arri\'e8re pendant que votre programme s'ex\'e9cute. Ces instructions peuvent
\par alors \'eatre affich\'e9es apr\'e8s qu'un bug se soit produit. Cela vous permet de
\par remonter en arri\'e8re et de retracer l'action d'un programme pour d\'e9terminer le
\par flux r\'e9el d'instructions pr\'e9c\'e9dant un point d'arr\'eat.
\par 
\par Les informations d'instructions sont recueillies sur des acc\'e8s dans un
\par domaine d'adresse sp\'e9cifi\'e9, plut\'f4t que dans tout le syst\'e8me. Les domaines
\par peuvent \'eatre de 1 octet \'e0 1 m\'e9ga-octet, ainsi, si vous le souhaitez, vous pouvez
\par obtenir une information compl\'e8te sur le syst\'e8me. L'utilisation de domaines
\par sp\'e9cifiques plut\'f4t que recueillir toutes les instructions est utile pour deux
\par raisons:
\par 
\par    1.  Le buffer de trace arri\'e8re n'est pas encombr\'e9e par
\par         des informations qui ne vous int\'e9ressent pas. Par
\par         exemple, vous pouvez ne pas \'eatre int\'e9ress\'e9s par
\par         l'activit\'e9 des interruptions ou l'ex\'e9cution de
\par         MSDOS.
\par    2.  Les domaines de trace arri\'e8re d\'e9gradent les
\par         performances du syst\'e8me lorsqu'ils sont actifs.
\par         En limitant le domaine \'e0 une zone qui vous
\par         int\'e9resse, vous pouvez am\'e9liorer \'e9norm\'e9ment les
\par         performances de votre syst\'e8me.
\par 
\par Soft-ICE a deux m\'e9thodes pour utiliser les instructions dans le buffer de trace
\par arri\'e8re:
\par 
\par    1.  La commande SHOW vous permet d'afficher les instructions du
\par         buffer de trace arri\'e8re. Vous devez pr\'e9ciser de combien
\par         d'instructions vous d\'e9sirez remonter dans le buffer.
\par    2.  La commande TRACE vous permet de remonter et de 'rejouer' les
\par         instructions du buffer de trace arri\'e8re, cette m\'e9thode vous
\par         permet de voir le flux d'instruction dans le contexte
\par         du code source ou du code du programme.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604332}9.2 Utilisation des domaines de trace arri
\'e8re{\*\bkmkend _Toc480604332}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par 
\par Pour employer les domaines de trace arri\'e8re vous devez proc\'e9der ainsi:
\par    1. Affecter un buffer de trace arri\'e8re de la taille d\'e9sir\'e9e en ins\'e9rant
\par         le commutateur /TRA sur la ligne S-ICE.EXE dans CONFIG.SYS.
\par         Par exemple, pour cr\'e9er un buffer de trace arri\'e8re de 100K vous
\par         devez avoir la ligne suivante dans votre fichier CONFIG.SYS:
\par         DEVICE = S-ICE.EXE 100
\par         Un buffer de trace arri\'e8re de 10K est affect\'e9e par d\'e9faut.
\par         Si c'est suffisant pour vos besoins vous ne devez pas
\par         affecter un plus grand buffer.
\par         La taille du buffer d'historique est seulement limit\'e9e par
\par         la quantit\'e9 de m\'e9moire \'e9tendue disponible.
\par    2.  Permettre des domaines de trace arri\'e8re en cr\'e9ant un point d'arr\'eat
\par         doamine m\'e9moire avec le verbe T ou TW. Par exemple:
\par         BPR 1000:0 2000:0 T
\par         Les verbes T et TW ne provoquent pas de point d'arr\'eat, mais ils
\par         notent les informations d'instructions qui peuvent \'eatre affich\'e9es
\par         ult\'e9rieurement avec les commandes SHOW ou TRACE.
\par    3.   Positionnez tout autre point d'arr\'eat si vous le d\'e9sirez.
\par    4.   Sortez de Soft-ICE avec la commande X.
\par    5.  Apr\'e8s qu'un point d'arr\'eat se soit produit, ou apr\'e8s que vous ayez
\par         activ\'e9 Soft-ICE, vous pouvez afficher les instructions dans le buffer
\par         avec la commande SHOW. Par exemple, pour remonter de 50 instructions
\par         dans le buffer et afficher les instructions entrez:
\par         SHOW 50
\par 
\par    6. Pour 'rejouer' une s\'e9rie d'instructions vous devez
\par       d'abord entrer en mode simulation de trace avec la 
\par       commande TRACE. Pour commencer \'e0 rejouer la s\'e9quence
\par       d'instructions commen\'e7ant 50 instructions en arri\'e8re
\par       dans le buffer entrez:
\par 
\par       TRACE 50
\par    7. Apr\'e8s \'eatre entr\'e9 en mode simulation de trace, vous
\par       pouvez tracer la s\'e9quence d'instructions en utilisant
\par       les commandes XT, XP, ou XG.  Cela vous permet de
\par       retrouver le flux de programme. Par exemple, vous
\par       pouvez ex\'e9cuter pas \'e0 pas la s\'e9quence d'instructions
\par       dans le buffer, en commen\'e7ant \'e0 l'instruction pr\'e9cis\'e9e
\par       par la commande TRACE en entrant:
\par 
\par       XT
\par       XT
\par       .
\par       .
\par       .
\par       XT
\par 
\par       La commande XT trace pas \'e0 pas dans le buffer
\par       de trace arri\'e8re. La commande XP trace dans le
\par       buffer de trace arri\'e8re. La commande XG va \'e0
\par       une adresse dans le buffer de trace arri\'e8re.
\par    8. Pour sortir du mode simulation de trace entrez:
\par 
\par       TRACE OFF
\par    9. Pour remettre \'e0 0 le buffer de trace arri\'e8re,
\par       utilisez la commande X.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604333}9.3 Notes sp\'e9ciales
{\*\bkmkend _Toc480604333}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Lorsque vous \'eatres en mode simulation de trace, beaucoup de commandes Soft-ICE
\par fonctionnent comme d'habitude, y compris lorsqu'on affichez la carte m\'e9moire
\par ou lorsque l'on \'e9dite des donn\'e9es. Les exceptions sont:
\par 
\par     1. L'information de registre n'est pas sauv\'e9e dans
\par         le buffer de trace arri\'e8re, donc les valeurs
\par         des registres ne changent pas lorsque vous tracez
\par         dans le buffer, \'e0 l'exception de CS et de IP.
\par     2. Les commandes qui provoquent normalement la sortie
\par         de Soft-ICE ne fonctionnent pas dans le mode
\par         simulation de trace. Ce sont X, T, P, G, EXIT.
\par 
\par Pendant que vous lisez des instructions dans le buffer de trace arri\'e8re avec
\par les commandes TRACE et SHOW, vous pouvez constater des singularit\'e9s dans
\par l'ex\'e9cution des instructions. Elles sont caus\'e9es par des sauts dans et hors du
\par domaine sp\'e9cifi\'e9. Ils surviennent habituellement lors des sauts, appels,
\par retours et points d'entr\'e9e. Quand vous avez un probl\'e8me de plantage ou ou autre
\par difficult\'e9 qui requiert des domaines de trace arri\'e8re, vous devrez souvent
\par employer des domaines tr\'e8s \'e9tendus pour arriver \'e0 circonscrire le probl\'e8me.
\par Une fois que vous avez une meilleure id\'e9e de la zone sp\'e9cifique du probl\'e8me,
\par vous pouvez utiliser des domaines plus petits.
\par 
\par Les grands domaines de trace arri\'e8re sont souvent tr\'e8s lents. Quand on
\par utilise des domaines  \'e9tendus, c'est habituellement pour essayer d'obtenir
\par une id\'e9e g\'e9n\'e9rale de l'endroit ou se trouve le probl\'e8me. Soft-ICE a un mode
\par sp\'e9cial pour traiter de grands domaines. Cela acc\'e9l\'e8re les domaines d'un
\par facteur trois ou plus, mais limite la quantit\'e9 d'instructions dans le buffer.
\par 
\par Ce mode recueille seulement les instructions qui \'e9crivent dans la m\'e9moire dans
\par un domaine sp\'e9cifi\'e9.
\par 
\par Ce mode fonctionne mieux avec des grands domaines et tend \'e0 \'eatre moins
\par efficace pour de petits domaines. Pour permettre de genre de domaine de trace
\par arri\'e8re, employez la commande BPR avec le verbe TW au lieu de T. Par exemple:
\par 
\par  BPR 1000:0 2000:0  TW
\par 
\par Pour davantage d'informations sur les domaines de trace arri\'e8re voir les
\par descriptions des commandes:
\par 
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 SHOW, TRACE, XT, XP, XG, XRSET, BPR
\par 
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page   {\*\bkmkstart _Toc480604334}CHAPITRE 10
{\*\bkmkend _Toc480604334}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2 Utilisation de Soft-ICE avec MagicCV ou MagicCVW
\par    10.1 Introduction
\par    10.2 Fonctionnement de Soft-ICE avec MagicCV ou MagicCVW
\par    10.3 Consid\'e9rations Sp\'e9ciales
\par    10.4 La commande Soft-ICE ACTION
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604335}10.1 Introduction{\*\bkmkend _Toc480604335
}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par MagicCV vous permet d'utiliser Microsoft CodeView dans moins de 8K de m\'e9moire
\par conventionnelle sur votre 80386.
\par 
\par MagicCVW vous permet d'utiliser Microsoft CodeView pour Windows dans moins de
\par 8K de m\'e9moire conventionnelle sur votre 80386.
\par 
\par L'utilisation de Soft-ICE en combinaison avec MagicCV ou MagicCVW vous permet
\par d'avoir la puissance de Soft-ICE pendant que vous avez la facilit\'e9 d'utiliser
\par les produits CodeView avec lesquels vous \'eates familiers.
\par 
\par Dans le reste de ce chapitre, le terme MCV s'appliquera \'e0 MagicCV ET MagicCVW,
\par et le terme CV s'appliquera \'e0 CodeView et CodeView pour Windows.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604336}
10.2 Fonctionnement de Soft-ICE avec MagicCV ou MagicCVW{\*\bkmkend _Toc480604336}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Pour utiliser Soft-ICE 2.0 et MCV ensemble, vous devez installer S-ICE.EXE
\par comme un pilote de p\'e9riph\'e9rique. S-ICE.EXE est fourni sur la disquette
\par Soft-ICE. S-ICE.EXE remplace NUMEGA.SYS dans CONFIG.SYS. Utiliser les
\par commutateurs /MCV, /EMM, et /EXT commutateurs comme si vous utilisiez MagicCV
\par ou MagicCVW seul. Il y a des commutateurs suppl\'e9mentaires que vous pouvez
\par vouloir utiliser pour Soft-ICE. Se r\'e9f\'e9rer au chapitre 6 pour des informations
\par sur ces commutateurs.
\par 
\par Pour lancer MagicCV ou MagicCVW apr\'e8s que Soft-ICE ait \'e9t\'e9 charg\'e9, r\'e9f\'e9rez-vous
\par \'e0 votre manuel de MagicCV ou de MagicCVW.
\par 
\par Note:
\par MagicCVW n\'e9cessite Soft-ICE version 2.00 ou sup\'e9rieure.
\par 
\par MagicCV n\'e9cessite Soft-ICE version 1.02 ou sup\'e9rieure. Les pilotes S-ICE.SYS
\par et NUMEGA.SYS \'e9taient fournis avec certaines versions de Soft-ICE. Les
\par pilotes S-ICE et NUMEGA
\par 
\par doivent \'eatre remplac\'e9s par S-ICE.EXE avant de pouvoir lancer MagicCV et
\par Soft-ICE 2.0 ensemble.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604337}10.3 Consid\'e9rations Sp\'e9ciales
{\*\bkmkend _Toc480604337}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Deux Machines Virtuelles
\par 
\par Quand vous utilisez Soft-ICE et MCV ensemble, vous devez garder a l'esprit
\par que CV est dans une machine virtuelle s\'e9par\'e9e de l'environnement cible.
\par Vous pouvez activer Soft-ICE depuis l'une ou l'autre machine virtuelle, par
\par exemple, quand CV fonctionne, ou quand le programme cible fonctionne.
\par 
\par Si vous activez Soft-ICE tandis que le programme cible fonctionne, tout
\par se passe comme d\'e9finit dans le manuel de Soft-ICE. Si vous activez Soft-ICE
\par tandis que CV fonctionne (fait typiquement pour les points d'arr\'eat), vous
\par devez garder quelques points \'e0 l'esprit:
\par 
\par     * Les registres sont ceux de CV et ils NE PEUVENT PAS
\par        \'eatre chang\'e9s.
\par     * Par facilit\'e9, la commande Soft-ICE MAP affiche la
\par        carte m\'e9moire de la machine virtuelle du programme
\par        cible, pas la carte m\'e9moire de la machine virtuelle
\par        de CV. La zone en surbrillance dans la carte m\'e9moire
\par        peut ne pas \'eatre correcte.
\par     * Tout affichage ou modification de m\'e9moire se produit
\par        dans la machine virtuelle du programme cible.
\par     * Vous n'avez aucune visibilit\'e9 dans la machine
\par        virtuelle de CV \'e0 l'exception de l'affichage des
\par        valeurs de registre. Rappelez-vous que quand vous
\par        activez la fen\'eatre Soft-ICE tandis que CV est actif,
\par        les valeurs de registre sont celles de CV et ne doivent
\par        pas \'eatre modifi\'e9es.
\par     * La trace des programmes et des instructions est inactiv\'e9e
\par        de la fen\'eatre Soft-ICE quand CV est actif. Ceci doit
\par        emp\'eacher toute confusion, parce qu'une trace s'effectuerait
\par        alors dans CV, pas dans le programme cible.
\par        Si vous essayez faire une Trace Soft-ICE (T) ou un
\par        Pas De Programme (P) tandis que CV est actif, vous
\par        obtiendrez le message d'avertissement: "Function not
\par        }{\f2\fs20\lang2057\langfe1036\langnp2057 available in CV virtual machine." }{\f2\fs20 Pour tracer dans le
\par        code de votre programme cible, vous pouvez utiliser
\par        une de ces deux options:
\par        * Utiliser la commande de trace de CV. Pour faire cela,
\par            quitter la fen\'eatre Soft-ICE en utilisant la commande
\par            X, faites alors une ou plusieurs traces CV pour
\par            balayer le programme cible.
\par        * Utiliser Soft-ICE pour aller \'e0 l'adresse du programme
\par            cible, utiliser alors la commande Soft-ICE T ou P
\par            pour balayer votre programme cible. Pour cela, quitter
\par            la fen\'eatre Soft-ICE avec la commande X, pressez alors la
\par            touche 'F3' jusqu'\'e0 ce que CV soit en mode mixte.
\par            Cela vous permet de voir les lignes de source et les
\par            adresses d'instruction. Activer Soft-ICE. Si la fen\'eatre
\par            Soft-ICE n'est pas d\'e9j\'e0 en mode NARROW, utilisez la
\par            commande WIN pour changer la taille de la fen\'eatre.
\par            D\'e9placer la fen\'eatre Soft-ICE fen\'eatre pour pouvoir voir
\par            l'adresse d'instruction sur le c\'f4t\'e9 gauche de l'\'e9cran.
\par            Maintenant vous pouvez utilier la commande Soft-ICE G
\par            pour aller \'e0 l'une des adresses. Soyez s\'fbr de taper
\par            l'adresse enti\'e8re, (segment et d\'e9calage). Entrer alors
\par            'G' dans la fen\'eatre CV. A ce point, CV n'est pas actif,
\par            et vous pouvez employer les commandes Soft-ICE T ou P
\par            pour balayer le programme cible.
\par 
\par La commande SHELL de CodeView
\par 
\par Si vous utilisez le DOS Shell dans la machine virtuelle de CodeView, le DOS
\par Shell fait partie de la machine virtuelle. A cause de cela, vous ne devez pas
\par lancer de T&SR depuis le DOS Shell.  Si vous le faites, quand vous sortez de
\par CodeView le T&SR dispara\'eetra avec la machine virtuelle.
\par 
\par C'est dangereux, parce que nimporte quel vecteur d'interruption non restaur\'e9
\par pourrait planter votre machine.
\par 
\par Le commutateur /R de CV
\par 
\par Soft-ICE tire parti de beaucoup des caract\'e9ristiques du 80386 incluant les
\par registres de d\'e9bugging du 80386. Cela signifie que les registres de d\'e9bugging
\par ne sont pas disponibles pour CV, et vous ne pouvez pas employer le commutateur
\par /R de CV quand quand Soft-ICE fonctionne. Si vous employez le commutateur /R,
\par Soft-ICE vous donne une erreur g\'e9n\'e9rale de protection. A ce point, vous pouvez
\par presser "C" pour continuer, relancer CV sans le commutateur /R, et utiliser les
\par points d'arr\'eat de Soft-ICE.
\par 
\par Le commutateur /R de CV fonctionne quand vous lancez MCV sans Soft-ICE.
\par 
\par 3.4 La commande Soft-ICE ACTION
\par 
\par La commande ACTION offre trois m\'e9thodes diff\'e9rentes pour activer CV apr\'e8s un
\par point d'arr\'eat Soft-ICE. Le meilleur choix d'action est ACTION NMI. Si vous
\par avez des probl\'e8mes avec ACTION sur NMI (habituellement parce qu'une carte dans
\par votre syst\'e8me utilise NMI),utilisez ACTION INT1.
\par 
\par \page 
\par }\pard\plain \s6\ql \li0\ri0\keepn\widctlpar\brdrt\brdrsh\brdrs\brdrw10\brsp20 \brdrl\brdrsh\brdrs\brdrw10\brsp80 \brdrb\brdrsh\brdrs\brdrw10\brsp20 \brdrr\brdrsh\brdrs\brdrw10\brsp80 \faauto\outlinelevel5\rin0\lin0\itap0 
\b\f2\fs32\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {   SECTION III - Caract\'e9ristiques
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {   {\*\bkmkstart _Toc480604338}CHAPITRE 11
{\*\bkmkend _Toc480604338}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2 Caract\'e9ristiques Avanc\'e9es
\par    11.1 Utilisation de Soft-ICE avec d'autres d\'e9buggers
\par    11.1.1 D\'e9buggers utilisant DOS
\par    11.1.2 La commande ACTION avec d'autres d\'e9buggers
\par    11.1.3 Consid\'e9rations Sp\'e9ciales
\par    11.1.4 Utilisation de Soft-ICE avec CODEVIEW
\par    11.1.5 D\'e9buggers utilisant les point d'arr\'eat registre du 80386
\par    11.2 Points d'arr\'eats utilisateur
\par    11.2.1 Exemple d'un point d'arr\'eat utilisateur
\par    11.3 La Fen\'eatre en mode graphique
\par    11.4 D\'e9bugging en m\'e9moire pagin\'e9e
\par    11.5 D\'e9bugging en m\'e9moire \'e9tendue
\par }{\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604339}
11.1 Utilisation de Soft-ICE avec d'autres d\'e9buggers{\*\bkmkend _Toc480604339}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE est con\'e7u pour bien fonctionner avec d'autres d\'e9buggers. Chaque
\par d\'e9bugger offre des caract\'e9ristiques diff\'e9rentes, et peut donc n\'e9cessiter
\par un traitement sp\'e9cial.  Cette section d\'e9crira certaines m\'e9thodes pour employer
\par plusieurs d\'e9buggers efficacement.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604340}11.1.1 D\'e9buggers utilisant DOS{\*\bkmkend _Toc480604340
}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Beaucoup de d\'e9buggers utilisent DOS et la ROM BIOS pour leurs affichages et
\par leurs entr\'e9es clavier. Une attention particuli\'e8re doit \'eatre apport\'e9e quand
\par on utilise ces d\'e9buggers avec Soft-ICE (ex: DEBUG, SYMDEB, et CODEVIEW),
\par parce que DOS et la ROM BIOS ne sont pas pleinement r\'e9-entrants. Si un point
\par d'arr\'eat survient tandis que du code s'ex\'e9cute dans le DOS ou le BIOS, un
\par probl\'e8me de r\'e9-entrance peut survenir.
\par 
\par Soft-ICE fournit un avertissement optionnel de r\'e9-entrance, qui est activ\'e9e
\par avec la commande WARN. Quand le mode WARN est ON, Soft-ICE surveille une
\par \'e9ventuelle r\'e9-entrance du DOS ou de la ROM BIOS avant de g\'e9n\'e9rer l'ACTION qui
\par active le d\'e9bugger h\'f4te. Quand un probl\'e8me de r\'e9-entrance est d\'e9tect\'e9, Soft-ICE
\par affiche un message d'avertissement et vous offre le choix entre continuer \'e0
\par ex\'e9cuter le code ou revenir \'e0 Soft-ICE.
\par 
\par Notez que Soft-ICE lui-m\'eame n'emploie pas DOS ou la ROM BIOS dans ses
\par commandes de d\'e9bugging. Cela signifie que vous pouvez employer Soft-ICE tout
\par le temps, sans probl\'e8mes de r\'e9-entrance.
\par 
\par Pour plus d'information sur la commande WARN, voir la section 5.4.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604341}11.1.2 La commande ACTION avec d'autres d\'e9buggers
{\*\bkmkend _Toc480604341}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Diff\'e9rents d\'e9buggers utilisent des m\'e9thodes diff\'e9rentes pour s'activer. Pour
\par une description de ces m\'e9thodes voir la section 13.1.
\par 
\par Si vous voulez revenir \'e0 votre d\'e9bugger apr\'e8s avoir atteint un point d'arr\'eat,
\par vous devez changer ACTION (voit la section 5.4) pour travailler avec votre
\par d\'e9bugger.
\par 
\par Dans la plupart des cas, l'action qui doit \'eatre utilis\'e9e apr\'e8s qu'un point
\par d'arr\'eat soit atteint est INT3. Par exemple, DEBUG et SYMDEB fonctionnent
\par avec ACTION r\'e9gl\'e9 sur INT3.
\par 
\par Si INT3 ne fonctionne pas avec votre d\'e9bugger, essayez INT1 ou NMI. CODEVIEW
\par fonctionne avec ACTION r\'e9gl\'e9 sur NMI.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604342}11.1.3 Consid\'e9rations Sp\'e9ciales
{\*\bkmkend _Toc480604342}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Quand un point d'arr\'eat est positionn\'e9, vous devez prendre garde \'e0 ne pas le
\par d\'e9sactiver par m\'e9garde. Par exemple, si vous \'e9tablissez un point d'arr\'eat
\par m\'e9moire \'e0 0:0, puis utilisez votre d\'e9bugger pour visualiser l'emplacement
\par m\'e9moire 0:0, Soft-ICE sera activ\'e9. Si ACTION est positionn\'e9 pour activer votre
\par d\'e9bugger, alors votre d\'e9bugger sera d\'e9clench\'e9 par lui-m\'eame. Comme certains
\par d\'e9buggers ne sont pas r\'e9-entrants, cela peut \'eatre un probl\'e8me fatal.
\par Ce probl\'e8me peut aussi survenir avec d'autres fonctions de d\'e9bugging, comme
\par l'\'e9dition ou le d\'e9sassemblage.
\par 
\par Pour cette raison, il est pr\'e9f\'e9rable de d\'e9sactiver les points d'arr\'eat Soft-ICE
\par lorsque Soft-ICE vous a aid\'e9 \'e0 atteindre le point que vous vouliez examiner
\par avec votre d\'e9bugger.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604343}11.1.4 Utilisation de Soft-ICE avec CODEVIEW
{\*\bkmkend _Toc480604343}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE travaille mieux avec CODEVIEW quand CODEVIEW est en mode assembleur
\par ou en mode mixte. Quand CODEVIEW est en mode source avec des langages de haut
\par niveau les points d'arr\'eat ne fonctionnent pas toujours correctement.
\par Il est toujours pr\'e9f\'e9rable d'utiliser ACTION NMI quand vous voulez que Soft-
\par ICE active CODEVIEW.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604344}11.1.5 D\'e9buggers utilisant les points d'arr\'ea
t registre du 80386{\*\bkmkend _Toc480604344}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Le 80386 a 4 points d'arr\'eats registre disponibles pour l'utilisation par des
\par d\'e9buggers. Soft-ICE les utilise pour ses points d'arr\'eat m\'e9moire octets, mot et
\par double mot. Si le d\'e9bugger que vous utilisez avec Soft-ICE les utilise aussi,
\par il y aura un conflit. Il y a deux mani\'e8res de r\'e9soudre ce probl\'e8me.
\par 
\par     1. D\'e9sactiver l'utilisation des points d'arr\'eat registre du
\par         80386 dans le d\'e9bugger que vous utilisez avec Soft-ICE.
\par         V\'e9rifier la documentation de votre autre d\'e9bugger pour une
\par         description de cette fonction.
\par     2. Certains d\'e9buggers emploient automatiquement les registres
\par         de point d'arr\'eat s'ils d\'e9tectent un processeur 80386 sans
\par         aucune m\'e9thode pour les d\'e9sactiver (certaines versions de
\par         SYMDEB proc\'e8dent ainsi). Pour ces d\'e9buggers proc\'e9der ainsi:
\par         * Activer la fen\'eatre Soft-ICE avant de lancer
\par             l'autre d\'e9bugger.
\par         * Activer le mode BREAK de Soft-ICE avec la
\par             commande BREAK (vous pouvez faire cela dans le
\par             la commande INIT de S-ICE.DAT si vous faites
\par             cela fr\'e9quemment).
\par         * Lancez votre autre d\'e9bugger.
\par         * Vous pouvez maintenant activer la fen\'eatre Soft-ICE et
\par             mettre le mode BREAK OFF si vous le souhaitez.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604345}11.2 Points d'arr\'eat utilisateur
{\*\bkmkend _Toc480604345}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Occasionnellement vous pouvez avoir besoin d'un ensemble tr\'e8s particulier de
\par conditions de point d'arr\'eat. Si des conditions sp\'e9ciales n\'e9cessitent de
\par calculer des valeurs de registre ou des valeurs de m\'e9moire, vous pouvez
\par \'e9crire une routine de calcul de point d'arr\'eat.
\par 
\par Soft-ICE contient un m\'e9canisme tr\'e8s g\'e9n\'e9ral pour appeler des routines de
\par calcul de points d'arr\'eat utilisateur: la commande ACTION. Quand vous utilisez
\par la commande ACTION, Soft-ICE peut acheminer tous les points d'arr\'eat vers
\par un vecteur d'interruption sp\'e9cial. Cependant, avant que les points d'arr\'eat
\par puissent \'eatre achemin\'e9s, la routine de calcul doit \'eatre plac\'e9e en m\'e9moire, et
\par le vecteur d'interruption doit pointer vers la routine de calcul.
\par 
\par Tous les registres ont les m\'eames valeurs que quand un point d'arr\'eat Soft-ICE
\par survient. Il est de la responsabilit\'e9 de la routine de calcul de sauvegarder et
\par de restaurer les registres. Si votre routine de calcul d\'e9tecte une concordance
\par avec des conditions de point d'arr\'eat, elle peut faire une quantit\'e9 d'actions.
\par Certains exemples d'actions utiles qu'une routine peut faire quand une
\par concordance est trouv\'e9e sont:
\par     * stocker l'information pour plus tard
\par     * envoyer l'information directement vers une imprimante
\par         ou un terminal s\'e9riel
\par     * \'e9mettre une instruction INT3 pour activer Soft-ICE.
\par        La commande 13HERE doit \'eatre positionn\'e9 sur ON pour
\par        que l'INT3 active Soft-ICE (voit la section 5.4).
\par 
\par Si les conditions ne concordent pas, la routine de calcul doit ex\'e9cuter une
\par instruction IRET. Pour r\'e9sumer:
\par 
\par     1.  Cr\'e9er une routine de calcul de point d'arr\'eat dans
\par         votre espace code, ou n'importe o\'f9 dans la m\'e9moire
\par         libre. La routine doit pr\'e9server les registres.
\par         Apr\'e8s avoir compar\'e9 les conditions d\'e9sir\'e9es, la
\par         routine peut ex\'e9cuter soit une INT3 pour activer
\par         Soft-ICE, soit un IRET pour continuer.
\par     2.  Faire pointer un vecteur d'interruption inutilis\'e9
\par         vers votre routine de calcul. Cela peut \'eatre fait
\par         dans votre code ou depuis Soft-ICE.
\par     3.  Dans Soft-ICE, positionner ACTION au num\'e9ro d'interruption
\par         qui a \'e9t\'e9 employ\'e9 pour pointer sur votre routine de calcul.
\par     4.  Dans Soft-ICE, positionner 13HERE sur ON. Ceci est n\'e9cessaire
\par         pour activer Soft-ICE apr\'e8s que les conditions aient \'e9t\'e9
\par         rencontr\'e9es.
\par     5.  Positionner les conditions g\'e9n\'e9rales de point d'arr\'eat de
\par         Soft-ICE. Quand l'une de ces conditions de point d'arr\'eat
\par         est rencontr\'e9e, votre routine de calcul sera appel\'e9e.
\par 
\par }\pard\plain \s3\ql \li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel2\adjustright\rin0\lin0\itap0 \b\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604346}11.2.1 Exemple d'un point d'arr\'eat utilisateur
{\*\bkmkend _Toc480604346}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Cette section contient un exemple d'un point d'arr\'eat utilisateur qui calcule
\par pour les conditions AX = 3, BX = 4 et CX = 5 quand un point d'arr\'eat se produit.
\par 
\par En premier, nous cr\'e9ons la routine de calcul. Pour les besoins de cet exemple,
\par nous assemblerons la commande directement en m\'e9moire avec l'assembleur
\par interractif de Soft-ICE. Pour cet exemple nous assemblerons arbitrairement la
\par routine \'e0 l'emplacement 9000:0H. Les s\'e9quences  suivantes sont entr\'e9es dans
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 Soft-ICE:
\par 
\par    A 9000:0
\par    9000:0 CMP AX, 3
\par    9000:3 JNE 10
\par    9000:5 CMP BX, 4
\par    }{\f2\fs20 9000:7 JNE 10
\par    9000:A CMP CX, 5
\par    9000:D JNE 10
\par    9000:F INT3
\par    9000:10 IRET
\par 
\par Maintenant que la routine est en m\'e9moire, vous devez faire pointer un vecteur
\par d'interruption vers la routine.  Pour cet exemple, nous prendrons
\par arbitrairement INT 99H. Pour placer 9000:0H dans le vecteur INT 99H entrez:
\par 
\par    ED 0:99*4 9000:0
\par 
\par Positionner la coomande ACTION de telle fa\'e7on que Soft-ICE appelle votre
\par routine de calcul de point d'arr\'eat \'e0 chaque point d'arr\'eat.
\par 
\par    ACTION 99
\par 
\par Positionner 13HERE sur ON; la routine de calcul peut activer Soft-ICE quand
\par les conditions surviennent.
\par 
\par    13HERE ON
\par 
\par Maintenant vous devez positionner les points d'arr\'eat. Pour cet exemple, nous
\par sommes justes int\'e9ress\'e9s quand les registres sont: AX = 3, BX = 4, CX = 5
\par dans un programme sp\'e9cifique, et nous ne voulons pas d'autre calcul. Pour
\par faire cela, on emploie un point d'arr\'eat registre m\'e9moire lecture:
\par 
\par   BPR segment:d\'e9but-offset segment:fin-offset
\par 
\par Cela provoquera l'appel de votre routine de calcul de point d'arr\'eat apr\'e8s
\par l'ex\'e9cution de chaque instruction dans le domaine m\'e9moire pr\'e9cis\'e9. Quand les
\par conditions de registre ne correspondent pas, alors l'instruction IRET est
\par ex\'e9cut\'e9e. Quand les conditions correspondent aux calculs pr\'e9cis\'e9s, l'INT 3
\par est ex\'e9cut\'e9e et Soft-ICE est activ\'e9.
\par 
\par Quand Soft-ICE est activ\'e9, le pointeur d'instruction indiquera l'INT3 dans
\par votre routine de calcul (9OOO:FH dans notre exemple). Pour arriver \'e0
\par l'instruction suivant celle qui a caus\'e9 le point d'arr\'eat, vous devez changer
\par le pointeur d'instruction pour indiquer l'instruction IRET (F000:10H dans
\par l'exemple) et tracer un pas. C'est accompli avec les commandes suivantes
\par 
\par    RIP IP + 1
\par    T
\par 
\par Apr\'e8s que vos conditions de point d'arr\'eat aient disparu, pensez \'e0 changer la
\par commande ACTION pour ACTION HERE afin que les points d'arr\'eats suivants
\par n'aillent pas dans votre routine de calcul.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604347}11.3 La Fen\'eatre en mode Graphique
{\*\bkmkend _Toc480604347}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par L'\'e9cran est bascul\'e9 en mode texte quand Soft-ICE est activ\'e9. Si l'\'e9cran \'e9tait
\par en mode graphique ou en mode 40 colonnes, l'affichage graphique n'est
\par pas visible pendant que la fen\'eatre est active. Pour les utilisateurs qui
\par doivent voir les affichages graphiques en d\'e9bugging, trois caract\'e9ristiques
\par sont fournies. La premi\'e8re caract\'e9ristique permet \'e0 la fen\'eatre Soft-ICE
\par d'afficher sur un deuxi\'e8me moniteur (voir la commande ALTSCR, section 5.9).
\par La deuxi\'e8me caract\'e9ristique vous permet de restaurer l'\'e9cran pendant que vous
\par ex\'e9cutez les commandes P ou T (voir la commande FLASH, section 5.9). La
\par troisi\'e8me caract\'e9ristique vous permet de restaurer l'\'e9cran du programme
\par temporairement (voyez la commande RS, section 5.9).
\par 
\par Si Soft-ICE ne semble pas suivre votre programme en mode graphique,essayez
\par de basculer WATCHV sur ON (voir la section 5.9 pour des d\'e9tails).
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604348}11.4 D\'e9bugging en m\'e9moire pagin\'e9e
{\*\bkmkend _Toc480604348}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Un point d'arr\'eat domaine ou un point d'arr\'eat m\'e9moire qui est positionn\'e9
\par dans une zone EMM mappable restera \'e0 cette adresse m\'eame si la page EMM est
\par mapp\'e9e.
\par 
\par Quand vous d\'e9buggez des programmes EMM, la commande EMMMAP peut aussi \'eatre
\par tr\'e8s utile. Voir la section 5.6 pour plus d'informations.
\par 
\par Les commandes D, E, S, F, et C peuvent \'eatre employ\'e9es pour voir ou modifier
\par nimporte quel gestionnaire de page EMM. La page ne doit pas \'eatre actuellement
\par mapp\'e9e. La syntaxe de ces commandes est identique \'e0 celles des commandes
\par utilis\'e9es pour les pages non-EMM, \'e0 l'exception des suivantes:
\par 
\par     * Dans les commandes D, E, S, et F, la partie adresse
\par        de la commande doit \'eatre pr\'e9cis\'e9e de la fa\'e7on suivante:
\par        Hhandle# Ppage# d\'e9calage
\par        o\'f9 handle est un nombre pr\'e9cisant quel gestionnaire
\par        EMM employer, page est un nombre pr\'e9cisant quelle
\par        page EMM employer, et d\'e9calage est un nombre de 0
\par        \'e0 4000H, pr\'e9cisant le d\'e9calage depuis le d\'e9but de
\par        la page.
\par        Exemple:
\par 
\par        DB H1 P3 0
\par 
\par        Cette commande affichera les octets de la page 3
\par        du gestionnaire 1, en commen\'e7ant au d\'e9calage 0.
\par 
\par    * La commande C doit \'eatre pr\'e9cis\'e9e de la fa\'e7on suivante:
\par 
\par        C Hhandle# Ppage# offset1 L longueur offset2
\par 
\par        o\'f9 handle et page sont les m\'eames que ci-dessus. offset1
\par        est un nombre de 0 \'e0 4000H, pr\'e9cisant le d\'e9calage depuis
\par        le d\'e9but de la page, o\'f9 le premier bloc de donn\'e9es devant
\par        \'eatre compar\'e9es est situ\'e9. offset2 est un nombre de 0 \'e0 4000H,
\par        pr\'e9cisant le d\'e9calage depuis le d\'e9but de la page, o\'f9 le
\par        deuxi\'e8me bloc de donn\'e9es devant \'eatre compar\'e9es est situ\'e9.
\par        Exemple:
\par 
\par        C H2 P4 00 L10 1000
\par 
\par        Cette commande comparera les 10 premiers octets de
\par        m\'e9moire situ\'e9s au d\'e9calage 0 de la page 4 du gestionnaire
\par        2 avec les 10 premiers octets de m\'e9moire situ\'e9s au d\'e9calage
\par        1000 de la page 4 du gestionnaire 2.
\par 
\par Note:
\par Les occurences suivantes des commandes D, E, S, F, et C continueront \'e0 utiliser
\par le gestionnaire et la page pr\'e9cis\'e9s en dernier. Pour revenir \'e0 la m\'e9moire
\par conventionnelle, utilisez l'une des commandes ci-dessus avec un segment pr\'e9cis\'e9 dans le champ adresse, par exemple:
\par           D 0:0
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604349}11.5 D\'e9bugging en m\'e9moire \'e9tendue
{\*\bkmkend _Toc480604349}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Les commandes D, E, S, F, et C peuvent \'eatre employ\'e9es pour voir ou modifier
\par la m\'e9moire \'e9tendue. La m\'e9moire \'e9tendue r\'e9serv\'e9e par Soft-ICE ne peut pas \'eatre
\par affich\'e9e. La syntaxe de ces commandes est similaire \'e0 celle des commandes
\par qui sont utilis\'e9es pour la m\'e9moire conventionnelle:
\par 
\par     * Dans les commandes D, E, S, et F commande,la portion
\par        adresse de la commande doit \'eatre pr\'e9cis\'e9e de la fa\'e7on
\par        suivante:
\par        M m\'e9gaoctet adresse
\par        o\'f9 m\'e9gaoctet est un nombre pr\'e9cisant
\par        combien de m\'e9gaoctets employer, et
\par        adresse pr\'e9cise l'adresse dans le m\'e9gaoctet
\par        sp\'e9cifi\'e9.
\par        Exemple:
\par        DB M 2 0:0
\par        Cette commande affichera des octets depuis
\par        le d\'e9but du m\'e9ga-octet commen\'e7ant \'e0 l'adresse
\par        lin\'e9aire 200000H.
\par    * La commande C doit \'eatre pr\'e9cis\'e9e de la fa\'e7on suivante:
\par        C M m\'e9gaoctet address1 L longueur address2
\par        o\'f9 m\'e9gaoctet et address1 sont les m\'eames que ci-dessus.
\par        address2 pr\'e9cise l'adresse dans le m\'e9gaoctet sp\'e9cifi\'e9,
\par        o\'f9 le deuxi\'e8me bloc de donn\'e9es devant \'eatre compar\'e9es
\par        est situ\'e9.
\par 
\par        Exemple:
\par 
\par        C M 3 1000:2000 L10 3000:4000
\par 
\par        Cette commande comparera les 10 premiers octets
\par        de m\'e9moire situ\'e9s \'e0 1000:2000 avec les 10 premiers
\par        octets de m\'e9moire situ\'e9s \'e0 3000:4000.
\par 
\par Note:
\par Les utilisations suivantes des commandes D, E, S, F, et C continueront
\par \'e0 utiliser le dernier m\'e9gaoctet pr\'e9cis\'e9. Pour revenir au m\'e9gaoctet 0
\par (m\'e9moire conventionnelle), employez une des commandes ci-dessus avec 0
\par pr\'e9cis\'e9 comme m\'e9gaoctet, par exemple:
\par 
\par    D M 0
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page  {\*\bkmkstart _Toc480604350}CHAPITRE 12
{\*\bkmkend _Toc480604350}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }{\b\f2 Probl\'e8mes sp\'e9cifiques de d\'e9bugging
\par    12.1 Pilotes de p\'e9riph\'e9riques
\par    12.2 Chargeurs de boot
\par    12.3 Routines d'interruption
\par    12.4 Syst\'e8mes d'exploitation non-DOS
\par }{\f2\fs20 
\par Soft-ICE peut \'eatre un outil puissant utilis\'e9 tout seul. Ce chapitre d\'e9crit
\par des techniques pour d\'e9bugger des composants syst\'e8me en utilisant Soft-ICE
\par tout seul. Quand on utilise Soft-ICE tout seul, la commande ACTION doit \'eatre
\par positionn\'e9e sur HERE.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604351}12.1 Pilotes de p\'e9riph\'e9riques
{\*\bkmkend _Toc480604351}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Le d\'e9bugging de pilotes de p\'e9riph\'e9riques n\'e9cessite un d\'e9bugger qui ne fait
\par pas appel au DOS. Soft-ICE peut \'eatre employ\'e9e tout seul si votre d\'e9bugger
\par utilise le DOS.
\par 
\par Il y a deux m\'e9thodes pour d\'e9bugger des pilotes de p\'e9riph\'e9riques:
\par     1. Employez la commande MAP pour trouver l'emplacement
\par         de votre pilote. Affichez le header du pilote pour
\par         trouver une strat\'e9gie ou l'interruption d'entr\'e9e.
\par         Positionner un point d'arr\'eat \'e0 l'entr\'e9e du pilote
\par         vous donnera le contr\'f4le dans le pilote.
\par         La trace, ou des points d'arr\'eat, vous permettront
\par         de continuer le d\'e9bugging.
\par         Le d\'e9bugging du code d'initialization d'un pilote de
\par         p\'e9riph\'e9rique n\'e9cessite de faire un reset du syst\'e8me
\par         avec la commande BOOT. Utilisez la technique \'e9nonc\'e9e
\par         ci-dessus pour positionner un point d'arr\'eat dans le
\par         code du pilote. La commande BOOT garde Soft-ICE et
\par         les points d'arr\'eats positionn\'e9s en m\'e9moire.
\par     2. La deuxi\'e8me m\'e9thode n\'e9cessite de placer un code sp\'e9cial
\par         dans votre pilote. Faites cela avec la commande 13HERE ON
\par         (voir la section 5.4). Placez un opcode INT 3 (CCH) dans
\par         votre pilote de p\'e9riph\'e9rique au point o\'f9 vous voulez prendre
\par         le contr\'f4le. Quand l'INT 3 est ex\'e9cut\'e9e, le contr\'f4le est
\par         donn\'e9 \'e0 Soft-ICE. Vous pouvez alors employer une commande
\par         RIP pour positionner le pointeur d'instruction autour du
\par         INT 3.
\par 
\par Si vous d\'e9sirez  d\'e9bugger votre s\'e9quence d'initialisation, soyez certain que
\par Soft-ICE est charg\'e9 dans CONFIG.SYS avant le pilote que vous essayez de
\par d\'e9bugger. Placez la commande 13HERE  ON
\par dans la cha\'eene INIT ddu fichier S-ICE.DAT. Avec cette m\'e9thode vous ne devez
\par pas utiliser la commande BOOT.
\par 
\par Si vous \'eates en train de d\'e9bugger votre pilote de p\'e9riph\'e9rique symboliquement
\par ou avec le source vous devez charger le fichier de symboles et les fichiers
\par source s\'e9par\'e9ment du pilote de p\'e9riph\'e9rique. Le fichier de symboles et les
\par fichiers source sont charg\'e9s avec le chargeur de programme de Soft-ICE:
\par LDR.EXE. Quand LDR.EXE est employ\'e9 pour charger uniquement les symboles et les
\par sources vous devez l'employer sous cette forme:
\par 
\par      LDR nom-fichier.SYM
\par 
\par L'extension du fichier symboles doit \'eatre pr\'e9cis\'e9e. Voir la section 7.4 pour
\par plus de d\'e9tails sur LDR.EXE.
\par 
\par Apr\'e8s avoir charg\'e9s le fichier de symboles et les fichiers source avec LDR.EXE
\par vous devez entrer dans Soft-ICE et reloger les symboles par rapport au d\'e9but
\par de votre pilote de p\'e9riph\'e9rique. Les symboles sont relog\'e9s avec la commande
\par Soft-ICE  SYMLOC. La syntaxe de la commande SYMLOC est:
\par 
\par       SYMLOC segment
\par 
\par La valeur de segment est obtenue avec la commande MAP. Voir la description de
\par la commande SYMLOC pour plus de d\'e9tails.
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604352}12.2 Chargeurs de boot
{\*\bkmkend _Toc480604352}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Le d\'e9bugging des chargeurs de boot ou des programmes auto-bootables
\par n\'e9cessite l'utilisation de Soft-ICE tout seul. Vous devez tout d'abord d\'e9marrer
\par sous DOS et charger Soft-ICE. La m\'e9thode la plus facile pour d\'e9bugger des
\par chargeurs de boot consiste \'e0 positionner un point d'arr\'eat \'e0 une adresse connue
\par dans le chargeur de boot, puis d'employer alors la commande BOOT pour faire
\par un reset du syst\'e8me. Soft-ICE est maintenu en m\'e9moire avec les points d'arr\'eat
\par \'e9tablis. Si une adresse connue est difficile \'e0 trouver un point d'arr\'eat
\par d'ex\'e9cution peut \'eatre \'e9tabli \'e0 7C0:0H avant le 
\par la commande BOOT. C'est l'adresse o\'f9 la ROM BIOS charge le secteur de
\par d\'e9marrage en m\'e9moire.
\par 
\par Une autre m\'e9thode n\'e9cessite de positionner le mode 13HERE sur ON (voir la
\par section 5.4). Placez un opcode INT 3 (CCH) dans votre programme au point o\'f9
\par vous voulez reprendre le contr\'f4le. Quand l'INT 3 s'ex\'e9cute, le contr\'f4le est
\par donn\'e9 \'e0 Soft-ICE.
\par Vous pouvez aussi employer le d\'e9bugging symboles et source pour d\'e9bugger un
\par chargeur de boot.
\par Voir la commande SYMLOC pour plus d'informations sur la fa\'e7on de reloger vos
\par symboles et source vers le segment o\'f9 votre chargeur de boot a \'e9t\'e9 charg\'e9.
\par 
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604353}12.3 Routines d'interruption
{\*\bkmkend _Toc480604353}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Soft-ICE permet des points d'arr\'eat et la trace dans les routines
\par d'interruption du syst\'e8me (minuterie, clavier, etc. ).
\par La trace et la pose de points d'arr\'eat dans les routines d'interruption du
\par syst\'e8me est permis avec Soft-ICE. Vous pouvez tracer la routine d'interruption
\par du clavier tandis que Soft-ICE utilise le clavier pour ses entr\'e9es. Dans la
\par plupart des cas, Soft-ICE doit \'eatre employ\'e9e tout seul quand quand vous
\par d\'e9buggez les routines d'interruption du syst\'e8me. Pour positionner un point
\par d'arr\'eat sur l'adresse d'une routine d'interruption syst\'e8me, utilisez une des
\par m\'e9thodes suivantes:
\par     1. Utilisez la commande affiche double:
\par          DD num\'e9ro-interruption  * 4 L 1
\par          L'adresse affich\'e9e est l'adresse de la
\par          premi\'e8re instruction de la routine
\par          d'interruption syst\'e8me. Positionnez un
\par          point d'arr\'eat d'ex\'e9cution sur cette adresse.
\par     2. Utilisez la commande:
\par          BPINT num\'e9ro-interruption
\par 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604354}12.4 Syst\'e8mes d'exploitation non-DOS
{\*\bkmkend _Toc480604354}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Les syst\'e8mes d'exploitation non-DOS en mode d'adressage r\'e9el peuvent \'eatre
\par d\'e9bugg\'e9s avec Soft-ICE. Si le syst\'e8me d'exploitation n'est pas vraiment
\par compatible DOS vous devrez charger Soft-ICE sous DOS, et utiliser alors la
\par commande BOOT pour lancer le syst\'e8me d'exploitation non-DOS. Suivre les
\par instructions pour d\'e9bugger les s\'e9quences de boot et les programmes
\par auto-bootables comme expliqu\'e9 dans la section 12.2.
\par 
\par Les commandes MAP et WARN  peuvent ne pas fonctionner correctement sous un
\par syst\'e8me d'exploitation non-DOS, mais les points d'arr\'eat et les commandes de
\par d\'e9bugging fonctionneront correctement.
\par 
\par Pour d\'e9bugger avec des symboles ou un source vous devez charger les fichiers
\par de symboles et les fichiers source tandis que vous \'eates encore sous DOS ou
\par dans le mode compatible DOS de votre syst\'e8me d'exploitation.
\par 
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page {\*\bkmkstart _Toc480604355}APPENDICE A
{\*\bkmkend _Toc480604355}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {  {\*\bkmkstart _Toc480604356}LISTE DES COMMANDES FONCTIONNELLES
{\*\bkmkend _Toc480604356}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par  Commande      Description                                Page
\par 
\par }{\b\f2\fs20 Positionnement des points d'arr\'eat:
\par }{\f2\fs20    BPM    Positionne un point sur un acc\'e8s m\'e9moire ou
\par                   une ex\'e9cution                             29
\par    BPR    Positionne un point d'arr\'eat sur un 
\par                   domaine m\'e9moire                           31
\par    BPIO   Positionne un point d'arr\'eat sur un 
\par                   acc\'e8s \'e0 un port I/0                       31
\par    BPINT  Positionne un point d'arr\'eat sur une interruption  32
\par    BPX    Positionne ou retire un point d'arr\'eat ex\'e9cution   33
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 CSIP   Set CS:IP range qualifier                         33   
\par    }{\f2\fs20 BPAND  Attend l'arriv\'e9e de plusieurs points d'arr\'eat      34
\par 
\par }{\b\f2\fs20 Manipulation des points d'arr\'eat:
\par }{\f2\fs20    BD     D\'e9sactive un point d'arr\'eat                        35
\par    BE     Active un point d'arr\'eat                           35
\par    BL     Liste les points d'arr\'eat                          36
\par    BPE    Edite un point d'arr\'eat                            36
\par    BPT    Utilise un point d'arr\'eat comme (template ??)      37
\par    BC     Efface les points d'arr\'eat                         37
\par      
\par }{\b\f2\fs20 Commandes d'\'e9dition et d'affichage:
\par }{\f2\fs20    U      D\'e9sassemblage d'instructions                      38
\par    R      Affiche ou modifie un registre                    39
\par    MAP    Affiche la carte m\'e9moire du syst\'e8me               40
\par    D      Affiche la m\'e9moire                                41
\par    E      Edite la m\'e9moire                                  41
\par    INT?   Affiche la derni\'e8re interruption appel\'e9e          42
\par    ? or H Affiche l'aide                                    43
\par    VER    Affiche le num\'e9ro de version de Soft-ICE          43
\par 
\par }{\b\f2\fs20 Commandes des ports I/O:
\par }{\f2\fs20    I      Lecture d'un port I/O                             44
\par    O      Ecriture sur un port I/O                          44
\par 
\par }{\b\f2\fs20 Commandes du contr\'f4le de transfert:
\par }{\f2\fs20    X      Sortie de la fen\'eatre Soft-ICE                     45
\par    G      Aller \'e0 une addresse                              45
\par    T      Tracer une instruction                            45
\par    P      Saut dans le Programme                            46
\par    HERE   Ex\'e9cuter jusqu'\'e0 la ligne du curseur              46
\par    GENINT Forcer une interruption                           47
\par    EXIT   Force la sotie du programme DOS actuel            47
\par    BOOT   Reset du Syst\'e8me (Soft-ICE reste pr\'e9sent)         48
\par    HBOOT  Reset hard du syst\'e8me (reset total)               49
\par 
\par }{\b\f2\fs20 Commandes du mode Debug:
\par }{\f2\fs20    ACTION D\'e9termine l'action \'e0 ex\'e9cuter lorsqu'un
\par                point d'arr\'eat est atteint                    49
\par    WARN   Positionne une alerte de r\'e9-entrance 
\par                }{\f2\fs20\lang1043\langfe1036\langnp1043 DOS/ROM BIOS                                 50
\par    }{\f2\fs20 BREAK  Break (Accessible nimporte quand)                 50
\par    13HERE Redirige l'Interruption 3 vers Soft-ICE           51
\par 
\par }{\b\f2\fs20 Commandes Utilitaires:
\par }{\f2\fs20    A      Assemble du code                                  51
\par    S      Cherche une donn\'e9e                                52
\par    F      Remplit la m\'e9moire avec une donn\'e9e                53
\par    M      D\'e9place une donn\'e9e                                53
\par    C      Compare deux blocs de donn\'e9es                     53
\par 
\par }{\b\f2\fs20 Commandes Sp\'e9ciales de Debugging:
\par }{\f2\fs20    SHOW   Affiche les instructions du buffer d'historique   54
\par    TRACE  Entrer en mode simulation de trace                55
\par    XT     Saut simple en mode simulation de trace           55
\par    XP     Saut programme en mode simulation de trace        56
\par    XG     Aller \'e0 une adresse en mode simulation de trace   56
\par    XRSET  Remettre \'e0 0 le buffer de trace arri\'e8re           57
\par    VECS   Sauve/restaure/compare vecteurs d'interruption    57
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 SNAP   Take snap shot of memory block                    58
\par    }{\f2\fs20 EMMMAP Affiche la carte d'allocation dela m\'e9moire EMM    59
\par 
\par }{\b\f2\fs20 Commandes de fen\'eatrage:
\par }{\f2\fs20   WR      Bascule la fen\'eatre registre                       59
\par   WC      Bascule/r\'e8gle la taille de la fen\'eatre code        60
\par   WD      Bascule /r\'e8gle la taille de la fen\'eatre donn\'e9es    60
\par   EC      Entr\'e9e/sortie de la fen\'eatre code                  61
\par   .       Trouve l'instruction courante                     61
\par 
\par }{\b\f2\fs20 Commndes de personnalisation du Debugger:
\par }{\f2\fs20   PAUSE   Pause apr\'e8s chaque \'e9cran                          62
\par   ALTKEY  Modifier la s\'e9quence de touches permettant        62
\par                  d'activer Soft-ICE
\par   FKEY    Affichage et \'e9dition des touches de fonction      63
\par   BASE    Positionne/affiche la base de num\'e9ration          64
\par   CTRL-P    Bascule l'impression de la session courante     65
\par   Print-Screen Imprime le contenu de l'\'e9cran                65
\par   PRN     Positionne le port de sortie imprimante           65
\par 
\par }{\b\f2\fs20 Commandes de contr\'f4le d'\'e9cran:
\par }{\f2\fs20   FLASH   Restaure l'\'e9cran durant P et T                    66
\par   FLICK   R\'e9duction du "flicker"                            66
\par   WATCHV  Positionne la surveillance du mode vid\'e9o          67
\par   RS      Restaure l'\'e9cran du programme                     67
\par   CLS     Efface la fen\'eatre                                 68
\par   ALTSCR  Bascule sur le deuxi\'e8me \'e9cran                     68
\par   WIN     Change la taille de la fen\'eatre Soft-ICE           68
\par 
\par }{\b\f2\fs20 Commandes Symbole et Lignes Source:
\par }{\f2\fs20   SYM     Affiche/positionne les symboles                   69
\par   SYMLOC  D\'e9place la base de symboles                       70
\par   SRC     Bascule entre source, m\'e9lang\'e9 et code             71
\par   FILE    Modifie/affiche le fichier source courant         71
\par   SS      Cherche une cha\'eene dans le fichier source courant 71
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page {\*\bkmkstart _Toc480604357}APPENDICE B
{\*\bkmkend _Toc480604357}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20                                
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {  {\*\bkmkstart _Toc480604358}LISTE ALPHABETIQUE DES COMMANDES
{\*\bkmkend _Toc480604358}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20   }{\b\f2\fs20 Commande     Description                                 Page
\par }{\f2\fs20   .       Trouve l'instruction courante                     61
\par   ? or H  Affiche l'aide                                    43
\par   A       Assemble du code                                  51
\par   ACTION  d\'e9termine l'action \'e0 ex\'e9cuter lorsqu'un
\par                   point d'arr\'eat est atteint                 49
\par   ALTKEY  Modifier la s\'e9quence de touches permettant
\par                   d'activer soft-ICE                        62
\par   ALTSCR  Bascule sur le deuxi\'e8me \'e9cran                     68
\par   BASE    Positionne/affiche la base de num\'e9ration          64
\par   BC      Efface les points d'arr\'eat                         37
\par   BD      D\'e9sactive un point d'arr\'eat                        35
\par   BE      Active un point d'arr\'eat                           35
\par   BL      Liste les points d'arr\'eat                          36
\par   BOOT    Reset du Syst\'e8me (Soft-ICE reste pr\'e9sent)         48
\par   BPAND   Attend l'arriv\'e9e de plusieurs points d'arr\'eat      34
\par   BPE     Edite un point d'arr\'eat                            36
\par   BPINT   Positionne un point d'arr\'eat sur une interruption  32
\par   BPIO    Positionne un point d'arr\'eat sur un
\par                   acc\'e8s \'e0 un port I/O                       31
\par   BPM     Positionne un point d'arr\'eat sur un acc\'e8s m\'e9moire
\par                   ou une ex\'e9cution                          29
\par   BPR     positionne un point d'arr\'eat sur un
\par                   domaine m\'e9moire                           31
\par   BPT     Utilise un point d'arr\'eat comme (template ??)      37
\par   BPX     Positionne ou retire un point d'arr\'eat ex\'e9cution   33
\par   BREAK   Break (accessible nimporte quand)                 50
\par   C       Compare deux blocs de donn\'e9es                     53
\par   CLS     efface la fen\'eatre                                 68
\par   }{\f2\fs20\lang2057\langfe1036\langnp2057 CSIP    Set CS:IP range qualifier                         33
\par   }{\f2\fs20 CTRL-P  Bascule l'impression de la session courante       65
\par   D       Affiche la m\'e9moire                                41
\par   E       Edite la m\'e9moire                                  41
\par   EC      Entr\'e9e/sortie de la fen\'eatre code                  61
\par   EMMMAP  Affiche la carte de l'allocation EMM              59
\par   EXIT    Force la sortie du programme DOS actuel           47
\par   F       Remplit la m\'e9moire avec une donn\'e9e                53
\par   FILE    Modifie/affiche le fichier source courant         71
\par  FKEY     Affichage et \'e9dition des touches de fonction      63
\par  FLASH    Restaure l'\'e9cran durant P et T                    66
\par  FLICK    R\'e9duction du "flicker"                            66
\par  G        Aller \'e0 une addresse                              45
\par  GENINT   Forcer une interruption                           47
\par  HBOOT    Reset hard du syst\'e8me (reset total)               49
\par  HERE     Ex\'e9cuter jusqu'\'e0 la ligne du curseur              46
\par  I        Lecture d'un port I/O                             44
\par  13HERE   Redirige l'Interruption 3 vers Soft-ICE           51
\par  INT?     Affichela derni\'e8re interruption appel\'e9e           42
\par  M        D\'e9place une donn\'e9e                                53
\par  MAP      Affiche la carte m\'e9moire du syst\'e8me               40
\par  O        Ecriture sur un port I/O                          44
\par  P        Saut dans un programme                            46
\par  PAUSE    Pause apr\'e8s chaque \'e9cran                          62
\par  Print-Screen Imprime le contenu de l'\'e9cran                 65
\par  PRN      Positionne le port de sortie imprimante           65
\par  R        Affiche ou modifie un registre                    39
\par  RS       Restaure l'\'e9cran du programme                     67
\par  S        Cherche une donn\'e9e                                52
\par  SHOW     Affiche les instructions du buffer d'historique   54
\par  }{\f2\fs20\lang2057\langfe1036\langnp2057 SNAP     Take snap shot of memory block                    58
\par  }{\f2\fs20 SRC      Bascule entre source, m\'e9lang\'e9 et code             71
\par  SS       Cherche un cha\'eene dans le fichier source courant  71
\par  SYM      Affiche/positionne les symboles                   69
\par  SYMLOC   D\'e9place la base de symboles                       70
\par  T        Tracer une instruction                            45
\par  TRACE    Entrer en mode simulation de trace                55
\par  U        D\'e9sassemblage d'instructions                      38
\par  VECS     Sauve/restaure/compare vecteurs d'interruption    57
\par  VER      Affiche le num\'e9ro de version de Soft-ICE          43
\par  WARN     Positionne une alerte de r\'e9-entrance
\par                  }{\f2\fs20\lang1043\langfe1036\langnp1043 DOS/ROM BIOS                               50
\par  }{\f2\fs20 WATCHV   Positionne la surveillance du mode vid\'e9o          67
\par  WC       Bascule/r\'e8gle la taille de la fen\'eatre code        60
\par  WD       Bascule/r\'e8gle la taille de la fen\'eatre donn\'e9es     60
\par  WIN      Change la taille de la fen\'eatre Soft-ICE           68
\par  WR       Bascule la fen\'eatre registre                       59
\par  X        Sortie de la fen\'eatre Soft-ICE                     45
\par  XG       Aller \'e0 une adresse en mode simulation de trace   56
\par  }{\f2\fs20\lang2057\langfe1036\langnp2057 XP       Program step in trace simulation mode             56
\par  XRSET    Reset back trace history buffer                   57
\par  XT       Single step in trace simulation mode              55
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page {\*\bkmkstart _Toc480604359}APPENDICE C
{\*\bkmkend _Toc480604359}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {{\*\bkmkstart _Toc480604360}FONCTION DES SEQUENCES DE TOUCHES
{\*\bkmkend _Toc480604360}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20     S\'e9quence        Description
\par 
\par }{\b\f2\fs20 D\'e9placement de la fen\'eatree Soft-ICE:
\par }{\f2\fs20     CTRL _     Monter la fen\'eatre d'une case
\par     CTRL _     Descendre la fen\'eatre d'une case
\par  
\par     CTRL ->    D\'e9placer la fen\'eatre d'une case \'e0 droite
\par     CTRL <-    D\'e9placer la fen\'eatre d'une case \'e0 gauche
\par 
\par }{\b\f2\fs20 Modifications de la taille de la fen\'eatre Soft-ICE:
\par }{\f2\fs20     ALT _      Expansion de la fen\'eatre
\par     ALT _      Contraction de la fen\'eatre
\par 
\par }{\b\f2\fs20 Edition de la ligne de Commande:
\par }{\f2\fs20     ->         D\'e9placer le curseur \'e0 droite
\par     <-         d\'e9placer le curseur \'e0 gauche
\par     INS        Basculer en mode insertion
\par     DEL        Effacer le caract\'e8re courant
\par     HOME       D\'e9placer le curseur au d\'e9but de la ligne
\par     END        D\'e9placer le curseur \'e0 la fin de la ligne
\par     _          Affiche la commande pr\'e9c\'e9dente
\par     _          Affiche la commande suivante
\par     SHIFT _    Scrolle l'affichage une ligne vers le haut
\par     SHIFT _    Scrolle l'affichage une ligne vers le bas
\par     PAGE UP    Scrolle l'affichage une page vers le haut
\par     PAGE DN    Scrolle l'affichage une page vers le bas
\par     BKSP       Efface le caract\'e8re pr\'e9c\'e9dent
\par     ESC        Annule la commande courante
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604361}APPENDICE D
{\*\bkmkend _Toc480604361}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }\pard\plain \s2\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel1\adjustright\rin0\lin0\itap0 \b\i\f1\fs28\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { {\*\bkmkstart _Toc480604362}Messages d'Erreur et Descriptions
{\*\bkmkend _Toc480604362}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20   Cet appendice liste et explique les messages d'erreur pouvant \'eatre
\par   g\'e9n\'e9r\'e9s par Soft-ICE.
\par 
\par }{\b\f2\fs20   }{\b\f2\fs20\lang2057\langfe1036\langnp2057 A General Protection Violation Has
\par   Occurred. This is typically caused
\par   by a protected mode instruction.
\par   CS:IP = XXXX:XXXX
\par   Type 'C' to Continue
\par   Type 'R' to Return to Soft-ICE.
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par      }{\f2\fs20 The message arrive quand une instruction du mode
\par      prot\'e9g\'e9 du 80386 est rencontr\'e9e ou s'il se produit un 
\par      chevauchement de segments. Vous pourrez souvent 
\par      d\'e9terminer la cause de ce message en d\'e9sassemblant
\par      l'instruction \'e0 l'adresse sp\'e9cifi\'e9e.
\par      Si le premier octet de l'instruction est 0FH, il s'agit 
\par      probablement d'une instruction du mode prot\'e9g\'e9. Si 
\par      l'instruction tente d'acc\'e9der \'e0 un mot \'e0 l'offset 0FFFFH
\par      dans un segment, il s'agit alors d'un probl\'e8me de 
\par      chevauchement. Si vous entrez C pour continuer, le 
\par      contr\'f4le est pass\'e9 au gestionnaire de l'interruption 0
\par      dans la machine virtuelle DOS.
\par      
\par      Ce  message arrive souvent lorsqu'un programme ex\'e9cute un 
\par      saut vers une adresse ne contenant pas de code valide, ou
\par      dont le code a \'e9t\'e9 alt\'e9r\'e9.
\par 
\par  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Attempt To Divide By 0
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par     }{\f2\fs20 Ce message est affich\'e9 lorsque Soft-ICE \'e9value une expression
\par     et que le diviseur d'une division est \'e9gal \'e0 0.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { }{\lang2057\langfe1036\langnp2057 BPM Break Point Limit Exceeded
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20\lang2057\langfe1036\langnp2057 
\par    }{\f2\fs20 Soft-ICE autorise un maximum de 4 points d'arr\'eat 
\par    m\'e9moire. Ce message est affich\'e9 si vous tentez de 
\par    d\'e9passer cette limite.
\par 
\par }{\b\f2\fs20  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Break Point Table Full
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par    }{\f2\fs20 Soft-ICE autorise un maximum de 16 points d'arr\'eat.
\par    Ce message est affich\'e9 si vous tentez de d\'e9passer
\par    cette limite.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { Count Too Large
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par    La commande Point d'Arr\'eat de Soft-ICE permet 
\par    d'entrer une valeur optionnelle 'count'.
\par    Ce champ peut contenir une valeur maximum de 
\par    FFH. Ce message d'erreur est affich\'e9 si la
\par    valeur sp\'e9cifi\'e9e est sup\'e9rieure \'e0 FFH.
\par 
\par }{\b\f2\fs20  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 DOS Memory Structures Corrupted
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par    }{\f2\fs20 Ce message est affich\'e9 si Soft-ICE d\'e9tecte un probl\'e8me
\par    dans le cha\'eenage des blocs m\'e9moire DOS lors de l'utilisation
\par    de la commande MAP. Ce message peut aussi se produire si 
\par    vous utilisez la commande MAP avec un syst\'e8me d'exploitation
\par    non-DOS.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { Duplicate Break Point
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par     Lorsqu'un point d'arr\'eat est entr\'e9, Soft-ICE compare les
\par     conditions de ce dernier aves celles des points d'arr\'eat
\par     pr\'e9c\'e9demment entr\'e9s. S'il touve des correspondances, ce
\par     message est affich\'e9.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {  }{\lang2057\langfe1036\langnp2057 Interrupt Break Point Limit Exceeded
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20\lang2057\langfe1036\langnp2057 
\par      }{\f2\fs20 Soft-ICE vous permet un maximum de 10 points d'arr\'eat
\par      interruption. Ce message est affich\'e9 si vous tentez 
\par      de d\'e9passer cette limite.
\par 
\par }{\b\f2\fs20   }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Invalid Opcode Has Occurred
\par   CS:IP =XXXX:XXXX
\par   Type 'C' to Continue
\par   Type 'R' to Return to Soft-ICE.
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par       }{\f2\fs20 Quand le 80386 rencontre une instruction ill\'e9gale, il 
\par       g\'e9n\'e8re une interruption 6. Soft-ICE affiche ce message
\par       et vous donne la possibilit\'e9 de continuer ou de retourner
\par       \'e0 Soft-ICE. Si vous choisissez C comme continuer, le 
\par       contr\'f4le est doon\'e9 au gestionnaire de l'interruption 6
\par       dans la machine virtuelle.
\par       
\par       Ce  message arrive souvent lorsqu'un programme ex\'e9cute un 
\par       saut vers une adresse ne contenant pas de code valide, ou
\par       dont le code a \'e9t\'e9 alt\'e9r\'e9.
\par 
\par }{\b\f2\fs20  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 I/O Break Point Limit Exceeded
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par     }{\f2\fs20 Soft_ICE permet un maximum de 10 points d'arr\'eat. Ce message
\par     est affich\'e9 si vous tentez de d\'e9passer cette limite.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { No Alternate Screen
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par    Ce message est affich\'e9 si la commande ALTSCR est utilis\'e9e et
\par    Soft-ICE ne d\'e9tecte qu'une carte vid\'e9o.
\par 
\par }{\b\f2\fs20  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Parameter is Wrong Size
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par     }{\f2\fs20 Certains champs n\'e9cessitent une taille de donn\'e9e particuli\'e8re
\par     (octet, mot, double mot). Ce message est affich\'e9 si la
\par     taille de la donn\'e9e n'est pas corecte.
\par     Par exemple, si vous utilisez la commande 
\par     'BPMP 2000:2000 EQ 1234', vous demandez \'e0 Soft-ICE de
\par     surveiller les acc\'e8s octet \'e0 l'adresse 2000:2000 avec
\par     la valeur 1234H. Comme 1234H est plus grand qu'un octet,
\par     la commande g\'e9n\'e8re le message d'erreur.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { Parameters Required
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par     Beaucoup de commandes de Soft-ICE n\'e9cessitent un
\par     ou plusieurs param\'e8tres. Si une commande n'est pas
\par     entr\'e9e avec le nombre correct de param\'e8tres, ce 
\par     message est affich\'e9.
\par 
\par }{\b\f2\fs20  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Range Break Point Limit Exceeded
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par     }{\f2\fs20 Soft-ICE permet unmaximum de 10 points d'arr\'eats
\par     sur un domaine m\'e9moire. Ce message est affich\'e9 si 
\par     vous tentez de d\'e9passer cette limite.
\par 
\par }{\b\f2\fs20  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Second Parameter Must Be Greater than First
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par     }{\f2\fs20 Quand vous sp\'e9cifiez un domaine m\'e9moire, le 
\par     premier nombre entr\'e9 doit \'eatre la limite inf\'e9rieure
\par     du domaine, sinon ce message est affich\'e9.
\par 
\par }{\b\f2\fs20  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Segment:Offset Can Not Wrap
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par     }{\f2\fs20 La plupart des commandes de Soft-ICE ne permettent
\par     pas \'e0 un pointeur m\'e9moire (segment:offset) de pointer
\par     d'abord en haut de m\'e9moire puis en bas. Par exemple,
\par     le pointeur m\'e9moire FFFF:FFFF enveloppe 2 zones de 
\par     m\'e9moire et est ill\'e9gal. Ce message est affich\'e9 si 
\par     vous tentez d'envelopper de la m\'e9moire haute vers 
\par     }{\f2\fs20\lang2057\langfe1036\langnp2057 la basse.
\par 
\par }{\b\f2\fs20\lang2057\langfe1036\langnp2057    Soft-ICE cannot be loaded.
\par    Needs to load at top of memory.
\par    Load before any TSR's or control programs.
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par       }{\f2\fs20 Soft-ICE doit se charger lui-m\'eame le plus haut
\par       possible en m\'e9moire. Cette m\'e9moire est ensuite 
\par       cach\'e9e \'e0 MS-DOS et rendue invisible pour les 
\par       programmes qui ne peuvent ainsi pas d\'e9truire 
\par       Soft-ICE. Ce message est affich\'e9 si Soft-ICE 
\par       d\'e9tecte qu'un autre programe s'est charg\'e9 avant
\par       lui en haut de la m\'e9moire.
\par 
\par }{\b\f2\fs20   }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Soft-ICE cannot run with other 80386 control programs
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par      }{\f2\fs20 Le 80386 ne permet l'ex\'e9cution que d'un seul programme
\par      en mode prot\'e9g\'e9 \'e0 la fois, et donc, Soft-ICE ne peut
\par      pas cohabiter avec d'autres programmes de contr\'f4le.
\par      En d\'e9buggant des programmes utilisant de l'EMS et 
\par      de l'EEMS, vous pouvez obtenir ce message d'erreur
\par      quand vous essayez de charger Soft-ICE car certains
\par      syst\'e8mes 80386 sont livr\'e9s avec un programme de
\par      contr\'f4le qui utilise le syst\'e8me de pagination du 
\par      80386 pour vous fournir de l'EMS et de l'EEMS avec
\par      une carte qui ne comporte que de la m\'e9moire \'e9tendue.
\par      Vous pouvez, naturellement, utiliser une vraie carte
\par      de m\'e9moire pagin\'e9e pour d\'e9bugger des programmes 
\par      utilisant de l'EMS et de l'EEMS.
\par 
\par }{\b\f2\fs20  }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Soft-ICE has already been loaded
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par     }{\f2\fs20 Ce message s'affiche si vous essayer de lancer une 
\par     deuxi\'e8me fois Soft-ICE.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\lang2057\langfe1036\langnp2057 Soft-ICE has not been loaded
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20\lang2057\langfe1036\langnp2057 
\par    }{\f2\fs20 Ce message s'affiche si vous essayez de d\'e9charger Soft-ICE
\par    alors qu'il n'a jamais \'e9t\'e9 charg\'e9.
\par 
\par }{\b\f2\fs20\lang2057\langfe1036\langnp2057 Soft-ICE loads at the top of extended memory. This may conflict with other
\par programs that use extended memory. If you are sure it will not conflict,
\par then answer 'Y', otherwise answer 'N' and refer to the chapter on loading
\par Soft-ICE with extended memory.
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 
\par    }{\f2\fs20 Ce message survient si vous tentez de charger Soft-ICE
\par    en m\'e9moire \'e9tendue et que S-ICE.SYS n'a pas \'e9t\'e9 charg\'e9
\par    par votre fichier CONFIG.SYS. Cet avertissement sert \'e0
\par    \'e9viter que vous d\'e9truisiez par m\'e9garde un Ram-Disk ou 
\par    tout autre qui pourrait \'eatre charg\'e9 en m\'e9moire \'e9tendue.
\par    Pour plus d'informations, r\'e9f\'e9rez-vous \'e0 la section 2.2,
\par    "Chargement de Soft-ICE" et au chapitre 6, "Options 
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 d'initialisation".
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\lang2057\langfe1036\langnp2057  Soft-ICE will only run on 80386 based machines
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20\lang2057\langfe1036\langnp2057 
\par     }{\f2\fs20 Soft-ICE n\'e9cessite un microprocesseur 80386.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 { Syntax Error
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par     Cemessage est affich\'e9 si les informations entr\'e9es sur
\par     la ligne de commande ne correspondent \'e0 la structure 
\par     }{\f2\fs20\lang2057\langfe1036\langnp2057 d'aucune commande.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\lang2057\langfe1036\langnp2057  The P & G Commands Function In RAM Only
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20\lang2057\langfe1036\langnp2057 
\par    }{\f2\fs20 Soft-ICE utilise deux m\'e9thodes pour impl\'e9menter les
\par    commandes P et G. La premi\'e8re m\'e9thode utilise les 
\par    points d'arr\'eat registre du 80386. Ainsi, si vous avez
\par    d\'e9j\'e0 positionn\'e9 4 points d'arr\'eat style BPM, Soft-ICE 
\par    utilise la m\'e9thode INT 3 qui ne fonctionne qu'en RAM.
\par    Si vous tentez d'utiliser les commandes P ou G en ROM
\par    maintenant, Soft-ICE d\'e9tecte cette condition et affiche
\par    ce message d'erreur.
\par 
\par }\pard\plain \s5\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel4\rin0\lin0\itap0 \b\f2\fs20\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\lang2057\langfe1036\langnp2057 Valid Verbs are R, W, RW, X
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20\lang2057\langfe1036\langnp2057 
\par    }{\f2\fs20 Ce message est affich\'e9 si un verbe incorrect est entr\'e9
\par    dans une commande BPM. les choix de verbes valides pour une
\par    }{\f2\fs20\lang2057\langfe1036\langnp2057 commande BPM sont R(read), W(write),RW(read/write), and X(execute).
\par 
\par }\pard\plain \s1\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\f1\fs32\lang1036\langfe1036\kerning32\cgrid\langnp1036\langfenp1036 {\page {\*\bkmkstart _Toc480604363}APPENDICE E
{\*\bkmkend _Toc480604363}
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par }\pard\plain \s7\ql \li0\ri0\keepn\widctlpar\faauto\outlinelevel6\rin0\lin0\itap0 \b\f2\fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {GUIDE DE DEPANNAGE
\par }\pard\plain \ql \li0\ri0\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1036\langfe1036\cgrid\langnp1036\langfenp1036 {\f2\fs20 
\par Cette appendice donne des solutions a de possibles probl\'e8mes que vous
\par pouvez rencontrer lors de l'utilisation de Soft-ICE. Si vous ne trouvez
\par pas un probl\'e8me ici, relisez le fichier README.SI sur votre disquette 
\par de distribution pour tous les trucs de d\'e9pannage ne figurant pas dans
\par ce manuel.
\par 
\par  L'heure n'est pas correcte \'e0 la fin de la journ\'e9e.
\par 
\par    Soft-ICE ne laisse passer aucune interruption vers le
\par    syst\'e8me lorsque sq fen\'eatre est affich\'e9e. Ceci n'affecte
\par    pas l'horloge temps r\'e9el et tout rentrera dans l'ordre 
\par    au prochain reset de votre machine. Vous pouvez aussi
\par    corriger l'heure en lan\'e7ant le programme UPTIME. Il prend
\par    l'heure dans l'horloge temps r\'e9el et appelle le DOS pour
\par    remettre l'heure \'e0 jour.
\par 
\par En d\'e9buggant un programme qui utilise de l'EMS et de l'EEMS, vous
\par obtenez ce message d'erreur quand vous essayez de charger Soft-ICE
\par }{\f2\fs20\lang2057\langfe1036\langnp2057 "Soft-ICE cannot run with other 80386 control programs".
\par 
\par    }{\f2\fs20 Certains syst\'e8mes 80386 sont livr\'e9s avec un 
\par    programme de contr\'f4le qui utilise le syst\'e8me de 
\par    pagination du 80386 pour vous fournir de l'EMS et de 
\par    l'EEMS avec une carte qui ne comporte que de la 
\par    m\'e9moire \'e9tendue. Le 80386 ne permet l'ex\'e9cution que 
\par    d'un seul programme en mode prot\'e9g\'e9 \'e0 la fois, et 
\par    donc, Soft-ICE ne peut pas cohabiter avec d'autres 
\par    programmes de contr\'f4le. Vous pouvez, naturellement, 
\par    utiliser une vraie carte de m\'e9moire pagin\'e9e pour 
\par    d\'e9bugger des programmes utilisant de l'EMS et de l'EEMS.
\par 
\par Soft-ICE n'arrive pas \'e0 interrompre votre d\'e9bugger.
\par 
\par    Certains debuggers soft ne fonctionnent correctement
\par    qu'avec un seul type de debugging par interruption.
\par    R\'e9f\'e9rez-vous \'e0 la commande ACTION \'e0 la section 5.4.
\par    Il y est list\'e9 trois types d'actions standard qui
\par    peuvent \'eatre choisis lors de l'ex\'e9cution d'un point d'arr\'eat.
\par 
\par    Essayez les trois. Certaines marchent mieux que 
\par    d'autres avec certains debuggers.
\par 
\par Soft-ICE ne fonctionne pas correctement quand votre moniteur est en
\par mode graphique, ou il ne restaure pas correctement l'\'e9cran graphique.
\par 
\par    Soft-ICE n'utilise pas la ROM BIOS pour ses sorties.
\par    Il \'e9crit directement dans la m\'e9moire. Soft-ICE a 
\par    \'e9t\'e9 pr\'e9vu pour fonctionner avec les types de 
\par    contr\'f4leurs suivants ou des mod\'e8les 100% compatibles:
\par       CGA
\par       MDA
\par       Hercules
\par       EGA
\par       VGA
\par    Si voitre contr\'f4leur n'est pas parmi ceux-l\'e0, ou 
\par    n'est pas 100% compatible, vous devrez ytiliser un 
\par    second contr\'f4leur et moniteur et utiliser la
\par    commande ALTSCR d\'e9crite \'e0 la section 5.9.
\par 
\par La s\'e9quence de touches utilis\'e9e pour activer Soft-ICE entre en conflit
\par avec un de vos autres programmes.
\par 
\par    Vous pouvez modifier la s\'e9quence de touches utilis\'e9e
\par    pour activer Soft-ICE \'e0 l'aide de la commande ALTKEY.
\par    r\'e9f\'e9rez-vous \'e0 la commande ALTKEY \'e0 la section 5.8.
\par 
\par Quand votre programme plante, Soft-ICE n'est plus accessible.
\par 
\par     R\'e9f\'e9rez-vous \'e0 la commande BREAK \'e0 la section 5.4.
\par     Cette commande vous permet d'activer la fen\'eatre 
\par     Soft-ICE quand le syst\'e8me est plant\'e9 avec les
\par     interruptions d\'e9sactiv\'e9es.
\par 
\par Apr\'e8s qu'un point d'arr\'eat ait activ\'e9 votre d\'e9bugger, celui-ci
\par ne r\'e9pond plus.
\par 
\par    Il y a deux raisons possibles \'e0 cel\'e0:
\par 
\par    1) Votre d\'e9bugger a caus\'e9 une r\'e9-entrance au niveau 
\par        du DOS ou de la ROM BIOS. Le DOS et LE BIOS 
\par        n'\'e9tant pas pleinemant r\'e9-entrants, votre 
\par        d\'e9bugger ne peut pas fonctionner correctement.
\par        Utiliser la commande WARN pour positionner 
\par        l'avertissement de r\'e9-entrance sur ON. La 
\par        prochaine fois que le DOS sera pr\'eat \'e0 r\'e9-entrer
\par        un message d'avertissement sera affich\'e9 et
\par        vous pourrez choisir de retourner dans Soft-ICE
\par        pour \'e9viter le probl\'e8me. R\'e9f\'e9rez-vous \'e0 la commande
\par        WARN \'e0 la section 5.4.
\par    2) Un break s'est produit au milieu d'une routine 
\par        d'interruption. Certains d\'e9buggers ne savent pas 
\par        traiter ce probl\'e8me. Utilisez ACTION positionn\'e9 
\par        sur HERE, car Soft-ICE vous permet les breaks au 
\par        milieu des routines d'interruption. R\'e9f\'e9rez-vous \'e0 
\par        la section 5.4.
\par 
\par Vous utilisez un moniteur CGA et il y a beaucoup de neige quand
\par Soft-ICE est activ\'e9.
\par 
\par     Certains types de cartes video affichent de la neige si 
\par     les caract\'e8res sont affich\'e9s sans attendre un balayage 
\par     horizontal ou vertical. Pour r\'e9duire la neige, basculez
\par     le mode FLICK ON. R\'e9f\'e9rez-vous \'e0 la commande FLICK \'e0 la
\par     section 5.9.
\par 
\par Quand vous utilisez la commande BOOT, le syst\'e8me commence un
\par red\'e9marrage, puis se plante.
\par 
\par     Soft-ICE utilise l'interruption 19 pour booter \'e0 chaud.
\par     Il y a deux causes pour lesquelles ceci pourrait ne pas
\par     marcher:
\par 
\par     1) Sur un syst\'e8me red\'e9marr\'e9 depuis peu, cette m\'e9thode
\par        fonctionne bien. Mais si un programme "errant" a 
\par        endommag\'e9 le syst\'e8me, cela peut \'e9chouer.
\par    2) Certains programmes utilisant de la m\'e9moire
\par        \'e9tendue ou pagin\'e9e comme les pilotes EMS ou les
\par        caches disques ne sont pas capables de reconna\'eetre
\par        un reset caus\'e9 par l'interruption 19. Quand vous 
\par        d\'e9buggez des pilotes de p\'e9riph\'e9riques ou des
\par        chargeurs de boot qui ont ce probl\'e8me, vous devez 
\par        utiliser la m\'e9thode suivante. D\'e9marrez le syst\'e8me
\par        sans les pilotes causant probl\'e8me; Chargez Soft-ICE;
\par        pr\'e9parez les pilotes pour chargement au prochain
\par        d\'e9marrage; et enfin utilisez la commande BOOT.
\par        R\'e9f\'e9rez-vous  \'e0 la commande BOOT \'e0 la section 5.3.
\par 
\par Vous venez juste d'utiliser la touche SYSREQ pour activer Soft-ICE
\par et votre syst\'e8me semble bloqu\'e9, ou il a commanc\'e9 \'e0 faire une copie
\par d'\'e9cran sur votre imprimante.
\par 
\par     Sur certains claviers, pour g\'e9n\'e9rer un System Request,
\par     il faut appuyer simultan\'e9ment sur les touches ALT et
\par     PrtScr. Si, accidentellement, vous n'appuyez que sur 
\par     la touche PrtScr, le syst\'e8me tentera de faire une copie
\par     d'\'e9cran sur votre imprimante. Si vous n'avez pas 
\par     d'imprimante connect\'e9e, le syst\'e8me semblera bloqu\'e9.
\par     Pour \'e9viter ce probl\'e8me, appuyez avec attention sur les
\par     deux touches ou utilisez la commande ALTKEY pour d\'e9finir
\par     une s\'e9quence de touches diff\'e9rente. R\'e9f\'e9rez-vous \'e0 la 
\par     commande ALTKEY \'e0 la section 5.8.
\par 
\par Vous d\'e9sassembliez des instructions, ou \'e9ditiez ou affichiez la m\'e9moire
\par quan votre d\'e9bugger s'est bloqu\'e9.
\par 
\par     Vous avez acc\'e9d\'e9 une adresse qui a d\'e9clench\'e9 un point
\par     d'arr\'eat de Soft-ICE dont l'ACTION n'\'e9tait pas positionn\'e9
\par     sur HERE. Quand Soft-ICE arrive au point ou vous souhaitez
\par     examiner la m\'e9moire avec votre d\'e9bugger, vous devez 
\par     d\'e9sarmer les point d'arr\'eat de Soft-ICE. Si vous ne le 
\par     faites pas, vous risquez de reprovoquer un point d'arr\'eat.
\par     Ceci va ammener votre d\'e9bugger \'e0 s'activer lui-m\'eame
\par     ce qui peut \'eatre fatal s'il n'est pas r\'e9-entrant.
\par 
\par Apr\'e8s votre sortie de votre d\'e9bugger, votre syst\'e8me se bloque.
\par 
\par     Ce probl\'e8me peut naturellement avoir plusieurs causes.
\par     Un parmi celles possibles est que vous ayez oubli\'e9 de
\par     d\'e9sactiver les points d'arr\'eat de Soft-ICE et ACTION
\par     est toujours postionn\'e9 pour activer votre d\'e9bugger.
\par     Quand le point d'arr\'eat se produit, ACTION tente 
\par     d'activer votre d\'e9bugger mais celui-ci n'est plus en 
\par     m\'e9moire.
\par 
\par Vous positionnez un point d'arr\'eat pour pi\'e9ger l'interrution 15H,
\par fonctions 87H, 88H, ou 89H et le point d'arr\'eat ne s'ex\'e9cute pas.
\par 
\par     Soft-ICE traite ces fonctions de fa\'e7on interne 
\par     en mode prot\'e9g\'e9. Il n'est donc pas possible d'y 
\par     poser des points d'arr\'eat.
\par 
\par Votre programme n'accepte plus d'entr\'e9e clavier, mais le clavier est
\par toujours actif.
\par 
\par     Une touche shift est peut-\'eatre bloqu\'e9e logiquement 
\par     basse. Essayer d'appuyer puis de relacher chaque shift,
\par     control et alt.
\par 
\par Soft-ICE ne peut pas restaurer l'affichage correctement.
\par 
\par     Soft-ICE a une \'e9mulation vid\'e9o puissante qui lui permet
\par     de simuler beaucoup de modes graphiques sp\'e9ciaux.
\par     Activez ce mode par la commande WATCHV ON. Regardez la
\par     description de la commande WATCHV pour plus de d\'e9tails.
\par     Pour des contr\'f4leurs vid\'e9o non compatibles et pour
\par     certains modes rares, il vous faudra utiliser un
\par     deuxi\'e8me moniteur. Voir la commande ALTSCR.
\par 
\par La machine se bloque quand vous \'eates dans Soft-ICE ou quand vous 
\par d\'e9placez la fen\'eatre de Soft-ICE.
\par 
\par    Soft-ICE a des probl\'e8mes de timing avec certains 
\par    claviers. Utilisez la commande NOLEDS dans S-ICE.DAT.
\par    Ceci emp\'eache Soft-ICE d'envoyer des commandes aux LED's
\par    du clavier.
\par }}